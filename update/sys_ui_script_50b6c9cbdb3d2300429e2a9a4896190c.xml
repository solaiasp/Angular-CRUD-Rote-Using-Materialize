<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description/>
        <global>false</global>
        <name>x_293519_princenew.0.89aadbab.chunk</name>
        <script><![CDATA[webpackJsonp([0],{

/***/ 1340:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GoogleMapsAPIWrapper; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__maps_api_loader_maps_api_loader__ = __webpack_require__(1349);



/**
 * Wrapper class that handles the communication with the Google Maps Javascript
 * API v3
 */
var GoogleMapsAPIWrapper = (function () {
    function GoogleMapsAPIWrapper(_loader, _zone) {
        var _this = this;
        this._loader = _loader;
        this._zone = _zone;
        this._map =
            new Promise(function (resolve) { _this._mapResolver = resolve; });
    }
    GoogleMapsAPIWrapper.prototype.createMap = function (el, mapOptions) {
        var _this = this;
        return this._loader.load().then(function () {
            var map = new google.maps.Map(el, mapOptions);
            _this._mapResolver(map);
            return;
        });
    };
    GoogleMapsAPIWrapper.prototype.setMapOptions = function (options) {
        this._map.then(function (m) { m.setOptions(options); });
    };
    /**
     * Creates a google map marker with the map context
     */
    GoogleMapsAPIWrapper.prototype.createMarker = function (options, addToMap) {
        if (options === void 0) { options = {}; }
        if (addToMap === void 0) { addToMap = true; }
        return this._map.then(function (map) {
            if (addToMap) {
                options.map = map;
            }
            return new google.maps.Marker(options);
        });
    };
    GoogleMapsAPIWrapper.prototype.createInfoWindow = function (options) {
        return this._map.then(function () { return new google.maps.InfoWindow(options); });
    };
    /**
     * Creates a google.map.Circle for the current map.
     */
    GoogleMapsAPIWrapper.prototype.createCircle = function (options) {
        return this._map.then(function (map) {
            options.map = map;
            return new google.maps.Circle(options);
        });
    };
    GoogleMapsAPIWrapper.prototype.createPolyline = function (options) {
        return this.getNativeMap().then(function (map) {
            var line = new google.maps.Polyline(options);
            line.setMap(map);
            return line;
        });
    };
    GoogleMapsAPIWrapper.prototype.createPolygon = function (options) {
        return this.getNativeMap().then(function (map) {
            var polygon = new google.maps.Polygon(options);
            polygon.setMap(map);
            return polygon;
        });
    };
    /**
     * Creates a new google.map.Data layer for the current map
     */
    GoogleMapsAPIWrapper.prototype.createDataLayer = function (options) {
        return this._map.then(function (m) {
            var data = new google.maps.Data(options);
            data.setMap(m);
            return data;
        });
    };
    /**
     * Determines if given coordinates are insite a Polygon path.
     */
    GoogleMapsAPIWrapper.prototype.containsLocation = function (latLng, polygon) {
        return google.maps.geometry.poly.containsLocation(latLng, polygon);
    };
    GoogleMapsAPIWrapper.prototype.subscribeToMapEvent = function (eventName) {
        var _this = this;
        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"].create(function (observer) {
            _this._map.then(function (m) {
                m.addListener(eventName, function (arg) { _this._zone.run(function () { return observer.next(arg); }); });
            });
        });
    };
    GoogleMapsAPIWrapper.prototype.setCenter = function (latLng) {
        return this._map.then(function (map) { return map.setCenter(latLng); });
    };
    GoogleMapsAPIWrapper.prototype.getZoom = function () { return this._map.then(function (map) { return map.getZoom(); }); };
    GoogleMapsAPIWrapper.prototype.getBounds = function () {
        return this._map.then(function (map) { return map.getBounds(); });
    };
    GoogleMapsAPIWrapper.prototype.setZoom = function (zoom) {
        return this._map.then(function (map) { return map.setZoom(zoom); });
    };
    GoogleMapsAPIWrapper.prototype.getCenter = function () {
        return this._map.then(function (map) { return map.getCenter(); });
    };
    GoogleMapsAPIWrapper.prototype.panTo = function (latLng) {
        return this._map.then(function (map) { return map.panTo(latLng); });
    };
    GoogleMapsAPIWrapper.prototype.panBy = function (x, y) {
        return this._map.then(function (map) { return map.panBy(x, y); });
    };
    GoogleMapsAPIWrapper.prototype.fitBounds = function (latLng) {
        return this._map.then(function (map) { return map.fitBounds(latLng); });
    };
    GoogleMapsAPIWrapper.prototype.panToBounds = function (latLng) {
        return this._map.then(function (map) { return map.panToBounds(latLng); });
    };
    /**
     * Returns the native Google Maps Map instance. Be careful when using this instance directly.
     */
    GoogleMapsAPIWrapper.prototype.getNativeMap = function () { return this._map; };
    /**
     * Triggers the given event name on the map instance.
     */
    GoogleMapsAPIWrapper.prototype.triggerMapEvent = function (eventName) {
        return this._map.then(function (m) { return google.maps.event.trigger(m, eventName); });
    };
    return GoogleMapsAPIWrapper;
}());

GoogleMapsAPIWrapper.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"] },
];
/** @nocollapse */
GoogleMapsAPIWrapper.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_2__maps_api_loader_maps_api_loader__["a" /* MapsAPILoader */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"], },
]; };
//# sourceMappingURL=google-maps-api-wrapper.js.map

/***/ }),

/***/ 1349:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MapsAPILoader; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);

var MapsAPILoader = (function () {
    function MapsAPILoader() {
    }
    return MapsAPILoader;
}());

MapsAPILoader.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"] },
];
/** @nocollapse */
MapsAPILoader.ctorParameters = function () { return []; };
//# sourceMappingURL=maps-api-loader.js.map

/***/ }),

/***/ 1350:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MarkerManager; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__ = __webpack_require__(1340);



var MarkerManager = (function () {
    function MarkerManager(_mapsWrapper, _zone) {
        this._mapsWrapper = _mapsWrapper;
        this._zone = _zone;
        this._markers = new Map();
    }
    MarkerManager.prototype.deleteMarker = function (marker) {
        var _this = this;
        var m = this._markers.get(marker);
        if (m == null) {
            // marker already deleted
            return Promise.resolve();
        }
        return m.then(function (m) {
            return _this._zone.run(function () {
                m.setMap(null);
                _this._markers.delete(marker);
            });
        });
    };
    MarkerManager.prototype.updateMarkerPosition = function (marker) {
        return this._markers.get(marker).then(function (m) { return m.setPosition({ lat: marker.latitude, lng: marker.longitude }); });
    };
    MarkerManager.prototype.updateTitle = function (marker) {
        return this._markers.get(marker).then(function (m) { return m.setTitle(marker.title); });
    };
    MarkerManager.prototype.updateLabel = function (marker) {
        return this._markers.get(marker).then(function (m) { m.setLabel(marker.label); });
    };
    MarkerManager.prototype.updateDraggable = function (marker) {
        return this._markers.get(marker).then(function (m) { return m.setDraggable(marker.draggable); });
    };
    MarkerManager.prototype.updateIcon = function (marker) {
        return this._markers.get(marker).then(function (m) { return m.setIcon(marker.iconUrl); });
    };
    MarkerManager.prototype.updateOpacity = function (marker) {
        return this._markers.get(marker).then(function (m) { return m.setOpacity(marker.opacity); });
    };
    MarkerManager.prototype.updateVisible = function (marker) {
        return this._markers.get(marker).then(function (m) { return m.setVisible(marker.visible); });
    };
    MarkerManager.prototype.updateZIndex = function (marker) {
        return this._markers.get(marker).then(function (m) { return m.setZIndex(marker.zIndex); });
    };
    MarkerManager.prototype.updateClickable = function (marker) {
        return this._markers.get(marker).then(function (m) { return m.setClickable(marker.clickable); });
    };
    MarkerManager.prototype.addMarker = function (marker) {
        var markerPromise = this._mapsWrapper.createMarker({
            position: { lat: marker.latitude, lng: marker.longitude },
            label: marker.label,
            draggable: marker.draggable,
            icon: marker.iconUrl,
            opacity: marker.opacity,
            visible: marker.visible,
            zIndex: marker.zIndex,
            title: marker.title,
            clickable: marker.clickable
        });
        this._markers.set(marker, markerPromise);
    };
    MarkerManager.prototype.getNativeMarker = function (marker) {
        return this._markers.get(marker);
    };
    MarkerManager.prototype.createEventObservable = function (eventName, marker) {
        var _this = this;
        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"].create(function (observer) {
            _this._markers.get(marker).then(function (m) {
                m.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });
            });
        });
    };
    return MarkerManager;
}());

MarkerManager.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"] },
];
/** @nocollapse */
MarkerManager.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__["a" /* GoogleMapsAPIWrapper */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"], },
]; };
//# sourceMappingURL=marker-manager.js.map

/***/ }),

/***/ 1351:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CircleManager; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__ = __webpack_require__(1340);



var CircleManager = (function () {
    function CircleManager(_apiWrapper, _zone) {
        this._apiWrapper = _apiWrapper;
        this._zone = _zone;
        this._circles = new Map();
    }
    CircleManager.prototype.addCircle = function (circle) {
        this._circles.set(circle, this._apiWrapper.createCircle({
            center: { lat: circle.latitude, lng: circle.longitude },
            clickable: circle.clickable,
            draggable: circle.draggable,
            editable: circle.editable,
            fillColor: circle.fillColor,
            fillOpacity: circle.fillOpacity,
            radius: circle.radius,
            strokeColor: circle.strokeColor,
            strokeOpacity: circle.strokeOpacity,
            strokePosition: circle.strokePosition,
            strokeWeight: circle.strokeWeight,
            visible: circle.visible,
            zIndex: circle.zIndex
        }));
    };
    /**
     * Removes the given circle from the map.
     */
    CircleManager.prototype.removeCircle = function (circle) {
        var _this = this;
        return this._circles.get(circle).then(function (c) {
            c.setMap(null);
            _this._circles.delete(circle);
        });
    };
    CircleManager.prototype.setOptions = function (circle, options) {
        return this._circles.get(circle).then(function (c) { return c.setOptions(options); });
    };
    CircleManager.prototype.getBounds = function (circle) {
        return this._circles.get(circle).then(function (c) { return c.getBounds(); });
    };
    CircleManager.prototype.getCenter = function (circle) {
        return this._circles.get(circle).then(function (c) { return c.getCenter(); });
    };
    CircleManager.prototype.getRadius = function (circle) {
        return this._circles.get(circle).then(function (c) { return c.getRadius(); });
    };
    CircleManager.prototype.setCenter = function (circle) {
        return this._circles.get(circle).then(function (c) { return c.setCenter({ lat: circle.latitude, lng: circle.longitude }); });
    };
    CircleManager.prototype.setEditable = function (circle) {
        return this._circles.get(circle).then(function (c) { return c.setEditable(circle.editable); });
    };
    CircleManager.prototype.setDraggable = function (circle) {
        return this._circles.get(circle).then(function (c) { return c.setDraggable(circle.draggable); });
    };
    CircleManager.prototype.setVisible = function (circle) {
        return this._circles.get(circle).then(function (c) { return c.setVisible(circle.visible); });
    };
    CircleManager.prototype.setRadius = function (circle) {
        return this._circles.get(circle).then(function (c) { return c.setRadius(circle.radius); });
    };
    CircleManager.prototype.createEventObservable = function (eventName, circle) {
        var _this = this;
        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"].create(function (observer) {
            var listener = null;
            _this._circles.get(circle).then(function (c) {
                listener = c.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });
            });
            return function () {
                if (listener !== null) {
                    listener.remove();
                }
            };
        });
    };
    return CircleManager;
}());

CircleManager.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"] },
];
/** @nocollapse */
CircleManager.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__["a" /* GoogleMapsAPIWrapper */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"], },
]; };
//# sourceMappingURL=circle-manager.js.map

/***/ }),

/***/ 1352:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InfoWindowManager; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__ = __webpack_require__(1340);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__marker_manager__ = __webpack_require__(1350);




var InfoWindowManager = (function () {
    function InfoWindowManager(_mapsWrapper, _zone, _markerManager) {
        this._mapsWrapper = _mapsWrapper;
        this._zone = _zone;
        this._markerManager = _markerManager;
        this._infoWindows = new Map();
    }
    InfoWindowManager.prototype.deleteInfoWindow = function (infoWindow) {
        var _this = this;
        var iWindow = this._infoWindows.get(infoWindow);
        if (iWindow == null) {
            // info window already deleted
            return Promise.resolve();
        }
        return iWindow.then(function (i) {
            return _this._zone.run(function () {
                i.close();
                _this._infoWindows.delete(infoWindow);
            });
        });
    };
    InfoWindowManager.prototype.setPosition = function (infoWindow) {
        return this._infoWindows.get(infoWindow).then(function (i) { return i.setPosition({
            lat: infoWindow.latitude,
            lng: infoWindow.longitude
        }); });
    };
    InfoWindowManager.prototype.setZIndex = function (infoWindow) {
        return this._infoWindows.get(infoWindow)
            .then(function (i) { return i.setZIndex(infoWindow.zIndex); });
    };
    InfoWindowManager.prototype.open = function (infoWindow) {
        var _this = this;
        return this._infoWindows.get(infoWindow).then(function (w) {
            if (infoWindow.hostMarker != null) {
                return _this._markerManager.getNativeMarker(infoWindow.hostMarker).then(function (marker) {
                    return _this._mapsWrapper.getNativeMap().then(function (map) { return w.open(map, marker); });
                });
            }
            return _this._mapsWrapper.getNativeMap().then(function (map) { return w.open(map); });
        });
    };
    InfoWindowManager.prototype.close = function (infoWindow) {
        return this._infoWindows.get(infoWindow).then(function (w) { return w.close(); });
    };
    InfoWindowManager.prototype.setOptions = function (infoWindow, options) {
        return this._infoWindows.get(infoWindow).then(function (i) { return i.setOptions(options); });
    };
    InfoWindowManager.prototype.addInfoWindow = function (infoWindow) {
        var options = {
            content: infoWindow.content,
            maxWidth: infoWindow.maxWidth,
            zIndex: infoWindow.zIndex,
            disableAutoPan: infoWindow.disableAutoPan
        };
        if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {
            options.position = { lat: infoWindow.latitude, lng: infoWindow.longitude };
        }
        var infoWindowPromise = this._mapsWrapper.createInfoWindow(options);
        this._infoWindows.set(infoWindow, infoWindowPromise);
    };
    /**
     * Creates a Google Maps event listener for the given InfoWindow as an Observable
     */
    InfoWindowManager.prototype.createEventObservable = function (eventName, infoWindow) {
        var _this = this;
        return __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__["Observable"].create(function (observer) {
            _this._infoWindows.get(infoWindow).then(function (i) {
                i.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });
            });
        });
    };
    return InfoWindowManager;
}());

InfoWindowManager.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__["Injectable"] },
];
/** @nocollapse */
InfoWindowManager.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__["a" /* GoogleMapsAPIWrapper */], },
    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__["NgZone"], },
    { type: __WEBPACK_IMPORTED_MODULE_3__marker_manager__["a" /* MarkerManager */], },
]; };
//# sourceMappingURL=info-window-manager.js.map

/***/ }),

/***/ 1353:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PolygonManager; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__ = __webpack_require__(1340);



var PolygonManager = (function () {
    function PolygonManager(_mapsWrapper, _zone) {
        this._mapsWrapper = _mapsWrapper;
        this._zone = _zone;
        this._polygons = new Map();
    }
    PolygonManager.prototype.addPolygon = function (path) {
        var polygonPromise = this._mapsWrapper.createPolygon({
            clickable: path.clickable,
            draggable: path.draggable,
            editable: path.editable,
            fillColor: path.fillColor,
            fillOpacity: path.fillOpacity,
            geodesic: path.geodesic,
            paths: path.paths,
            strokeColor: path.strokeColor,
            strokeOpacity: path.strokeOpacity,
            strokeWeight: path.strokeWeight,
            visible: path.visible,
            zIndex: path.zIndex,
        });
        this._polygons.set(path, polygonPromise);
    };
    PolygonManager.prototype.updatePolygon = function (polygon) {
        var _this = this;
        var m = this._polygons.get(polygon);
        if (m == null) {
            return Promise.resolve();
        }
        return m.then(function (l) { return _this._zone.run(function () { l.setPaths(polygon.paths); }); });
    };
    PolygonManager.prototype.setPolygonOptions = function (path, options) {
        return this._polygons.get(path).then(function (l) { l.setOptions(options); });
    };
    PolygonManager.prototype.deletePolygon = function (paths) {
        var _this = this;
        var m = this._polygons.get(paths);
        if (m == null) {
            return Promise.resolve();
        }
        return m.then(function (l) {
            return _this._zone.run(function () {
                l.setMap(null);
                _this._polygons.delete(paths);
            });
        });
    };
    PolygonManager.prototype.createEventObservable = function (eventName, path) {
        var _this = this;
        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"].create(function (observer) {
            _this._polygons.get(path).then(function (l) {
                l.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });
            });
        });
    };
    return PolygonManager;
}());

PolygonManager.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"] },
];
/** @nocollapse */
PolygonManager.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__["a" /* GoogleMapsAPIWrapper */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"], },
]; };
//# sourceMappingURL=polygon-manager.js.map

/***/ }),

/***/ 1354:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PolylineManager; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__ = __webpack_require__(1340);



var PolylineManager = (function () {
    function PolylineManager(_mapsWrapper, _zone) {
        this._mapsWrapper = _mapsWrapper;
        this._zone = _zone;
        this._polylines = new Map();
    }
    PolylineManager._convertPoints = function (line) {
        var path = line._getPoints().map(function (point) {
            return { lat: point.latitude, lng: point.longitude };
        });
        return path;
    };
    PolylineManager.prototype.addPolyline = function (line) {
        var path = PolylineManager._convertPoints(line);
        var polylinePromise = this._mapsWrapper.createPolyline({
            clickable: line.clickable,
            draggable: line.draggable,
            editable: line.editable,
            geodesic: line.geodesic,
            strokeColor: line.strokeColor,
            strokeOpacity: line.strokeOpacity,
            strokeWeight: line.strokeWeight,
            visible: line.visible,
            zIndex: line.zIndex,
            path: path
        });
        this._polylines.set(line, polylinePromise);
    };
    PolylineManager.prototype.updatePolylinePoints = function (line) {
        var _this = this;
        var path = PolylineManager._convertPoints(line);
        var m = this._polylines.get(line);
        if (m == null) {
            return Promise.resolve();
        }
        return m.then(function (l) { return _this._zone.run(function () { l.setPath(path); }); });
    };
    PolylineManager.prototype.setPolylineOptions = function (line, options) {
        return this._polylines.get(line).then(function (l) { l.setOptions(options); });
    };
    PolylineManager.prototype.deletePolyline = function (line) {
        var _this = this;
        var m = this._polylines.get(line);
        if (m == null) {
            return Promise.resolve();
        }
        return m.then(function (l) {
            return _this._zone.run(function () {
                l.setMap(null);
                _this._polylines.delete(line);
            });
        });
    };
    PolylineManager.prototype.createEventObservable = function (eventName, line) {
        var _this = this;
        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"].create(function (observer) {
            _this._polylines.get(line).then(function (l) {
                l.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });
            });
        });
    };
    return PolylineManager;
}());

PolylineManager.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"] },
];
/** @nocollapse */
PolylineManager.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__["a" /* GoogleMapsAPIWrapper */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"], },
]; };
//# sourceMappingURL=polyline-manager.js.map

/***/ }),

/***/ 1355:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return KmlLayerManager; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__ = __webpack_require__(1340);



/**
 * Manages all KML Layers for a Google Map instance.
 */
var KmlLayerManager = (function () {
    function KmlLayerManager(_wrapper, _zone) {
        this._wrapper = _wrapper;
        this._zone = _zone;
        this._layers = new Map();
    }
    /**
     * Adds a new KML Layer to the map.
     */
    KmlLayerManager.prototype.addKmlLayer = function (layer) {
        var newLayer = this._wrapper.getNativeMap().then(function (m) {
            return new google.maps.KmlLayer({
                clickable: layer.clickable,
                map: m,
                preserveViewport: layer.preserveViewport,
                screenOverlays: layer.screenOverlays,
                suppressInfoWindows: layer.suppressInfoWindows,
                url: layer.url,
                zIndex: layer.zIndex
            });
        });
        this._layers.set(layer, newLayer);
    };
    KmlLayerManager.prototype.setOptions = function (layer, options) {
        this._layers.get(layer).then(function (l) { return l.setOptions(options); });
    };
    KmlLayerManager.prototype.deleteKmlLayer = function (layer) {
        var _this = this;
        this._layers.get(layer).then(function (l) {
            l.setMap(null);
            _this._layers.delete(layer);
        });
    };
    /**
     * Creates a Google Maps event listener for the given KmlLayer as an Observable
     */
    KmlLayerManager.prototype.createEventObservable = function (eventName, layer) {
        var _this = this;
        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"].create(function (observer) {
            _this._layers.get(layer).then(function (m) {
                m.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });
            });
        });
    };
    return KmlLayerManager;
}());

KmlLayerManager.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"] },
];
/** @nocollapse */
KmlLayerManager.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__["a" /* GoogleMapsAPIWrapper */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"], },
]; };
//# sourceMappingURL=kml-layer-manager.js.map

/***/ }),

/***/ 1356:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DataLayerManager; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__ = __webpack_require__(1340);



/**
 * Manages all Data Layers for a Google Map instance.
 */
var DataLayerManager = (function () {
    function DataLayerManager(_wrapper, _zone) {
        this._wrapper = _wrapper;
        this._zone = _zone;
        this._layers = new Map();
    }
    /**
     * Adds a new Data Layer to the map.
     */
    DataLayerManager.prototype.addDataLayer = function (layer) {
        var _this = this;
        var newLayer = this._wrapper.createDataLayer({
            style: layer.style
        })
            .then(function (d) {
            if (layer.geoJson) {
                _this.getDataFeatures(d, layer.geoJson).then(function (features) { return d.features = features; });
            }
            return d;
        });
        this._layers.set(layer, newLayer);
    };
    DataLayerManager.prototype.deleteDataLayer = function (layer) {
        var _this = this;
        this._layers.get(layer).then(function (l) {
            l.setMap(null);
            _this._layers.delete(layer);
        });
    };
    DataLayerManager.prototype.updateGeoJson = function (layer, geoJson) {
        var _this = this;
        this._layers.get(layer).then(function (l) {
            l.forEach(function (feature) {
                l.remove(feature);
                var index = l.features.indexOf(feature, 0);
                if (index > -1) {
                    l.features.splice(index, 1);
                }
            });
            _this.getDataFeatures(l, geoJson).then(function (features) { return l.features = features; });
        });
    };
    DataLayerManager.prototype.setDataOptions = function (layer, options) {
        this._layers.get(layer).then(function (l) {
            l.setControlPosition(options.controlPosition);
            l.setControls(options.controls);
            l.setDrawingMode(options.drawingMode);
            l.setStyle(options.style);
        });
    };
    /**
     * Creates a Google Maps event listener for the given DataLayer as an Observable
     */
    DataLayerManager.prototype.createEventObservable = function (eventName, layer) {
        var _this = this;
        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"].create(function (observer) {
            _this._layers.get(layer).then(function (d) {
                d.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });
            });
        });
    };
    /**
     * Extract features from a geoJson using google.maps Data Class
     * @param d : google.maps.Data class instance
     * @param geoJson : url or geojson object
     */
    DataLayerManager.prototype.getDataFeatures = function (d, geoJson) {
        return new Promise(function (resolve, reject) {
            if (typeof geoJson === 'object') {
                try {
                    var features = d.addGeoJson(geoJson);
                    resolve(features);
                }
                catch (e) {
                    reject(e);
                }
            }
            else if (typeof geoJson === 'string') {
                d.loadGeoJson(geoJson, null, resolve);
            }
            else {
                reject("Impossible to extract features from geoJson: wrong argument type");
            }
        });
    };
    return DataLayerManager;
}());

DataLayerManager.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"] },
];
/** @nocollapse */
DataLayerManager.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__["a" /* GoogleMapsAPIWrapper */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"], },
]; };
//# sourceMappingURL=data-layer-manager.js.map

/***/ }),

/***/ 1357:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AgmInfoWindow; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_managers_info_window_manager__ = __webpack_require__(1352);


var infoWindowId = 0;
/**
 * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.
 *
 * ### Example
 * ```typescript
 * import { Component } from '@angular/core';
 *
 * @Component({
 *  selector: 'my-map-cmp',
 *  styles: [`
 *    .agm-map-container {
 *      height: 300px;
 *    }
 * `],
 *  template: `
 *    <agm-map [latitude]="lat" [longitude]="lng" [zoom]="zoom">
 *      <agm-marker [latitude]="lat" [longitude]="lng" [label]="'M'">
 *        <agm-info-window [disableAutoPan]="true">
 *          Hi, this is the content of the <strong>info window</strong>
 *        </agm-info-window>
 *      </agm-marker>
 *    </agm-map>
 *  `
 * })
 * ```
 */
var AgmInfoWindow = (function () {
    function AgmInfoWindow(_infoWindowManager, _el) {
        this._infoWindowManager = _infoWindowManager;
        this._el = _el;
        /**
         * Sets the open state for the InfoWindow. You can also call the open() and close() methods.
         */
        this.isOpen = false;
        /**
         * Emits an event when the info window is closed.
         */
        this.infoWindowClose = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this._infoWindowAddedToManager = false;
        this._id = (infoWindowId++).toString();
    }
    AgmInfoWindow.prototype.ngOnInit = function () {
        this.content = this._el.nativeElement.querySelector('.agm-info-window-content');
        this._infoWindowManager.addInfoWindow(this);
        this._infoWindowAddedToManager = true;
        this._updateOpenState();
        this._registerEventListeners();
    };
    /** @internal */
    AgmInfoWindow.prototype.ngOnChanges = function (changes) {
        if (!this._infoWindowAddedToManager) {
            return;
        }
        if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&
            typeof this.longitude === 'number') {
            this._infoWindowManager.setPosition(this);
        }
        if (changes['zIndex']) {
            this._infoWindowManager.setZIndex(this);
        }
        if (changes['isOpen']) {
            this._updateOpenState();
        }
        this._setInfoWindowOptions(changes);
    };
    AgmInfoWindow.prototype._registerEventListeners = function () {
        var _this = this;
        this._infoWindowManager.createEventObservable('closeclick', this).subscribe(function () {
            _this.isOpen = false;
            _this.infoWindowClose.emit();
        });
    };
    AgmInfoWindow.prototype._updateOpenState = function () {
        this.isOpen ? this.open() : this.close();
    };
    AgmInfoWindow.prototype._setInfoWindowOptions = function (changes) {
        var options = {};
        var optionKeys = Object.keys(changes).filter(function (k) { return AgmInfoWindow._infoWindowOptionsInputs.indexOf(k) !== -1; });
        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });
        this._infoWindowManager.setOptions(this, options);
    };
    /**
     * Opens the info window.
     */
    AgmInfoWindow.prototype.open = function () { return this._infoWindowManager.open(this); };
    /**
     * Closes the info window.
     */
    AgmInfoWindow.prototype.close = function () {
        var _this = this;
        return this._infoWindowManager.close(this).then(function () { _this.infoWindowClose.emit(); });
    };
    /** @internal */
    AgmInfoWindow.prototype.id = function () { return this._id; };
    /** @internal */
    AgmInfoWindow.prototype.toString = function () { return 'AgmInfoWindow-' + this._id.toString(); };
    /** @internal */
    AgmInfoWindow.prototype.ngOnDestroy = function () { this._infoWindowManager.deleteInfoWindow(this); };
    return AgmInfoWindow;
}());

AgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];
AgmInfoWindow.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                selector: 'agm-info-window',
                template: "<div class='agm-info-window-content'>\n      <ng-content></ng-content>\n    </div>\n  "
            },] },
];
/** @nocollapse */
AgmInfoWindow.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_1__services_managers_info_window_manager__["a" /* InfoWindowManager */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
]; };
AgmInfoWindow.propDecorators = {
    'latitude': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'longitude': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'disableAutoPan': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'zIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'maxWidth': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'isOpen': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'infoWindowClose': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
};
//# sourceMappingURL=info-window.js.map

/***/ }),

/***/ 1358:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AgmPolylinePoint; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);

/**
 * AgmPolylinePoint represents one element of a polyline within a  {@link
 * SembGoogleMapPolyline}
 */
var AgmPolylinePoint = (function () {
    function AgmPolylinePoint() {
        /**
         * This event emitter gets emitted when the position of the point changed.
         */
        this.positionChanged = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    AgmPolylinePoint.prototype.ngOnChanges = function (changes) {
        if (changes['latitude'] || changes['longitude']) {
            var position = {
                lat: changes['latitude'].currentValue,
                lng: changes['longitude'].currentValue
            };
            this.positionChanged.emit(position);
        }
    };
    return AgmPolylinePoint;
}());

AgmPolylinePoint.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{ selector: 'agm-polyline-point' },] },
];
/** @nocollapse */
AgmPolylinePoint.ctorParameters = function () { return []; };
AgmPolylinePoint.propDecorators = {
    'latitude': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'longitude': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'positionChanged': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
};
//# sourceMappingURL=polyline-point.js.map

/***/ }),

/***/ 1359:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GoogleMapsScriptProtocol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return LAZY_MAPS_API_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return LazyMapsAPILoader; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_browser_globals__ = __webpack_require__(1380);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__maps_api_loader__ = __webpack_require__(1349);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



var GoogleMapsScriptProtocol;
(function (GoogleMapsScriptProtocol) {
    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol["HTTP"] = 1] = "HTTP";
    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol["HTTPS"] = 2] = "HTTPS";
    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol["AUTO"] = 3] = "AUTO";
})(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));
/**
 * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link
 * LazyMapsAPILoaderConfig}.
 */
var LAZY_MAPS_API_CONFIG = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["InjectionToken"]('angular-google-maps LAZY_MAPS_API_CONFIG');
var LazyMapsAPILoader = (function (_super) {
    __extends(LazyMapsAPILoader, _super);
    function LazyMapsAPILoader(config, w, d) {
        var _this = _super.call(this) || this;
        _this._config = config || {};
        _this._windowRef = w;
        _this._documentRef = d;
        return _this;
    }
    LazyMapsAPILoader.prototype.load = function () {
        var _this = this;
        if (this._scriptLoadingPromise) {
            return this._scriptLoadingPromise;
        }
        var script = this._documentRef.getNativeDocument().createElement('script');
        script.type = 'text/javascript';
        script.async = true;
        script.defer = true;
        var callbackName = "angular2GoogleMapsLazyMapsAPILoader";
        script.src = this._getScriptSrc(callbackName);
        this._scriptLoadingPromise = new Promise(function (resolve, reject) {
            _this._windowRef.getNativeWindow()[callbackName] = function () {
                resolve();
            };
            script.onerror = function (error) {
                reject(error);
            };
        });
        this._documentRef.getNativeDocument().body.appendChild(script);
        return this._scriptLoadingPromise;
    };
    LazyMapsAPILoader.prototype._getScriptSrc = function (callbackName) {
        var protocolType = (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;
        var protocol;
        switch (protocolType) {
            case GoogleMapsScriptProtocol.AUTO:
                protocol = '';
                break;
            case GoogleMapsScriptProtocol.HTTP:
                protocol = 'http:';
                break;
            case GoogleMapsScriptProtocol.HTTPS:
                protocol = 'https:';
                break;
        }
        var hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';
        var queryParams = {
            v: this._config.apiVersion || '3',
            callback: callbackName,
            key: this._config.apiKey,
            client: this._config.clientId,
            channel: this._config.channel,
            libraries: this._config.libraries,
            region: this._config.region,
            language: this._config.language
        };
        var params = Object.keys(queryParams)
            .filter(function (k) { return queryParams[k] != null; })
            .filter(function (k) {
            // remove empty arrays
            return !Array.isArray(queryParams[k]) ||
                (Array.isArray(queryParams[k]) && queryParams[k].length > 0);
        })
            .map(function (k) {
            // join arrays as comma seperated strings
            var i = queryParams[k];
            if (Array.isArray(i)) {
                return { key: k, value: i.join(',') };
            }
            return { key: k, value: queryParams[k] };
        })
            .map(function (entry) {
            return entry.key + "=" + entry.value;
        })
            .join('&');
        return protocol + "//" + hostAndPath + "?" + params;
    };
    return LazyMapsAPILoader;
}(__WEBPACK_IMPORTED_MODULE_2__maps_api_loader__["a" /* MapsAPILoader */]));

LazyMapsAPILoader.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"] },
];
/** @nocollapse */
LazyMapsAPILoader.ctorParameters = function () { return [
    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Inject"], args: [LAZY_MAPS_API_CONFIG,] },] },
    { type: __WEBPACK_IMPORTED_MODULE_1__utils_browser_globals__["c" /* WindowRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_1__utils_browser_globals__["b" /* DocumentRef */], },
]; };
//# sourceMappingURL=lazy-maps-api-loader.js.map

/***/ }),

/***/ 1371:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
/*** Optical Module Required Components ***/
__export(__webpack_require__(1601));
__export(__webpack_require__(1610));
__export(__webpack_require__(1615));
__export(__webpack_require__(1617));
__export(__webpack_require__(1622));
__export(__webpack_require__(1624));
__export(__webpack_require__(1626));


/***/ }),

/***/ 1372:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directives__ = __webpack_require__(1602);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "AgmMap", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "AgmCircle", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "AgmInfoWindow", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "AgmKmlLayer", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "AgmDataLayer", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "AgmMarker", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__["f"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "AgmPolygon", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__["g"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "AgmPolyline", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__["h"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "AgmPolylinePoint", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__["i"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services__ = __webpack_require__(1603);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "GoogleMapsAPIWrapper", function() { return __WEBPACK_IMPORTED_MODULE_1__services__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "CircleManager", function() { return __WEBPACK_IMPORTED_MODULE_1__services__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "InfoWindowManager", function() { return __WEBPACK_IMPORTED_MODULE_1__services__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "MarkerManager", function() { return __WEBPACK_IMPORTED_MODULE_1__services__["j"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PolygonManager", function() { return __WEBPACK_IMPORTED_MODULE_1__services__["l"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PolylineManager", function() { return __WEBPACK_IMPORTED_MODULE_1__services__["m"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "KmlLayerManager", function() { return __WEBPACK_IMPORTED_MODULE_1__services__["f"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "DataLayerManager", function() { return __WEBPACK_IMPORTED_MODULE_1__services__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "GoogleMapsScriptProtocol", function() { return __WEBPACK_IMPORTED_MODULE_1__services__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "LAZY_MAPS_API_CONFIG", function() { return __WEBPACK_IMPORTED_MODULE_1__services__["g"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "LazyMapsAPILoader", function() { return __WEBPACK_IMPORTED_MODULE_1__services__["h"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "MapsAPILoader", function() { return __WEBPACK_IMPORTED_MODULE_1__services__["i"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "NoOpMapsAPILoader", function() { return __WEBPACK_IMPORTED_MODULE_1__services__["k"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_module__ = __webpack_require__(1605);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "AgmCoreModule", function() { return __WEBPACK_IMPORTED_MODULE_2__core_module__["a"]; });
// main modules


// core module
// we explicitly export the module here to prevent this Ionic 2 bug:
// http://stevemichelotti.com/integrate-angular-2-google-maps-into-ionic-2/

//# sourceMappingURL=index.js.map

/***/ }),

/***/ 1373:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AgmMap; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_google_maps_api_wrapper__ = __webpack_require__(1340);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_managers_circle_manager__ = __webpack_require__(1351);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_managers_info_window_manager__ = __webpack_require__(1352);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_managers_marker_manager__ = __webpack_require__(1350);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_managers_polygon_manager__ = __webpack_require__(1353);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_managers_polyline_manager__ = __webpack_require__(1354);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_managers_kml_layer_manager__ = __webpack_require__(1355);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_managers_data_layer_manager__ = __webpack_require__(1356);









/**
 * AgmMap renders a Google Map.
 * **Important note**: To be able see a map in the browser, you have to define a height for the
 * element `agm-map`.
 *
 * ### Example
 * ```typescript
 * import { Component } from '@angular/core';
 *
 * @Component({
 *  selector: 'my-map-cmp',
 *  styles: [`
 *    agm-map {
 *      height: 300px;
 *    }
 * `],
 *  template: `
 *    <agm-map [latitude]="lat" [longitude]="lng" [zoom]="zoom">
 *    </agm-map>
 *  `
 * })
 * ```
 */
var AgmMap = (function () {
    function AgmMap(_elem, _mapsWrapper) {
        this._elem = _elem;
        this._mapsWrapper = _mapsWrapper;
        /**
         * The longitude that defines the center of the map.
         */
        this.longitude = 0;
        /**
         * The latitude that defines the center of the map.
         */
        this.latitude = 0;
        /**
         * The zoom level of the map. The default zoom level is 8.
         */
        this.zoom = 8;
        /**
         * Enables/disables if map is draggable.
         */
        // tslint:disable-next-line:no-input-rename
        this.draggable = true;
        /**
         * Enables/disables zoom and center on double click. Enabled by default.
         */
        this.disableDoubleClickZoom = false;
        /**
         * Enables/disables all default UI of the Google map. Please note: When the map is created, this
         * value cannot get updated.
         */
        this.disableDefaultUI = false;
        /**
         * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.
         */
        this.scrollwheel = true;
        /**
         * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are
         * enabled by default.
         */
        this.keyboardShortcuts = true;
        /**
         * The enabled/disabled state of the Zoom control.
         */
        this.zoomControl = true;
        /**
         * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain
         * modes, these styles will only apply to labels and geometry.
         */
        this.styles = [];
        /**
         * When true and the latitude and/or longitude values changes, the Google Maps panTo method is
         * used to
         * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map
         */
        this.usePanning = false;
        /**
         * The initial enabled/disabled state of the Street View Pegman control.
         * This control is part of the default UI, and should be set to false when displaying a map type
         * on which the Street View road overlay should not appear (e.g. a non-Earth map type).
         */
        this.streetViewControl = true;
        /**
         * Sets the viewport to contain the given bounds.
         */
        this.fitBounds = null;
        /**
         * The initial enabled/disabled state of the Scale control. This is disabled by default.
         */
        this.scaleControl = false;
        /**
         * The initial enabled/disabled state of the Map type control.
         */
        this.mapTypeControl = false;
        /**
         * The initial enabled/disabled state of the Pan control.
         */
        this.panControl = false;
        /**
         * The initial enabled/disabled state of the Rotate control.
         */
        this.rotateControl = false;
        /**
         * The initial enabled/disabled state of the Fullscreen control.
         */
        this.fullscreenControl = false;
        /**
         * The map mapTypeId. Defaults to 'roadmap'.
         */
        this.mapTypeId = 'roadmap';
        /**
         * When false, map icons are not clickable. A map icon represents a point of interest,
         * also known as a POI. By default map icons are clickable.
         */
        this.clickableIcons = true;
        /**
         * This setting controls how gestures on the map are handled.
         * Allowed values:
         * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)
         * - 'greedy'      (All touch gestures pan or zoom the map.)
         * - 'none'        (The map cannot be panned or zoomed by user gestures.)
         * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.
         */
        this.gestureHandling = 'auto';
        this._observableSubscriptions = [];
        /**
         * This event emitter gets emitted when the user clicks on the map (but not when they click on a
         * marker or infoWindow).
         */
        this.mapClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event emitter gets emitted when the user right-clicks on the map (but not when they click
         * on a marker or infoWindow).
         */
        this.mapRightClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event emitter gets emitted when the user double-clicks on the map (but not when they click
         * on a marker or infoWindow).
         */
        this.mapDblClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event emitter is fired when the map center changes.
         */
        this.centerChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the viewport bounds have changed.
         */
        this.boundsChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the map becomes idle after panning or zooming.
         */
        this.idle = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the zoom level has changed.
         */
        this.zoomChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the google map is fully initialized.
         * You get the google.maps.Map instance as a result of this EventEmitter.
         */
        this.mapReady = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    /** @internal */
    AgmMap.prototype.ngOnInit = function () {
        // todo: this should be solved with a new component and a viewChild decorator
        var container = this._elem.nativeElement.querySelector('.agm-map-container-inner');
        this._initMapInstance(container);
    };
    AgmMap.prototype._initMapInstance = function (el) {
        var _this = this;
        this._mapsWrapper.createMap(el, {
            center: { lat: this.latitude || 0, lng: this.longitude || 0 },
            zoom: this.zoom,
            minZoom: this.minZoom,
            maxZoom: this.maxZoom,
            disableDefaultUI: this.disableDefaultUI,
            disableDoubleClickZoom: this.disableDoubleClickZoom,
            scrollwheel: this.scrollwheel,
            backgroundColor: this.backgroundColor,
            draggable: this.draggable,
            draggableCursor: this.draggableCursor,
            draggingCursor: this.draggingCursor,
            keyboardShortcuts: this.keyboardShortcuts,
            styles: this.styles,
            zoomControl: this.zoomControl,
            zoomControlOptions: this.zoomControlOptions,
            streetViewControl: this.streetViewControl,
            streetViewControlOptions: this.streetViewControlOptions,
            scaleControl: this.scaleControl,
            scaleControlOptions: this.scaleControlOptions,
            mapTypeControl: this.mapTypeControl,
            mapTypeControlOptions: this.mapTypeControlOptions,
            panControl: this.panControl,
            panControlOptions: this.panControlOptions,
            rotateControl: this.rotateControl,
            rotateControlOptions: this.rotateControlOptions,
            fullscreenControl: this.fullscreenControl,
            fullscreenControlOptions: this.fullscreenControlOptions,
            mapTypeId: this.mapTypeId,
            clickableIcons: this.clickableIcons,
            gestureHandling: this.gestureHandling
        })
            .then(function () { return _this._mapsWrapper.getNativeMap(); })
            .then(function (map) { return _this.mapReady.emit(map); });
        // register event listeners
        this._handleMapCenterChange();
        this._handleMapZoomChange();
        this._handleMapMouseEvents();
        this._handleBoundsChange();
        this._handleIdleEvent();
    };
    /** @internal */
    AgmMap.prototype.ngOnDestroy = function () {
        // unsubscribe all registered observable subscriptions
        this._observableSubscriptions.forEach(function (s) { return s.unsubscribe(); });
    };
    /* @internal */
    AgmMap.prototype.ngOnChanges = function (changes) {
        this._updateMapOptionsChanges(changes);
        this._updatePosition(changes);
    };
    AgmMap.prototype._updateMapOptionsChanges = function (changes) {
        var options = {};
        var optionKeys = Object.keys(changes).filter(function (k) { return AgmMap._mapOptionsAttributes.indexOf(k) !== -1; });
        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });
        this._mapsWrapper.setMapOptions(options);
    };
    /**
     * Triggers a resize event on the google map instance.
     * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.
     * Returns a promise that gets resolved after the event was triggered.
     */
    AgmMap.prototype.triggerResize = function (recenter) {
        var _this = this;
        if (recenter === void 0) { recenter = true; }
        // Note: When we would trigger the resize event and show the map in the same turn (which is a
        // common case for triggering a resize event), then the resize event would not
        // work (to show the map), so we trigger the event in a timeout.
        return new Promise(function (resolve) {
            setTimeout(function () {
                return _this._mapsWrapper.triggerMapEvent('resize').then(function () {
                    if (recenter) {
                        _this.fitBounds != null ? _this._fitBounds() : _this._setCenter();
                    }
                    resolve();
                });
            });
        });
    };
    AgmMap.prototype._updatePosition = function (changes) {
        if (changes['latitude'] == null && changes['longitude'] == null &&
            changes['fitBounds'] == null) {
            // no position update needed
            return;
        }
        // we prefer fitBounds in changes
        if (changes['fitBounds'] && this.fitBounds != null) {
            this._fitBounds();
            return;
        }
        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {
            return;
        }
        this._setCenter();
    };
    AgmMap.prototype._setCenter = function () {
        var newCenter = {
            lat: this.latitude,
            lng: this.longitude,
        };
        if (this.usePanning) {
            this._mapsWrapper.panTo(newCenter);
        }
        else {
            this._mapsWrapper.setCenter(newCenter);
        }
    };
    AgmMap.prototype._fitBounds = function () {
        if (this.usePanning) {
            this._mapsWrapper.panToBounds(this.fitBounds);
            return;
        }
        this._mapsWrapper.fitBounds(this.fitBounds);
    };
    AgmMap.prototype._handleMapCenterChange = function () {
        var _this = this;
        var s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(function () {
            _this._mapsWrapper.getCenter().then(function (center) {
                _this.latitude = center.lat();
                _this.longitude = center.lng();
                _this.centerChange.emit({ lat: _this.latitude, lng: _this.longitude });
            });
        });
        this._observableSubscriptions.push(s);
    };
    AgmMap.prototype._handleBoundsChange = function () {
        var _this = this;
        var s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(function () {
            _this._mapsWrapper.getBounds().then(function (bounds) { _this.boundsChange.emit(bounds); });
        });
        this._observableSubscriptions.push(s);
    };
    AgmMap.prototype._handleMapZoomChange = function () {
        var _this = this;
        var s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(function () {
            _this._mapsWrapper.getZoom().then(function (z) {
                _this.zoom = z;
                _this.zoomChange.emit(z);
            });
        });
        this._observableSubscriptions.push(s);
    };
    AgmMap.prototype._handleIdleEvent = function () {
        var _this = this;
        var s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(function () { _this.idle.emit(void 0); });
        this._observableSubscriptions.push(s);
    };
    AgmMap.prototype._handleMapMouseEvents = function () {
        var _this = this;
        var events = [
            { name: 'click', emitter: this.mapClick },
            { name: 'rightclick', emitter: this.mapRightClick },
            { name: 'dblclick', emitter: this.mapDblClick },
        ];
        events.forEach(function (e) {
            var s = _this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(function (event) {
                var value = { coords: { lat: event.latLng.lat(), lng: event.latLng.lng() } };
                e.emitter.emit(value);
            });
            _this._observableSubscriptions.push(s);
        });
    };
    return AgmMap;
}());

/**
 * Map option attributes that can change over time
 */
AgmMap._mapOptionsAttributes = [
    'disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor',
    'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl',
    'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom',
    'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions',
    'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions',
    'mapTypeId', 'clickableIcons', 'gestureHandling'
];
AgmMap.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                selector: 'agm-map',
                providers: [
                    __WEBPACK_IMPORTED_MODULE_1__services_google_maps_api_wrapper__["a" /* GoogleMapsAPIWrapper */], __WEBPACK_IMPORTED_MODULE_4__services_managers_marker_manager__["a" /* MarkerManager */], __WEBPACK_IMPORTED_MODULE_3__services_managers_info_window_manager__["a" /* InfoWindowManager */], __WEBPACK_IMPORTED_MODULE_2__services_managers_circle_manager__["a" /* CircleManager */], __WEBPACK_IMPORTED_MODULE_6__services_managers_polyline_manager__["a" /* PolylineManager */],
                    __WEBPACK_IMPORTED_MODULE_5__services_managers_polygon_manager__["a" /* PolygonManager */], __WEBPACK_IMPORTED_MODULE_7__services_managers_kml_layer_manager__["a" /* KmlLayerManager */], __WEBPACK_IMPORTED_MODULE_8__services_managers_data_layer_manager__["a" /* DataLayerManager */]
                ],
                host: {
                    // todo: deprecated - we will remove it with the next version
                    '[class.sebm-google-map-container]': 'true'
                },
                styles: ["\n    .agm-map-container-inner {\n      width: inherit;\n      height: inherit;\n    }\n    .agm-map-content {\n      display:none;\n    }\n  "],
                template: "\n    <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\n    <div class='agm-map-content'>\n      <ng-content></ng-content>\n    </div>\n  "
            },] },
];
/** @nocollapse */
AgmMap.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
    { type: __WEBPACK_IMPORTED_MODULE_1__services_google_maps_api_wrapper__["a" /* GoogleMapsAPIWrapper */], },
]; };
AgmMap.propDecorators = {
    'longitude': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'latitude': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'zoom': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'minZoom': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'maxZoom': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'draggable': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mapDraggable',] },],
    'disableDoubleClickZoom': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'disableDefaultUI': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'scrollwheel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'backgroundColor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'draggableCursor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'draggingCursor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'keyboardShortcuts': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'zoomControl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'zoomControlOptions': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'styles': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'usePanning': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'streetViewControl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'streetViewControlOptions': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'fitBounds': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'scaleControl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'scaleControlOptions': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'mapTypeControl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'mapTypeControlOptions': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'panControl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'panControlOptions': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'rotateControl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'rotateControlOptions': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'fullscreenControl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'fullscreenControlOptions': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'mapTypeId': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'clickableIcons': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'gestureHandling': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'mapClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'mapRightClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'mapDblClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'centerChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'boundsChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'idle': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'zoomChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'mapReady': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
};
//# sourceMappingURL=map.js.map

/***/ }),

/***/ 1374:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AgmCircle; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_managers_circle_manager__ = __webpack_require__(1351);


var AgmCircle = (function () {
    function AgmCircle(_manager) {
        this._manager = _manager;
        /**
         * Indicates whether this Circle handles mouse events. Defaults to true.
         */
        this.clickable = true;
        /**
         * If set to true, the user can drag this circle over the map. Defaults to false.
         */
        // tslint:disable-next-line:no-input-rename
        this.draggable = false;
        /**
         * If set to true, the user can edit this circle by dragging the control points shown at
         * the center and around the circumference of the circle. Defaults to false.
         */
        this.editable = false;
        /**
         * The radius in meters on the Earth's surface.
         */
        this.radius = 0;
        /**
         * The stroke position. Defaults to CENTER.
         * This property is not supported on Internet Explorer 8 and earlier.
         */
        this.strokePosition = 'CENTER';
        /**
         * The stroke width in pixels.
         */
        this.strokeWeight = 0;
        /**
         * Whether this circle is visible on the map. Defaults to true.
         */
        this.visible = true;
        /**
         * This event is fired when the circle's center is changed.
         */
        this.centerChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event emitter gets emitted when the user clicks on the circle.
         */
        this.circleClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event emitter gets emitted when the user clicks on the circle.
         */
        this.circleDblClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is repeatedly fired while the user drags the circle.
         */
        this.drag = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the user stops dragging the circle.
         */
        this.dragEnd = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the user starts dragging the circle.
         */
        this.dragStart = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the DOM mousedown event is fired on the circle.
         */
        this.mouseDown = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the DOM mousemove event is fired on the circle.
         */
        this.mouseMove = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired on circle mouseout.
         */
        this.mouseOut = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired on circle mouseover.
         */
        this.mouseOver = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the DOM mouseup event is fired on the circle.
         */
        this.mouseUp = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the circle's radius is changed.
         */
        this.radiusChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the circle is right-clicked on.
         */
        this.rightClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this._circleAddedToManager = false;
        this._eventSubscriptions = [];
    }
    /** @internal */
    AgmCircle.prototype.ngOnInit = function () {
        this._manager.addCircle(this);
        this._circleAddedToManager = true;
        this._registerEventListeners();
    };
    /** @internal */
    AgmCircle.prototype.ngOnChanges = function (changes) {
        if (!this._circleAddedToManager) {
            return;
        }
        if (changes['latitude'] || changes['longitude']) {
            this._manager.setCenter(this);
        }
        if (changes['editable']) {
            this._manager.setEditable(this);
        }
        if (changes['draggable']) {
            this._manager.setDraggable(this);
        }
        if (changes['visible']) {
            this._manager.setVisible(this);
        }
        if (changes['radius']) {
            this._manager.setRadius(this);
        }
        this._updateCircleOptionsChanges(changes);
    };
    AgmCircle.prototype._updateCircleOptionsChanges = function (changes) {
        var options = {};
        var optionKeys = Object.keys(changes).filter(function (k) { return AgmCircle._mapOptions.indexOf(k) !== -1; });
        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });
        if (optionKeys.length > 0) {
            this._manager.setOptions(this, options);
        }
    };
    AgmCircle.prototype._registerEventListeners = function () {
        var _this = this;
        var events = new Map();
        events.set('center_changed', this.centerChange);
        events.set('click', this.circleClick);
        events.set('dblclick', this.circleDblClick);
        events.set('drag', this.drag);
        events.set('dragend', this.dragEnd);
        events.set('dragStart', this.dragStart);
        events.set('mousedown', this.mouseDown);
        events.set('mousemove', this.mouseMove);
        events.set('mouseout', this.mouseOut);
        events.set('mouseover', this.mouseOver);
        events.set('mouseup', this.mouseUp);
        events.set('radius_changed', this.radiusChange);
        events.set('rightclick', this.rightClick);
        events.forEach(function (eventEmitter, eventName) {
            _this._eventSubscriptions.push(_this._manager.createEventObservable(eventName, _this).subscribe(function (value) {
                switch (eventName) {
                    case 'radius_changed':
                        _this._manager.getRadius(_this).then(function (radius) { return eventEmitter.emit(radius); });
                        break;
                    case 'center_changed':
                        _this._manager.getCenter(_this).then(function (center) {
                            return eventEmitter.emit({ lat: center.lat(), lng: center.lng() });
                        });
                        break;
                    default:
                        eventEmitter.emit({ coords: { lat: value.latLng.lat(), lng: value.latLng.lng() } });
                }
            }));
        });
    };
    /** @internal */
    AgmCircle.prototype.ngOnDestroy = function () {
        this._eventSubscriptions.forEach(function (s) { s.unsubscribe(); });
        this._eventSubscriptions = null;
        this._manager.removeCircle(this);
    };
    /**
     * Gets the LatLngBounds of this Circle.
     */
    AgmCircle.prototype.getBounds = function () { return this._manager.getBounds(this); };
    AgmCircle.prototype.getCenter = function () { return this._manager.getCenter(this); };
    return AgmCircle;
}());

AgmCircle._mapOptions = [
    'fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',
    'visible', 'zIndex', 'clickable'
];
AgmCircle.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                selector: 'agm-circle'
            },] },
];
/** @nocollapse */
AgmCircle.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_1__services_managers_circle_manager__["a" /* CircleManager */], },
]; };
AgmCircle.propDecorators = {
    'latitude': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'longitude': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'clickable': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'draggable': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['circleDraggable',] },],
    'editable': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'fillColor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'fillOpacity': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'radius': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'strokeColor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'strokeOpacity': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'strokePosition': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'strokeWeight': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'visible': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'zIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'centerChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'circleClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'circleDblClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'drag': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'dragEnd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'dragStart': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'mouseDown': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'mouseMove': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'mouseOut': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'mouseOver': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'mouseUp': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'radiusChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'rightClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
};
//# sourceMappingURL=circle.js.map

/***/ }),

/***/ 1375:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AgmKmlLayer; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_managers_kml_layer_manager__ = __webpack_require__(1355);


var layerId = 0;
var AgmKmlLayer = (function () {
    function AgmKmlLayer(_manager) {
        this._manager = _manager;
        this._addedToManager = false;
        this._id = (layerId++).toString();
        this._subscriptions = [];
        /**
         * If true, the layer receives mouse events. Default value is true.
         */
        this.clickable = true;
        /**
         * By default, the input map is centered and zoomed to the bounding box of the contents of the
         * layer.
         * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom
         * were never set.
         */
        this.preserveViewport = false;
        /**
         * Whether to render the screen overlays. Default true.
         */
        this.screenOverlays = true;
        /**
         * Suppress the rendering of info windows when layer features are clicked.
         */
        this.suppressInfoWindows = false;
        /**
         * The URL of the KML document to display.
         */
        this.url = null;
        /**
         * The z-index of the layer.
         */
        this.zIndex = null;
        /**
         * This event is fired when a feature in the layer is clicked.
         */
        this.layerClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the KML layers default viewport has changed.
         */
        this.defaultViewportChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the KML layer has finished loading.
         * At this point it is safe to read the status property to determine if the layer loaded
         * successfully.
         */
        this.statusChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    AgmKmlLayer.prototype.ngOnInit = function () {
        if (this._addedToManager) {
            return;
        }
        this._manager.addKmlLayer(this);
        this._addedToManager = true;
        this._addEventListeners();
    };
    AgmKmlLayer.prototype.ngOnChanges = function (changes) {
        if (!this._addedToManager) {
            return;
        }
        this._updatePolygonOptions(changes);
    };
    AgmKmlLayer.prototype._updatePolygonOptions = function (changes) {
        var options = Object.keys(changes)
            .filter(function (k) { return AgmKmlLayer._kmlLayerOptions.indexOf(k) !== -1; })
            .reduce(function (obj, k) {
            obj[k] = changes[k].currentValue;
            return obj;
        }, {});
        if (Object.keys(options).length > 0) {
            this._manager.setOptions(this, options);
        }
    };
    AgmKmlLayer.prototype._addEventListeners = function () {
        var _this = this;
        var listeners = [
            { name: 'click', handler: function (ev) { return _this.layerClick.emit(ev); } },
            { name: 'defaultviewport_changed', handler: function () { return _this.defaultViewportChange.emit(); } },
            { name: 'status_changed', handler: function () { return _this.statusChange.emit(); } },
        ];
        listeners.forEach(function (obj) {
            var os = _this._manager.createEventObservable(obj.name, _this).subscribe(obj.handler);
            _this._subscriptions.push(os);
        });
    };
    /** @internal */
    AgmKmlLayer.prototype.id = function () { return this._id; };
    /** @internal */
    AgmKmlLayer.prototype.toString = function () { return "AgmKmlLayer-" + this._id.toString(); };
    /** @internal */
    AgmKmlLayer.prototype.ngOnDestroy = function () {
        this._manager.deleteKmlLayer(this);
        // unsubscribe all registered observable subscriptions
        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });
    };
    return AgmKmlLayer;
}());

AgmKmlLayer._kmlLayerOptions = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];
AgmKmlLayer.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                selector: 'agm-kml-layer'
            },] },
];
/** @nocollapse */
AgmKmlLayer.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_1__services_managers_kml_layer_manager__["a" /* KmlLayerManager */], },
]; };
AgmKmlLayer.propDecorators = {
    'clickable': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'preserveViewport': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'screenOverlays': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'suppressInfoWindows': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'url': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'zIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'layerClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'defaultViewportChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'statusChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
};
//# sourceMappingURL=kml-layer.js.map

/***/ }),

/***/ 1376:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AgmDataLayer; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_managers_data_layer_manager__ = __webpack_require__(1356);


var layerId = 0;
/**
 * AgmDataLayer enables the user to add data layers to the map.
 *
 * ### Example
 * ```typescript
 * import { Component } from 'angular2/core';
 * import { AgmMap, AgmDataLayer } from
 * 'angular-google-maps/core';
 *
 * @Component({
 *  selector: 'my-map-cmp',
 *  directives: [AgmMap, AgmDataLayer],
 *  styles: [`
 *    .agm-container {
 *      height: 300px;
 *    }
 * `],
 *  template: `
 * <agm-map [latitude]="lat" [longitude]="lng" [zoom]="zoom">
 * 	  <agm-data-layer [geoJson]="geoJsonObject" (layerClick)="clicked($event)" [style]="styleFunc">
 * 	  </agm-data-layer>
 * </agm-map>
 *  `
 * })
 * export class MyMapCmp {
 *   lat: number = -25.274449;
 *   lng: number = 133.775060;
 *   zoom: number = 5;
 *
 * clicked(clickEvent) {
 *    console.log(clickEvent);
 *  }
 *
 *  styleFunc(feature) {
 *    return ({
 *      clickable: false,
 *      fillColor: feature.getProperty('color'),
 *      strokeWeight: 1
 *    });
 *  }
 *
 *  geoJsonObject: Object = {
 *    "type": "FeatureCollection",
 *    "features": [
 *      {
 *        "type": "Feature",
 *        "properties": {
 *          "letter": "G",
 *          "color": "blue",
 *          "rank": "7",
 *          "ascii": "71"
 *        },
 *        "geometry": {
 *          "type": "Polygon",
 *          "coordinates": [
 *            [
 *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],
 *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],
 *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],
 *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],
 *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],
 *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],
 *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],
 *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]
 *            ]
 *          ]
 *        }
 *      },
 *      {
 *        "type": "Feature",
 *        "properties": {
 *          "letter": "o",
 *          "color": "red",
 *          "rank": "15",
 *          "ascii": "111"
 *        },
 *        "geometry": {
 *          "type": "Polygon",
 *          "coordinates": [
 *            [
 *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],
 *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],
 *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],
 *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]
 *            ],
 *            [
 *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],
 *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]
 *            ]
 *          ]
 *        }
 *      },
 *      {
 *        "type": "Feature",
 *        "properties": {
 *          "letter": "o",
 *          "color": "yellow",
 *          "rank": "15",
 *          "ascii": "111"
 *        },
 *        "geometry": {
 *          "type": "Polygon",
 *          "coordinates": [
 *            [
 *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],
 *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],
 *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],
 *              [132.71, -25.64], [131.87, -25.76]
 *            ],
 *            [
 *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],
 *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]
 *            ]
 *          ]
 *        }
 *      },
 *      {
 *        "type": "Feature",
 *        "properties": {
 *          "letter": "g",
 *          "color": "blue",
 *          "rank": "7",
 *          "ascii": "103"
 *        },
 *        "geometry": {
 *          "type": "Polygon",
 *          "coordinates": [
 *            [
 *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],
 *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],
 *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],
 *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],
 *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],
 *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],
 *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]
 *            ],
 *            [
 *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],
 *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]
 *            ]
 *          ]
 *        }
 *      },
 *      {
 *        "type": "Feature",
 *        "properties": {
 *          "letter": "l",
 *          "color": "green",
 *          "rank": "12",
 *          "ascii": "108"
 *        },
 *        "geometry": {
 *          "type": "Polygon",
 *          "coordinates": [
 *            [
 *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]
 *            ]
 *          ]
 *        }
 *      },
 *      {
 *        "type": "Feature",
 *        "properties": {
 *          "letter": "e",
 *          "color": "red",
 *          "rank": "5",
 *          "ascii": "101"
 *        },
 *        "geometry": {
 *          "type": "Polygon",
 *          "coordinates": [
 *            [
 *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],
 *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],
 *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],
 *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],
 *              [144.31, -28.26], [144.14, -27.41]
 *            ],
 *            [
 *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],
 *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]
 *            ]
 *          ]
 *        }
 *      }
 *    ]
 *  };
 * }
 * ```
 */
var AgmDataLayer = (function () {
    function AgmDataLayer(_manager) {
        this._manager = _manager;
        this._addedToManager = false;
        this._id = (layerId++).toString();
        this._subscriptions = [];
        /**
         * This event is fired when a feature in the layer is clicked.
         */
        this.layerClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * The geoJson to be displayed
         */
        this.geoJson = null;
    }
    AgmDataLayer.prototype.ngOnInit = function () {
        if (this._addedToManager) {
            return;
        }
        this._manager.addDataLayer(this);
        this._addedToManager = true;
        this._addEventListeners();
    };
    AgmDataLayer.prototype._addEventListeners = function () {
        var _this = this;
        var listeners = [
            { name: 'click', handler: function (ev) { return _this.layerClick.emit(ev); } },
        ];
        listeners.forEach(function (obj) {
            var os = _this._manager.createEventObservable(obj.name, _this).subscribe(obj.handler);
            _this._subscriptions.push(os);
        });
    };
    /** @internal */
    AgmDataLayer.prototype.id = function () { return this._id; };
    /** @internal */
    AgmDataLayer.prototype.toString = function () { return "AgmDataLayer-" + this._id.toString(); };
    /** @internal */
    AgmDataLayer.prototype.ngOnDestroy = function () {
        this._manager.deleteDataLayer(this);
        // unsubscribe all registered observable subscriptions
        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });
    };
    /** @internal */
    AgmDataLayer.prototype.ngOnChanges = function (changes) {
        var _this = this;
        if (!this._addedToManager) {
            return;
        }
        var geoJsonChange = changes['geoJson'];
        if (geoJsonChange) {
            this._manager.updateGeoJson(this, geoJsonChange.currentValue);
        }
        var dataOptions = {};
        AgmDataLayer._dataOptionsAttributes.forEach(function (k) { return dataOptions[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : _this[k]; });
        this._manager.setDataOptions(this, dataOptions);
    };
    return AgmDataLayer;
}());

AgmDataLayer._dataOptionsAttributes = ['style'];
AgmDataLayer.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                selector: 'agm-data-layer'
            },] },
];
/** @nocollapse */
AgmDataLayer.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_1__services_managers_data_layer_manager__["a" /* DataLayerManager */], },
]; };
AgmDataLayer.propDecorators = {
    'layerClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'geoJson': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'style': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
};
//# sourceMappingURL=data-layer.js.map

/***/ }),

/***/ 1377:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AgmMarker; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_managers_marker_manager__ = __webpack_require__(1350);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__info_window__ = __webpack_require__(1357);



var markerId = 0;
/**
 * AgmMarker renders a map marker inside a {@link AgmMap}.
 *
 * ### Example
 * ```typescript
 * import { Component } from '@angular/core';
 *
 * @Component({
 *  selector: 'my-map-cmp',
 *  styles: [`
 *    .agm-map-container {
 *      height: 300px;
 *    }
 * `],
 *  template: `
 *    <agm-map [latitude]="lat" [longitude]="lng" [zoom]="zoom">
 *      <agm-marker [latitude]="lat" [longitude]="lng" [label]="'M'">
 *      </agm-marker>
 *    </agm-map>
 *  `
 * })
 * ```
 */
var AgmMarker = (function () {
    function AgmMarker(_markerManager) {
        this._markerManager = _markerManager;
        /**
         * If true, the marker can be dragged. Default value is false.
         */
        // tslint:disable-next-line:no-input-rename
        this.draggable = false;
        /**
         * If true, the marker is visible
         */
        this.visible = true;
        /**
         * Whether to automatically open the child info window when the marker is clicked.
         */
        this.openInfoWindow = true;
        /**
         * The marker's opacity between 0.0 and 1.0.
         */
        this.opacity = 1;
        /**
         * All markers are displayed on the map in order of their zIndex, with higher values displaying in
         * front of markers with lower values. By default, markers are displayed according to their
         * vertical position on screen, with lower markers appearing in front of markers further up the
         * screen.
         */
        this.zIndex = 1;
        /**
         * If true, the marker can be clicked. Default value is true.
         */
        // tslint:disable-next-line:no-input-rename
        this.clickable = true;
        /**
         * This event emitter gets emitted when the user clicks on the marker.
         */
        this.markerClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the user stops dragging the marker.
         */
        this.dragEnd = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the user mouses over the marker.
         */
        this.mouseOver = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the user mouses outside the marker.
         */
        this.mouseOut = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * @internal
         */
        this.infoWindow = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["QueryList"]();
        this._markerAddedToManger = false;
        this._observableSubscriptions = [];
        this._id = (markerId++).toString();
    }
    /* @internal */
    AgmMarker.prototype.ngAfterContentInit = function () {
        var _this = this;
        this.handleInfoWindowUpdate();
        this.infoWindow.changes.subscribe(function () { return _this.handleInfoWindowUpdate(); });
    };
    AgmMarker.prototype.handleInfoWindowUpdate = function () {
        var _this = this;
        if (this.infoWindow.length > 1) {
            throw new Error('Expected no more than one info window.');
        }
        this.infoWindow.forEach(function (marker) {
            marker.hostMarker = _this;
        });
    };
    /** @internal */
    AgmMarker.prototype.ngOnChanges = function (changes) {
        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {
            return;
        }
        if (!this._markerAddedToManger) {
            this._markerManager.addMarker(this);
            this._markerAddedToManger = true;
            this._addEventListeners();
            return;
        }
        if (changes['latitude'] || changes['longitude']) {
            this._markerManager.updateMarkerPosition(this);
        }
        if (changes['title']) {
            this._markerManager.updateTitle(this);
        }
        if (changes['label']) {
            this._markerManager.updateLabel(this);
        }
        if (changes['draggable']) {
            this._markerManager.updateDraggable(this);
        }
        if (changes['iconUrl']) {
            this._markerManager.updateIcon(this);
        }
        if (changes['opacity']) {
            this._markerManager.updateOpacity(this);
        }
        if (changes['visible']) {
            this._markerManager.updateVisible(this);
        }
        if (changes['zIndex']) {
            this._markerManager.updateZIndex(this);
        }
        if (changes['clickable']) {
            this._markerManager.updateClickable(this);
        }
    };
    AgmMarker.prototype._addEventListeners = function () {
        var _this = this;
        var cs = this._markerManager.createEventObservable('click', this).subscribe(function () {
            if (_this.openInfoWindow) {
                _this.infoWindow.forEach(function (infoWindow) { return infoWindow.open(); });
            }
            _this.markerClick.emit(null);
        });
        this._observableSubscriptions.push(cs);
        var ds = this._markerManager.createEventObservable('dragend', this)
            .subscribe(function (e) {
            _this.dragEnd.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });
        });
        this._observableSubscriptions.push(ds);
        var mover = this._markerManager.createEventObservable('mouseover', this)
            .subscribe(function (e) {
            _this.mouseOver.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });
        });
        this._observableSubscriptions.push(mover);
        var mout = this._markerManager.createEventObservable('mouseout', this)
            .subscribe(function (e) {
            _this.mouseOut.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });
        });
        this._observableSubscriptions.push(mout);
    };
    /** @internal */
    AgmMarker.prototype.id = function () { return this._id; };
    /** @internal */
    AgmMarker.prototype.toString = function () { return 'AgmMarker-' + this._id.toString(); };
    /** @internal */
    AgmMarker.prototype.ngOnDestroy = function () {
        this._markerManager.deleteMarker(this);
        // unsubscribe all registered observable subscriptions
        this._observableSubscriptions.forEach(function (s) { return s.unsubscribe(); });
    };
    return AgmMarker;
}());

AgmMarker.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                selector: 'agm-marker'
            },] },
];
/** @nocollapse */
AgmMarker.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_1__services_managers_marker_manager__["a" /* MarkerManager */], },
]; };
AgmMarker.propDecorators = {
    'latitude': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'longitude': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'title': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'label': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'draggable': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['markerDraggable',] },],
    'iconUrl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'visible': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'openInfoWindow': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'opacity': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'zIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'clickable': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['markerClickable',] },],
    'markerClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'dragEnd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'mouseOver': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'mouseOut': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'infoWindow': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ContentChildren"], args: [__WEBPACK_IMPORTED_MODULE_2__info_window__["a" /* AgmInfoWindow */],] },],
};
//# sourceMappingURL=marker.js.map

/***/ }),

/***/ 1378:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AgmPolygon; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_managers_polygon_manager__ = __webpack_require__(1353);


/**
 * AgmPolygon renders a polygon on a {@link AgmMap}
 *
 * ### Example
 * ```typescript
 * import { Component } from '@angular/core';
 *
 * @Component({
 *  selector: 'my-map-cmp',
 *  styles: [`
 *    agm-map {
 *      height: 300px;
 *    }
 * `],
 *  template: `
 *    <agm-map [latitude]="lat" [longitude]="lng" [zoom]="zoom">
 *      <agm-polygon [paths]="paths">
 *      </agm-polygon>
 *    </agm-map>
 *  `
 * })
 * export class MyMapCmp {
 *   lat: number = 0;
 *   lng: number = 0;
 *   zoom: number = 10;
 *   paths: Array<LatLngLiteral> = [
 *     { lat: 0,  lng: 10 },
 *     { lat: 0,  lng: 20 },
 *     { lat: 10, lng: 20 },
 *     { lat: 10, lng: 10 },
 *     { lat: 0,  lng: 10 }
 *   ]
 *   // Nesting paths will create a hole where they overlap;
 *   nestedPaths: Array<Array<LatLngLiteral>> = [[
 *     { lat: 0,  lng: 10 },
 *     { lat: 0,  lng: 20 },
 *     { lat: 10, lng: 20 },
 *     { lat: 10, lng: 10 },
 *     { lat: 0,  lng: 10 }
 *   ], [
 *     { lat: 0, lng: 15 },
 *     { lat: 0, lng: 20 },
 *     { lat: 5, lng: 20 },
 *     { lat: 5, lng: 15 },
 *     { lat: 0, lng: 15 }
 *   ]]
 * }
 * ```
 */
var AgmPolygon = (function () {
    function AgmPolygon(_polygonManager) {
        this._polygonManager = _polygonManager;
        /**
         * Indicates whether this Polygon handles mouse events. Defaults to true.
         */
        this.clickable = true;
        /**
         * If set to true, the user can drag this shape over the map. The geodesic
         * property defines the mode of dragging. Defaults to false.
         */
        // tslint:disable-next-line:no-input-rename
        this.draggable = false;
        /**
         * If set to true, the user can edit this shape by dragging the control
         * points shown at the vertices and on each segment. Defaults to false.
         */
        this.editable = false;
        /**
         * When true, edges of the polygon are interpreted as geodesic and will
         * follow the curvature of the Earth. When false, edges of the polygon are
         * rendered as straight lines in screen space. Note that the shape of a
         * geodesic polygon may appear to change when dragged, as the dimensions
         * are maintained relative to the surface of the earth. Defaults to false.
         */
        this.geodesic = false;
        /**
         * The ordered sequence of coordinates that designates a closed loop.
         * Unlike polylines, a polygon may consist of one or more paths.
         *  As a result, the paths property may specify one or more arrays of
         * LatLng coordinates. Paths are closed automatically; do not repeat the
         * first vertex of the path as the last vertex. Simple polygons may be
         * defined using a single array of LatLngs. More complex polygons may
         * specify an array of arrays. Any simple arrays are converted into Arrays.
         * Inserting or removing LatLngs from the Array will automatically update
         * the polygon on the map.
         */
        this.paths = [];
        /**
         * This event is fired when the DOM click event is fired on the Polygon.
         */
        this.polyClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the DOM dblclick event is fired on the Polygon.
         */
        this.polyDblClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is repeatedly fired while the user drags the polygon.
         */
        this.polyDrag = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the user stops dragging the polygon.
         */
        this.polyDragEnd = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the user starts dragging the polygon.
         */
        this.polyDragStart = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the DOM mousedown event is fired on the Polygon.
         */
        this.polyMouseDown = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the DOM mousemove event is fired on the Polygon.
         */
        this.polyMouseMove = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired on Polygon mouseout.
         */
        this.polyMouseOut = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired on Polygon mouseover.
         */
        this.polyMouseOver = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired whe the DOM mouseup event is fired on the Polygon
         */
        this.polyMouseUp = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This even is fired when the Polygon is right-clicked on.
         */
        this.polyRightClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this._polygonAddedToManager = false;
        this._subscriptions = [];
    }
    /** @internal */
    AgmPolygon.prototype.ngAfterContentInit = function () {
        if (!this._polygonAddedToManager) {
            this._init();
        }
    };
    AgmPolygon.prototype.ngOnChanges = function (changes) {
        if (!this._polygonAddedToManager) {
            this._init();
            return;
        }
        this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));
    };
    AgmPolygon.prototype._init = function () {
        this._polygonManager.addPolygon(this);
        this._polygonAddedToManager = true;
        this._addEventListeners();
    };
    AgmPolygon.prototype._addEventListeners = function () {
        var _this = this;
        var handlers = [
            { name: 'click', handler: function (ev) { return _this.polyClick.emit(ev); } },
            { name: 'dbclick', handler: function (ev) { return _this.polyDblClick.emit(ev); } },
            { name: 'drag', handler: function (ev) { return _this.polyDrag.emit(ev); } },
            { name: 'dragend', handler: function (ev) { return _this.polyDragEnd.emit(ev); } },
            { name: 'dragstart', handler: function (ev) { return _this.polyDragStart.emit(ev); } },
            { name: 'mousedown', handler: function (ev) { return _this.polyMouseDown.emit(ev); } },
            { name: 'mousemove', handler: function (ev) { return _this.polyMouseMove.emit(ev); } },
            { name: 'mouseout', handler: function (ev) { return _this.polyMouseOut.emit(ev); } },
            { name: 'mouseover', handler: function (ev) { return _this.polyMouseOver.emit(ev); } },
            { name: 'mouseup', handler: function (ev) { return _this.polyMouseUp.emit(ev); } },
            { name: 'rightclick', handler: function (ev) { return _this.polyRightClick.emit(ev); } },
        ];
        handlers.forEach(function (obj) {
            var os = _this._polygonManager.createEventObservable(obj.name, _this).subscribe(obj.handler);
            _this._subscriptions.push(os);
        });
    };
    AgmPolygon.prototype._updatePolygonOptions = function (changes) {
        return Object.keys(changes)
            .filter(function (k) { return AgmPolygon._polygonOptionsAttributes.indexOf(k) !== -1; })
            .reduce(function (obj, k) {
            obj[k] = changes[k].currentValue;
            return obj;
        }, {});
    };
    /** @internal */
    AgmPolygon.prototype.id = function () { return this._id; };
    /** @internal */
    AgmPolygon.prototype.ngOnDestroy = function () {
        this._polygonManager.deletePolygon(this);
        // unsubscribe all registered observable subscriptions
        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });
    };
    return AgmPolygon;
}());

AgmPolygon._polygonOptionsAttributes = [
    'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map',
    'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable',
    'editable', 'visible'
];
AgmPolygon.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                selector: 'agm-polygon'
            },] },
];
/** @nocollapse */
AgmPolygon.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_1__services_managers_polygon_manager__["a" /* PolygonManager */], },
]; };
AgmPolygon.propDecorators = {
    'clickable': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'draggable': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['polyDraggable',] },],
    'editable': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'fillColor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'fillOpacity': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'geodesic': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'paths': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'strokeColor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'strokeOpacity': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'strokeWeight': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'visible': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'zIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'polyClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'polyDblClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'polyDrag': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'polyDragEnd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'polyDragStart': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'polyMouseDown': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'polyMouseMove': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'polyMouseOut': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'polyMouseOver': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'polyMouseUp': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'polyRightClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
};
//# sourceMappingURL=polygon.js.map

/***/ }),

/***/ 1379:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AgmPolyline; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_managers_polyline_manager__ = __webpack_require__(1354);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__polyline_point__ = __webpack_require__(1358);



var polylineId = 0;
/**
 * AgmPolyline renders a polyline on a {@link AgmMap}
 *
 * ### Example
 * ```typescript
 * import { Component } from '@angular/core';
 *
 * @Component({
 *  selector: 'my-map-cmp',
 *  styles: [`
 *    .agm-map-container {
 *      height: 300px;
 *    }
 * `],
 *  template: `
 *    <agm-map [latitude]="lat" [longitude]="lng" [zoom]="zoom">
 *      <agm-polyline>
 *          <agm-polyline-point [latitude]="latA" [longitude]="lngA">
 *          </agm-polyline-point>
 *          <agm-polyline-point [latitude]="latB" [longitude]="lngB">
 *          </agm-polyline-point>
 *      </agm-polyline>
 *    </agm-map>
 *  `
 * })
 * ```
 */
var AgmPolyline = (function () {
    function AgmPolyline(_polylineManager) {
        this._polylineManager = _polylineManager;
        /**
         * Indicates whether this Polyline handles mouse events. Defaults to true.
         */
        this.clickable = true;
        /**
         * If set to true, the user can drag this shape over the map. The geodesic property defines the
         * mode of dragging. Defaults to false.
         */
        // tslint:disable-next-line:no-input-rename
        this.draggable = false;
        /**
         * If set to true, the user can edit this shape by dragging the control points shown at the
         * vertices and on each segment. Defaults to false.
         */
        this.editable = false;
        /**
         * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of
         * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.
         * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions
         * are maintained relative to the surface of the earth. Defaults to false.
         */
        this.geodesic = false;
        /**
         * Whether this polyline is visible on the map. Defaults to true.
         */
        this.visible = true;
        /**
         * This event is fired when the DOM click event is fired on the Polyline.
         */
        this.lineClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the DOM dblclick event is fired on the Polyline.
         */
        this.lineDblClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is repeatedly fired while the user drags the polyline.
         */
        this.lineDrag = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the user stops dragging the polyline.
         */
        this.lineDragEnd = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the user starts dragging the polyline.
         */
        this.lineDragStart = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the DOM mousedown event is fired on the Polyline.
         */
        this.lineMouseDown = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired when the DOM mousemove event is fired on the Polyline.
         */
        this.lineMouseMove = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired on Polyline mouseout.
         */
        this.lineMouseOut = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired on Polyline mouseover.
         */
        this.lineMouseOver = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This event is fired whe the DOM mouseup event is fired on the Polyline
         */
        this.lineMouseUp = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * This even is fired when the Polyline is right-clicked on.
         */
        this.lineRightClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this._polylineAddedToManager = false;
        this._subscriptions = [];
        this._id = (polylineId++).toString();
    }
    /** @internal */
    AgmPolyline.prototype.ngAfterContentInit = function () {
        var _this = this;
        if (this.points.length) {
            this.points.forEach(function (point) {
                var s = point.positionChanged.subscribe(function () { _this._polylineManager.updatePolylinePoints(_this); });
                _this._subscriptions.push(s);
            });
        }
        if (!this._polylineAddedToManager) {
            this._init();
        }
        var s = this.points.changes.subscribe(function () { return _this._polylineManager.updatePolylinePoints(_this); });
        this._subscriptions.push(s);
        this._polylineManager.updatePolylinePoints(this);
    };
    AgmPolyline.prototype.ngOnChanges = function (changes) {
        if (!this._polylineAddedToManager) {
            this._init();
            return;
        }
        var options = {};
        var optionKeys = Object.keys(changes).filter(function (k) { return AgmPolyline._polylineOptionsAttributes.indexOf(k) !== -1; });
        optionKeys.forEach(function (k) { return options[k] = changes[k].currentValue; });
        this._polylineManager.setPolylineOptions(this, options);
    };
    AgmPolyline.prototype._init = function () {
        this._polylineManager.addPolyline(this);
        this._polylineAddedToManager = true;
        this._addEventListeners();
    };
    AgmPolyline.prototype._addEventListeners = function () {
        var _this = this;
        var handlers = [
            { name: 'click', handler: function (ev) { return _this.lineClick.emit(ev); } },
            { name: 'dblclick', handler: function (ev) { return _this.lineDblClick.emit(ev); } },
            { name: 'drag', handler: function (ev) { return _this.lineDrag.emit(ev); } },
            { name: 'dragend', handler: function (ev) { return _this.lineDragEnd.emit(ev); } },
            { name: 'dragstart', handler: function (ev) { return _this.lineDragStart.emit(ev); } },
            { name: 'mousedown', handler: function (ev) { return _this.lineMouseDown.emit(ev); } },
            { name: 'mousemove', handler: function (ev) { return _this.lineMouseMove.emit(ev); } },
            { name: 'mouseout', handler: function (ev) { return _this.lineMouseOut.emit(ev); } },
            { name: 'mouseover', handler: function (ev) { return _this.lineMouseOver.emit(ev); } },
            { name: 'mouseup', handler: function (ev) { return _this.lineMouseUp.emit(ev); } },
            { name: 'rightclick', handler: function (ev) { return _this.lineRightClick.emit(ev); } },
        ];
        handlers.forEach(function (obj) {
            var os = _this._polylineManager.createEventObservable(obj.name, _this).subscribe(obj.handler);
            _this._subscriptions.push(os);
        });
    };
    /** @internal */
    AgmPolyline.prototype._getPoints = function () {
        if (this.points) {
            return this.points.toArray();
        }
        return [];
    };
    /** @internal */
    AgmPolyline.prototype.id = function () { return this._id; };
    /** @internal */
    AgmPolyline.prototype.ngOnDestroy = function () {
        this._polylineManager.deletePolyline(this);
        // unsubscribe all registered observable subscriptions
        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });
    };
    return AgmPolyline;
}());

AgmPolyline._polylineOptionsAttributes = [
    'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',
    'zIndex'
];
AgmPolyline.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                selector: 'agm-polyline'
            },] },
];
/** @nocollapse */
AgmPolyline.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_1__services_managers_polyline_manager__["a" /* PolylineManager */], },
]; };
AgmPolyline.propDecorators = {
    'clickable': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'draggable': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['polylineDraggable',] },],
    'editable': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'geodesic': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'strokeColor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'strokeOpacity': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'strokeWeight': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'visible': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'zIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'lineClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'lineDblClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'lineDrag': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'lineDragEnd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'lineDragStart': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'lineMouseDown': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'lineMouseMove': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'lineMouseOut': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'lineMouseOver': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'lineMouseUp': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'lineRightClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'points': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ContentChildren"], args: [__WEBPACK_IMPORTED_MODULE_2__polyline_point__["a" /* AgmPolylinePoint */],] },],
};
//# sourceMappingURL=polyline.js.map

/***/ }),

/***/ 1380:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return WindowRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return DocumentRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BROWSER_GLOBALS_PROVIDERS; });
var WindowRef = (function () {
    function WindowRef() {
    }
    WindowRef.prototype.getNativeWindow = function () { return window; };
    return WindowRef;
}());

var DocumentRef = (function () {
    function DocumentRef() {
    }
    DocumentRef.prototype.getNativeDocument = function () { return document; };
    return DocumentRef;
}());

var BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];
//# sourceMappingURL=browser-globals.js.map

/***/ }),

/***/ 1601:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var common_service_1 = __webpack_require__(61);
var page_view_service_1 = __webpack_require__(498);
var router_1 = __webpack_require__(48);
var ngx_cookie_1 = __webpack_require__(62);
//import {OpticalDashboardAlarm} from 'aakaash-optical-models';
var core_2 = __webpack_require__(1372);
var OpticalComponent = /** @class */ (function () {
    function OpticalComponent(router, cookie, commonServices, PageViewService, mapsAPILoader, ngZone) {
        var _this = this;
        this.router = router;
        this.cookie = cookie;
        this.commonServices = commonServices;
        this.PageViewService = PageViewService;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.dummyArr = [];
        this.mapStyle = [];
        this.iconUrl = 'http://icons.iconarchive.com/icons/icons-land/vista-hardware-devices/48/Home-Server-icon.png';
        this.markers = [];
        this.polylines = [];
        this.assetSearch = '';
        this.userType = '';
        this.selectedGrp = 'all';
        this._assetlist = [];
        this._asset_details = [];
        this.assetSubMenus = [];
        this._asset_report_details = [];
        this.groupId = '';
        this.allow_dev_info = false;
        this.allow_link_info = false;
        this.mydate = {};
        this.totalAssets = [];
        this.totalLinkCount = 0;
        this.totalDeviceCount = 0;
        this.devicelength = 0;
        this.dashboardAlarmKeys = [];
        this.totalAlarms = 0;
        this.mapStyleObj = {};
        this.isDashboardEmpty = false;
        this.isDashboardServiceEmpty = false;
        this.isDashboardLinePortEmpty = false;
        this.isDashboardLoading = true;
        this.isDashboardServiceLoading = true;
        this.isDashboardLinePortLoading = true;
        this.opticalAlaramTotalCountData = 0;
        this.opticalAlaramDashboardValues = {
            "optCritical": 0,
            "optMajor": 0,
            "optMinor": 0,
            "optWarning": 0
        };
        this.opticalServicesDashboardVal = {
            "enabled": 0,
            "total": 0,
            "up": 0,
            "down": 0
        };
        this.title = [{ 'maintitle': 'Optical Alarms', 'subtitle': 'Optical Alarms Details' },
            { 'maintitle': 'Optical Services', 'subtitle': 'Optical Alarms Details' },
            { 'maintitle': 'Line Ports', 'subtitle': 'Optical Alarms Details' }];
        this.lineList = [];
        this.opticalServiceObjSend = {};
        this.loader = true;
        this.norecorddata = false;
        this.isRecordTrue = false;
        this.isTopologyError = false;
        this.topologyErrorMessage = "No Records Found";
        this.response = {};
        this.getAlarms = function () {
            _this.commonServices.postRequest('/_optical/OpticalDashboardAlarm', {}).then(function (response1) {
                /*var opticalDashboardAlarm : any = new OpticalDashboardAlarm();
                for(var key in opticalDashboardAlarm){
                    this.dashboardAlarmKeys.push(key);
                }*/
                _this.dashboardAlarmKeys = ['severity', 'count'];
                _this.totalAlarms = 0;
                if (response1.status == "success") {
                    _this.norecorddata = false;
                    _this.isRecordTrue = true;
                    if (response1.items.length > 0 && response1.items[0].OpticalDashboardAlarm) {
                        _this.opticalAlaramDashboardValues = response1.items[0].OpticalDashboardAlarm;
                        _this.opticalAlaramDashboardValues.forEach(function (item) {
                            _this.totalAlarms = _this.totalAlarms + parseInt(item[_this.dashboardAlarmKeys[1]]);
                        });
                        _this.isDashboardLoading = false;
                        _this.isDashboardEmpty = false;
                    }
                    else {
                        _this.isDashboardLoading = false;
                        _this.isDashboardEmpty = true;
                    }
                }
                else {
                    _this.isDashboardLoading = false;
                    _this.isDashboardEmpty = true;
                }
            }, function (err) {
                _this.commonServices.error(err.message);
            });
        };
        this.getTopology = function () {
            var height = window.innerHeight - 236;
            _this.mapStyleObj = { height: height };
            _this.commonServices.postRequest('/_optical/OpticalTopology', {}).then(function (mapResponse) {
                console.log('mapResponse', mapResponse);
                if (mapResponse.status == "success") {
                    _this.isTopologyError = false;
                    var mapDataArr = mapResponse.items[0].TopologyMark;
                    mapDataArr.forEach(function (mapdata) {
                        if (mapdata.type == "Point") {
                            var objIn = {};
                            objIn.latitude = mapdata.coordinates[1];
                            objIn.longitude = mapdata.coordinates[0];
                            // For Multiple  objIn.latitude = mapdata.coordinates[0][1];
                            //    objIn.longitude = mapdata.coordinates[0][0];
                            objIn.name = mapdata.name;
                            _this.markers.push(objIn);
                        }
                        else if (mapdata.type == "LineString") {
                            _this.polylines.push(mapdata);
                        }
                    });
                    console.log("this.markers", _this.markers);
                    _this.latitude = _this.markers[0].latitude;
                    _this.longitude = _this.markers[0].longitude;
                    _this.mapContentName = _this.markers[0].name;
                }
                else {
                    _this.topologyErrorMessage = mapResponse.message;
                    _this.isTopologyError = true;
                    _this.commonServices.error(mapResponse.message);
                }
            }, function (err) {
                _this.isTopologyError = true;
                _this.commonServices.error(err.message);
            });
        };
        /* delayFiveMinuesCall = () => {
          this.intervalId = setInterval(() => {
              console.log('calling..');
              this.getTopology();
              this.getAlarms();
              console.log('calling getAlarms getTopology');
          },300000);
      
         } */
        this.onClickRedirection = function (getname) {
            /*
                    (markerClick)="onClickRedirection(marker.name)"
                    if(getname == 'GPX'){
                        var sendData : any = {};
                        sendData.linePortType = getname;
                        this.PageViewService.setData(sendData);
                    //	this.router.navigate(['/optical-line-ports']); new
                        this.router.navigate(['/optical-ports']);
                    }else{
                        var sendData : any = {};
                        sendData.linePortType = "Netmagic";
                        this.PageViewService.setData(sendData);
                    //	this.router.navigate(['/optical-line-ports']); new
                        this.router.navigate(['/optical-ports']);
            
                    }*/
            var sendData = {};
            sendData.linePortType = getname;
            _this.PageViewService.setData(sendData);
            _this.router.navigate(['/optical-ports']);
        };
        this.onMouseOver = function (infoWindow, gm) {
            if (gm.lastOpen != null) {
                gm.lastOpen.close();
            }
            gm.lastOpen = infoWindow;
            infoWindow.open();
        };
        this.redirectDetails = function (pagetype, type, currentcount) {
            /*pagetype: Type of the Page, type & currentcount is for Alarm Details*/
            //console.log(pagetype);
            if (pagetype == 'alarms') {
                var sendData = {};
                sendData.type = type;
                sendData.currentcount = currentcount;
                _this.PageViewService.setData(sendData);
                _this.router.navigate(['/optical-alarms']);
            }
            else if (pagetype == 'services_up' || pagetype == 'services_down' || pagetype == 'services') {
                var sendData = {};
                sendData.type = pagetype;
                //sendData.gridvalues = this.opticalServiceObjSend;
                _this.PageViewService.setData(sendData);
                _this.router.navigate(['/optical-services']);
            }
            else {
                var sendData = {};
                sendData.linePortType = pagetype;
                _this.PageViewService.setData(sendData);
                //	this.router.navigate(['/optical-line-ports']); new
                _this.router.navigate(['/optical-line-ports']);
            }
        };
    }
    /* ***** OnInit Start Executes First ***** */
    OpticalComponent.prototype.ngOnInit = function () {
        var _this = this;
        var currentUser = this.cookie.getObject('globals');
        var userData = this.cookie.getObject('globals') || {};
        var userType = currentUser.user_type;
        this.mapStyle = [
            {
                "elementType": "labels.text",
                "stylers": [
                    {
                        "visibility": "off"
                    }
                ]
            },
            {
                "featureType": "administrative",
                "elementType": "all",
                "stylers": [
                    {
                        "visibility": "off"
                    }
                ]
            },
            {
                "featureType": "poi",
                "elementType": "all",
                "stylers": [
                    {
                        "visibility": "off"
                    }
                ]
            },
            {
                "featureType": "road",
                "elementType": "all",
                "stylers": [
                    {
                        "visibility": "on"
                    }
                ]
            },
            {
                "featureType": "transit",
                "elementType": "all",
                "stylers": [
                    {
                        "visibility": "off"
                    }
                ]
            },
            {
                "featureType": "landscape",
                "elementType": "all",
                "stylers": [
                    {
                        "hue": "#727D82"
                    },
                    {
                        "saturation": -80
                    },
                    {
                        "lightness": -10
                    }
                ]
            },
            {
                "featureType": "water",
                "elementType": "all",
                "stylers": [
                    {
                        "visibility": "simplified"
                    },
                    {
                        "hue": "#F3F4F4"
                    },
                    {
                        "saturation": -80
                    },
                    {
                        "lightness": 80
                    }
                ]
            }
        ];
        this.userType = userType;
        if (userType == 6) {
            this.groupId = currentUser.group_id;
        }
        this.selectedGrp = 'all';
        this.mydate = new Date();
        this.loader = true;
        var _postData = { "opn": "dashboard", "reporttype": "alarm" };
        this.getTopology();
        this.getAlarms();
        //this.delayFiveMinuesCall();
        /* Optical Service Dashboard Value Fetch old API FOR sERVIACE STATUS */
        var _postServiceData = { "opn": "dashboard", "reporttype": "service" };
        /*this.commonServices.postRequest('/_mcpe/opticalServerdata',_postServiceData).then((response2 : any) => {
            console.log('response2', response2);
           
            if (response2.status == "success") {
                this.norecorddata = false;
                this.isRecordTrue = true;
                //this.opticalAlarmsDetails = response2.items[0];
                if(response2.items.length > 0){
                    this.opticalServicesDashboardVal = {
                        "enabled" : parseInt(response2.items[0].count)
                    }
                    this.isDashboardServiceLoading= false;
                    this.isDashboardServiceEmpty = false;
                }else{
                    this.isDashboardServiceLoading = false;
                    this.isDashboardServiceEmpty = true;
                }
            }else{
                this.isDashboardServiceLoading = false;
                this.isDashboardServiceEmpty = true;
            }
        },(err : any) => {
            //notifications.showError(err.message);
        }); */
        this.commonServices.postRequest('/_optical/OpticalDashboardServiceResponse', {}).then(function (resData) {
            console.log('UPDOWN STATI', resData);
            _this.opticalServiceObjSend = resData;
            if (resData.status == 'success') {
                _this.norecorddata = false;
                _this.isRecordTrue = true;
                if (resData.items.length > 0) {
                    _this.opticalServicesDashboardVal = {
                        "enabled": 0,
                        "total": resData.items[0].upCount + resData.items[0].downCount,
                        "up": resData.items[0].upCount,
                        "down": resData.items[0].downCount
                    };
                    _this.isDashboardServiceLoading = false;
                    _this.isDashboardServiceEmpty = false;
                }
                else {
                    _this.isDashboardServiceLoading = false;
                    _this.isDashboardServiceEmpty = true;
                }
            }
            else {
                _this.isDashboardServiceLoading = false;
                _this.isDashboardServiceEmpty = true;
            }
        }, function (err) {
            _this.commonServices.error(err.message);
        });
        var _postServiceData3 = { "opn": "dashboard", "reporttype": "ports" };
        this.commonServices.postRequest('/_optical/OpticalDashboardSites', {}).then(function (response3) {
            console.log('response3', response3);
            if (response3.status == "success") {
                if (response3.items[0].OpticalDashboardSites.length > 0) {
                    var mapSiteNameCount = {};
                    var finalArr = [];
                    _this.lineList = response3.items[0].OpticalDashboardSites; //new
                    _this.isDashboardLinePortLoading = false;
                    _this.isDashboardLinePortEmpty = false;
                    _this.loader = false;
                    //this.showListContent = true;
                }
                else {
                    _this.isDashboardLinePortLoading = false;
                    _this.isDashboardLinePortEmpty = true;
                }
            }
            else {
                _this.isDashboardLinePortLoading = false;
                _this.isDashboardLinePortEmpty = true;
                // notifications.showError(response.message);
            }
        }, function (err) {
            _this.loader = false;
            _this.commonServices.error(err.message);
        });
    };
    OpticalComponent.prototype.ngOnDestroy = function () {
        clearInterval(this.intervalId);
    };
    OpticalComponent = __decorate([
        core_1.Component({
            selector: 'optical',
            template: __webpack_require__(1606),
            styles: [__webpack_require__(1607)]
        }),
        __metadata("design:paramtypes", [router_1.Router, ngx_cookie_1.CookieService, common_service_1.CommonService, page_view_service_1.PageViewService, core_2.MapsAPILoader, core_1.NgZone])
    ], OpticalComponent);
    return OpticalComponent;
}());
exports.OpticalComponent = OpticalComponent;


/***/ }),

/***/ 1602:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directives_map__ = __webpack_require__(1373);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return __WEBPACK_IMPORTED_MODULE_0__directives_map__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__directives_circle__ = __webpack_require__(1374);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_1__directives_circle__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directives_info_window__ = __webpack_require__(1357);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_2__directives_info_window__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__directives_kml_layer__ = __webpack_require__(1375);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return __WEBPACK_IMPORTED_MODULE_3__directives_kml_layer__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__directives_data_layer__ = __webpack_require__(1376);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_4__directives_data_layer__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__directives_marker__ = __webpack_require__(1377);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return __WEBPACK_IMPORTED_MODULE_5__directives_marker__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__directives_polygon__ = __webpack_require__(1378);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return __WEBPACK_IMPORTED_MODULE_6__directives_polygon__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__directives_polyline__ = __webpack_require__(1379);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return __WEBPACK_IMPORTED_MODULE_7__directives_polyline__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__directives_polyline_point__ = __webpack_require__(1358);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return __WEBPACK_IMPORTED_MODULE_8__directives_polyline_point__["a"]; });









//# sourceMappingURL=directives.js.map

/***/ }),

/***/ 1603:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__services_google_maps_api_wrapper__ = __webpack_require__(1340);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_0__services_google_maps_api_wrapper__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_managers_circle_manager__ = __webpack_require__(1351);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_1__services_managers_circle_manager__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_managers_info_window_manager__ = __webpack_require__(1352);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return __WEBPACK_IMPORTED_MODULE_2__services_managers_info_window_manager__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_managers_marker_manager__ = __webpack_require__(1350);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return __WEBPACK_IMPORTED_MODULE_3__services_managers_marker_manager__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_managers_polygon_manager__ = __webpack_require__(1353);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return __WEBPACK_IMPORTED_MODULE_4__services_managers_polygon_manager__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_managers_polyline_manager__ = __webpack_require__(1354);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return __WEBPACK_IMPORTED_MODULE_5__services_managers_polyline_manager__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_managers_kml_layer_manager__ = __webpack_require__(1355);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return __WEBPACK_IMPORTED_MODULE_6__services_managers_kml_layer_manager__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_managers_data_layer_manager__ = __webpack_require__(1356);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_7__services_managers_data_layer_manager__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_maps_api_loader_lazy_maps_api_loader__ = __webpack_require__(1359);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return __WEBPACK_IMPORTED_MODULE_8__services_maps_api_loader_lazy_maps_api_loader__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return __WEBPACK_IMPORTED_MODULE_8__services_maps_api_loader_lazy_maps_api_loader__["b"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return __WEBPACK_IMPORTED_MODULE_8__services_maps_api_loader_lazy_maps_api_loader__["c"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_maps_api_loader_maps_api_loader__ = __webpack_require__(1349);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return __WEBPACK_IMPORTED_MODULE_9__services_maps_api_loader_maps_api_loader__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__services_maps_api_loader_noop_maps_api_loader__ = __webpack_require__(1604);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return __WEBPACK_IMPORTED_MODULE_10__services_maps_api_loader_noop_maps_api_loader__["a"]; });











//# sourceMappingURL=services.js.map

/***/ }),

/***/ 1604:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NoOpMapsAPILoader; });
/**
 * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`
 * Tag.
 * It's important that the Google Maps API script gets loaded first on the page.
 */
var NoOpMapsAPILoader = (function () {
    function NoOpMapsAPILoader() {
    }
    NoOpMapsAPILoader.prototype.load = function () {
        if (!window.google || !window.google.maps) {
            throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');
        }
        return Promise.resolve();
    };
    return NoOpMapsAPILoader;
}());

//# sourceMappingURL=noop-maps-api-loader.js.map

/***/ }),

/***/ 1605:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export coreDirectives */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AgmCoreModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__directives_map__ = __webpack_require__(1373);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directives_circle__ = __webpack_require__(1374);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__directives_info_window__ = __webpack_require__(1357);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__directives_marker__ = __webpack_require__(1377);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__directives_polygon__ = __webpack_require__(1378);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__directives_polyline__ = __webpack_require__(1379);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__directives_polyline_point__ = __webpack_require__(1358);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__directives_kml_layer__ = __webpack_require__(1375);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__directives_data_layer__ = __webpack_require__(1376);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__services_maps_api_loader_lazy_maps_api_loader__ = __webpack_require__(1359);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__services_maps_api_loader_maps_api_loader__ = __webpack_require__(1349);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__utils_browser_globals__ = __webpack_require__(1380);














/**
 * @internal
 */
function coreDirectives() {
    return [
        __WEBPACK_IMPORTED_MODULE_1__directives_map__["a" /* AgmMap */], __WEBPACK_IMPORTED_MODULE_4__directives_marker__["a" /* AgmMarker */], __WEBPACK_IMPORTED_MODULE_3__directives_info_window__["a" /* AgmInfoWindow */], __WEBPACK_IMPORTED_MODULE_2__directives_circle__["a" /* AgmCircle */],
        __WEBPACK_IMPORTED_MODULE_5__directives_polygon__["a" /* AgmPolygon */], __WEBPACK_IMPORTED_MODULE_6__directives_polyline__["a" /* AgmPolyline */], __WEBPACK_IMPORTED_MODULE_7__directives_polyline_point__["a" /* AgmPolylinePoint */], __WEBPACK_IMPORTED_MODULE_8__directives_kml_layer__["a" /* AgmKmlLayer */],
        __WEBPACK_IMPORTED_MODULE_9__directives_data_layer__["a" /* AgmDataLayer */]
    ];
}
/**
 * The angular-google-maps core module. Contains all Directives/Services/Pipes
 * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.
 */
var AgmCoreModule = (function () {
    function AgmCoreModule() {
    }
    /**
     * Please use this method when you register the module at the root level.
     */
    AgmCoreModule.forRoot = function (lazyMapsAPILoaderConfig) {
        return {
            ngModule: AgmCoreModule,
            providers: __WEBPACK_IMPORTED_MODULE_12__utils_browser_globals__["a" /* BROWSER_GLOBALS_PROVIDERS */].concat([
                { provide: __WEBPACK_IMPORTED_MODULE_11__services_maps_api_loader_maps_api_loader__["a" /* MapsAPILoader */], useClass: __WEBPACK_IMPORTED_MODULE_10__services_maps_api_loader_lazy_maps_api_loader__["c" /* LazyMapsAPILoader */] },
                { provide: __WEBPACK_IMPORTED_MODULE_10__services_maps_api_loader_lazy_maps_api_loader__["b" /* LAZY_MAPS_API_CONFIG */], useValue: lazyMapsAPILoaderConfig }
            ]),
        };
    };
    return AgmCoreModule;
}());

AgmCoreModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{ declarations: coreDirectives(), exports: coreDirectives() },] },
];
/** @nocollapse */
AgmCoreModule.ctorParameters = function () { return []; };
//# sourceMappingURL=core.module.js.map

/***/ }),

/***/ 1606:
/***/ (function(module, exports) {

module.exports = "<section id=\"main-content\">\n    <section class=\"wrapper\">\n        <ol class=\"breadcrumb\">\n             <li (click)=\"goToHomePage()\">Home</li>\n            <li class=\"active\">Optical Wave Services</li>\n        </ol>\n        <div class=\"row\" id=\"optical-dashboard\">\n                <div class=\"col-md-4\">\n                    \n                    <div class=\"col-md-12 \">\n                        <div class=\"box-title\">\n                            <div class=\"pull-left\">\n                                <img-icon class=\"svg\" src=\"user-management.svg\"></img-icon> \n                                <h3 class=\"ng-binding\">{{title[1].maintitle}}</h3>\n                            </div>\n                            <div class=\"clearfix\"></div>\n                        </div>\n                        <div class=\"box-border\">\n                            <!-- <div class=\"box-customer\">\n                                        <ul>\n                                          <li><span class=\"box1-checkbox\"></span>Customer</li>\n                                          <li><span class=\"box2-checkbox\"></span>Sify</li>\n                                        </ul>\n                                        <div class=\"clearfix\"></div>\n                                      </div>    -->\n                            <div class=\"box-tab\">\n                                <!-- Nav tabs -->\n                                <div class=\"row norecordTopology\" *ngIf=\"isDashboardServiceEmpty\">\n                                    <span class=\"watermark\"><i class=\"fa fa-fw fa-inbox\"></i> No Records Found</span>\n                                </div>\n                                <div *ngIf=\"isDashboardServiceLoading\">\n                                    <i class=\"fa fa-circle-o-notch fa-spin\"></i> Loading...</div>\n                                <div class=\"tab-content \" *ngIf=\"!isDashboardServiceLoading && !isDashboardServiceEmpty\">\n                                    <div role=\"tabpanel\" class=\"tab-pane active\" id=\"today1\">\n                                        <div class=\"row\">\n                                            <div class=\"col-xs-4 \" (click)=\"redirectDetails('services')\" role=\"button\" tabindex=\"0\">\n                                                <div class=\"color-block-1\">{{opticalServicesDashboardVal.total}}</div>\n                                                <div class=\"block-open\">TOTAL</div>\n                                            </div>\n                                            <div class=\"col-xs-4 \" (click)=\"redirectDetails('services_up')\" role=\"button\" tabindex=\"0\">\n                                                <div class=\"color-block-1\">{{opticalServicesDashboardVal.up}}</div>\n                                                <div class=\"block-in-progress block-closed\">UP</div>\n                                            </div>\n                                            <div class=\"col-xs-4 \" (click)=\"redirectDetails('services_down')\" role=\"button\" tabindex=\"0\">\n                                                <div class=\"color-block-1\">{{opticalServicesDashboardVal.down}}</div>\n                                                <div class=\"block-in-progress block-in-critical\">DOWN</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- end ngIf: widget.data && widget.isReady -->\n                                <!-- ngIf: !widget.isReady -->\n                            </div>\n                        </div>\n                        <div class=\"clearfix\"></div>\n                    </div>\n                    <div class=\"col-md-12\">\n\n                        <div class=\"box-title\">\n                            <div class=\"titleCustData\">\n                                <img-icon class=\"svg\" src=\"user-management.svg\"></img-icon> \n                                <h3 class=\"ng-binding\">{{title[2].maintitle}}</h3>\n                            </div>\n                            <div class=\"clearfix\"></div>\n                        </div>\n                        <div class=\"box-border\">\n                            <!-- <div class=\"box-customer\">\n                                            <ul>\n                                              <li><span class=\"box1-checkbox\"></span>Customer</li>\n                                              <li><span class=\"box2-checkbox\"></span>Sify</li>\n                                            </ul>\n                                            <div class=\"clearfix\"></div>\n                                          </div>    -->\n                            <div class=\"box-tab\">\n                                <div class=\"row norecordTopology\" *ngIf=\"isDashboardLinePortEmpty\">\n                                    <span class=\"watermark\"><i class=\"fa fa-fw fa-inbox\"></i> No Records Found</span>\n                                </div>\n                                <div *ngIf=\"isDashboardLinePortLoading\">\n                                    <i class=\"fa fa-circle-o-notch fa-spin\"></i> Loading...</div>\n                                <!-- Nav tabs -->\n                                <div class=\"tab-content \" *ngIf=\"!isDashboardLinePortLoading && !isDashboardLinePortEmpty\">\n                                    <div role=\"tabpanel\" class=\"tab-pane active\" id=\"today1\">\n                                        <div class=\"row\">\n                                            <div class=\"col-xs-4\" *ngFor='let list of lineList' (click)=\"redirectDetails(list.siteName)\" role=\"button\" tabindex=\"0\">\n                                                <div class=\"color-block-1 ng-binding\">{{list.count}}</div>\n                                              <!-- <div class=\"color-block-2 ng-binding\">0</div> -->\n                                                <div class=\"block-open\">{{list.siteName | uppercase}}</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clearfix\"></div>\n                    </div>\n                    <div class=\"col-md-12 \">\n                            <div class=\"box-title\">\n                                <div class=\"pull-left\">\n                                    <img-icon class=\"svg\" src=\"user-management.svg\"></img-icon> \n                                    <h3 class=\"ng-binding\">{{title[0].maintitle}}</h3>\n                                </div>\n                                <div class=\"clearfix\"></div>\n                            </div>\n                            <div class=\"box-border\">\n                                <!-- <div class=\"box-customer\">\n                                        <ul>\n                                          <li><span class=\"box1-checkbox\"></span>Customer</li>\n                                          <li><span class=\"box2-checkbox\"></span>Sify</li>\n                                        </ul>\n                                        <div class=\"clearfix\"></div>\n                                      </div>    -->\n                                <div class=\"box-tab\">\n                                    <!-- Nav tabs -->\n    \n                                    <div class=\"tab-content \">\n                                        <div role=\"tabpanel\" class=\"tab-pane active\" id=\"today1\">\n                                            <div class=\"row norecordTopology\" *ngIf=\"isDashboardEmpty\">\n                                                <span class=\"watermark\"><i class=\"fa fa-fw fa-inbox\"></i> No Records Found</span>\n                                            </div>\n                                            <div *ngIf=\"isDashboardLoading\">\n                                                <i class=\"fa fa-circle-o-notch fa-spin\"></i> Loading...</div>\n                                            <div class=\"row\" *ngIf=\"!isDashboardLoading && !isDashboardEmpty\">\n                                                <div class=\"col-xs-4 \" (click)=\"redirectDetails('alarms', 'all', opticalAlaramDashboardValues.optCritical+opticalAlaramDashboardValues.optMajor+opticalAlaramDashboardValues.optMinor+opticalAlaramDashboardValues.optWarning)\"\n                                                    role=\"button\" tabindex=\"0\">\n                                                    <div class=\"color-block-1 ng-binding\">{{totalAlarms}}</div>\n                                                    <!-- <div class=\"color-block-2 ng-binding\">0</div> -->\n                                                    <div class=\"block-open\">TOTAL</div>\n                                                </div>\n                                                <div *ngFor=\"let alarm of opticalAlaramDashboardValues\" class=\"col-xs-4 \" (click)=\"redirectDetails('alarms', alarm[dashboardAlarmKeys[0]], opticalAlaramDashboardValues.optCritical)\" role=\"button\"\n                                                    tabindex=\"0\">\n                                                    <div class=\"color-block-1 ng-binding\">{{alarm[dashboardAlarmKeys[1]]}}</div>\n                                                    <div class=\"optical-block\" [(ngClass)]=\"alarm[dashboardAlarmKeys[0]]\">{{ alarm[dashboardAlarmKeys[0]].toUpperCase() }}</div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div role=\"tabpanel\" class=\"tab-pane active\" id=\"today1\">\n                                            <div class=\"row\">\n                                                <div class=\"col-xs-4 \" (click)=\"redirectDetails()\" role=\"button\" tabindex=\"0\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <!-- end ngIf: widget.data && widget.isReady -->\n                                    <!-- ngIf: !widget.isReady -->\n                                </div>\n                            </div>\n                            <div class=\"clearfix\"></div>\n                        </div>\n                </div>\n\t\t\t\t<div class=\"col-md-8\" id=\"topology-map\">\n                        <div class=\"box-title\">\n                            <div class=\"titleCustData\">\n                                <img-icon class=\"svg\" src=\"user-management.svg\"></img-icon> \n                                <h3>Topology</h3>\n                                <div class=\"box-customer\" *ngIf=\"!isTopologyError\">\n                                    <ul>\n                                      <li><span class=\"customer\"></span>STAND BY</li>\n                                      <li><span class=\"custgreen\"></span>WORKING</li>\n                                      <li><span class=\"custred\"></span>DOWN</li>\n                                    </ul>\n                                    <div class=\"clearfix\"></div>\n                                  </div> \n                            </div>\n                            <div class=\"clearfix\"></div>\n                        </div>\n                        <div class=\"row norecordTopology\" *ngIf=\"isTopologyError\">\n                                <span class=\"watermark\"><i class=\"fa fa-fw fa-inbox\"></i> {{topologyErrorMessage}}</span>\n                        </div>\n                        <agm-map *ngIf=\"!isTopologyError\" #gm [style.height.px]=\"mapStyleObj.height\" [fitBounds]=\"latlngBounds\" [latitude]=\"latitude\" [longitude]=\"longitude\" [scrollwheel]=\"true\" [zoom]=\"12.5\" [mapTypeControl]=\"true\">\n                         <ng-container>\n                                <agm-marker [iconUrl]=\"iconUrl\" *ngFor=\"let marker of markers;let i = index;\" [latitude]=\"marker.latitude\" [longitude]=\"marker.longitude\" (mouseOver)=\"onMouseOver(infoWindow,gm)\">\n                                        <agm-info-window #infoWindow>\n                                                <table>\n                                                    <tr>\n                                                        <td><b>Name</b></td>\n                                                        <td>{{marker.name}}</td>\n                                                    </tr>\n                                                </table>\n                                        </agm-info-window>   \n                                </agm-marker>\n                           <agm-polyline  [strokeColor]=\"polyline.stroke\"  *ngFor=\"let polyline of polylines;let i = index;\">\n                              <agm-polyline-point *ngFor=\"let point of polyline.coordinates\" [latitude]=\"point[1]\" [longitude]=\"point[0]\">\n                              </agm-polyline-point>\n                          </agm-polyline>\n                        </ng-container>\n                        </agm-map>\n                </div>\n        </div>\n    </section>\n</section>";

/***/ }),

/***/ 1607:
/***/ (function(module, exports, __webpack_require__) {


        var result = __webpack_require__(1608);

        if (typeof result === "string") {
            module.exports = result;
        } else {
            module.exports = result.toString();
        }
    

/***/ }),

/***/ 1608:
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1609);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(23)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../node_modules/css-loader/index.js!./optical.component.css", function() {
		var newContent = require("!!../../../../node_modules/css-loader/index.js!./optical.component.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1609:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(16)(false);
// imports


// module
exports.push([module.i, "\n.optical-block {\n\tfont-size: 16px;\n    text-align: center;\n    padding: 10px;\n    color: #fff;\n    margin-bottom: 15px;\n}\n\n.optical-block.critical{\n\tbackground-color: #F44336;\n    color: #fff !important;\n}\n.optical-block.major{\n\tbackground-color: rgb(70, 152, 61);\n    color: #fff;\n}\n.optical-block.minor{\n\tbackground-color: steelblue;\n    color: #fff;\n}\n.optical-block.warning{\n\tbackground-color: orange;\n    color: #fff;\n}\n\n#topology-map agm-map {\n    height: 230px;\n}\n\n#optical-dashboard .color-block-1, #optical-dashboard .color-block-2{\n    font-size : 25px;\n    padding: 5px;\n}\n\n#optical-dashboard .block-open, #optical-dashboard .block-closed, #optical-dashboard .block-in-progress, #optical-dashboard .optical-block{\n    font-size: 15px;\n    margin-bottom: 5px;\n    padding: 5px;\n}\n#optical-dashboard .box-border{\n    margin-bottom: 10px;\n}\n\n.cust_head_bold{\n    font-size: 16px;\n    font-weight: bold;\n}\n\n\n.accordionprgData {\n    cursor: pointer !important;\n    color: #333;\n    float: left;\n   \n}\n\n#custAdvanced table td{\n    text-align: right;\n}\n\n.box-customer .box1-checkbox-green{\n    background: #01ff01;\n}\n\n.box-customer .box2-checkbox-red{\n    background: #ff0000;\n}\n\n.box-customer .box2-checkbox-blue{\n    background: blue;\n}\n\n.breadcrumb li{\n    cursor: pointer;\n}\n", ""]);

// exports


/***/ }),

/***/ 1610:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var common_service_1 = __webpack_require__(61);
var page_view_service_1 = __webpack_require__(498);
var ngx_cookie_1 = __webpack_require__(62);
var AlarmsComponent = /** @class */ (function () {
    function AlarmsComponent(commonServices, cookies, PageViewService) {
        var _this = this;
        this.commonServices = commonServices;
        this.cookies = cookies;
        this.PageViewService = PageViewService;
        this.gridDataObj = {
            pdfName: 'Alarms Details',
            pdfTitle: 'Alarms Details',
            excelTitle: 'Alarms Details',
            excelName: 'Alarms Details',
            itemsPerPage: 50
        };
        this.loader = false;
        this.currentUser = {};
        this.userType = '';
        this.selectedGrp = 'all';
        this.assetSubMenus = [{ "site": "CRITICAL" }, { "site": "MAJOR" }, { "site": "MINOR" }, { "site": "WARNING" }];
        this.listCopy = [];
        this.goToHomePage = function () {
            _this.commonServices.gotoDashboard();
        };
        this.changeGroup = function (tapname) {
            // console.log(tapname);
            // console.log('dkdk', this.listCopy);
            _this.selectedGrp = tapname;
            if (tapname == 'all') {
                _this.gridDataObj.data = _this.listCopy;
            }
            else {
                _this.gridDataObj.data = _this.listCopy.filter(function (listdata) { return listdata.severity === tapname; });
            }
        };
    }
    AlarmsComponent.prototype.ngOnInit = function () {
        var _this = this;
        var recordType;
        var recordCnt;
        this.selectedGrp = 'all';
        this.gridDataObj.columns = [{
                dataKey: 'hostName',
                title: 'Hostname',
                hide: false,
                width: ''
            }, {
                dataKey: 'severity',
                title: 'Severity',
                hide: false,
                width: ''
            }, {
                dataKey: 'deviceIp',
                title: 'Device IP',
                hide: false,
                width: ''
            }, {
                dataKey: 'desc',
                title: 'Description',
                hide: false,
                width: ''
            }, {
                dataKey: 'alarmtime',
                title: 'Alarm Time',
                hide: false,
                width: ''
            }, {
                dataKey: 'instance',
                title: 'Instance',
                hide: false,
                width: ''
            } /*,{
                dataKey : 'siteId',
                title :  'Site ID',
                hide : false,
                width:''
            }*/
        ];
        this.gridDataObj.columns[1].cell = function (row, column) {
            var obj = {};
            if (row[column.dataKey] == 'critical') {
                obj.click = true;
                obj.html = '<span class="clrCRITICAL">' + row[column.dataKey].toUpperCase() + '</sapn>';
            }
            else if (row[column.dataKey] == 'major') {
                obj.click = true;
                obj.html = '<span class="clrMAJOR">' + row[column.dataKey].toUpperCase() + '</sapn>';
            }
            else if (row[column.dataKey] == 'minor') {
                obj.click = true;
                obj.html = '<span class="clrMinor">' + row[column.dataKey].toUpperCase() + '</sapn>';
            }
            else if (row[column.dataKey] == 'warning') {
                obj.click = true;
                obj.html = '<span class="clrWarning">' + row[column.dataKey].toUpperCase() + '</sapn>';
            }
            else {
                obj.click = true;
                obj.html = '<span class="">' + row[column.dataKey].toUpperCase() + '</sapn>';
            }
            return obj;
        };
        // this.gridDataObj.columns[2].cell = (row : any,column : any)=>{
        // 	var obj : any= {};
        // 	obj.click = false;
        // 	obj.html = this.commonServices.jsUcfirst(row[column.dataKey]);
        // 	return obj;
        // }
        this.gridDataObj.id = 'optical-alarms-grid';
        var pageViewGet = this.PageViewService.getData();
        // console.log('PageGetData', pageViewGet);
        this.recordType = pageViewGet.type;
        this.recordCnt = pageViewGet.currentcount;
        this.selectedGrp = pageViewGet.type;
        this.currentUser = this.cookies.getObject('globals');
        this.userType = this.currentUser.user_type;
        var _post = { "opn": "data", "reporttype": "alarm" };
        var countData = 0;
        var columnArray = [];
        this.loader = true;
        this.commonServices.postRequest('/_optical/OpticalAlarmList', {}).then(function (response) {
            console.log(response);
            if (response.status == "success") {
                // if(response.items[0].columns.length >0){
                //     response.items[0].columns.forEach((value : any, key: any) => {
                //         var columnObj : any = {};
                //         columnObj.dataKey = value.property;
                //         columnObj.title = value.title;
                //         columnObj.hide = false;
                //         columnObj.width = '';
                //         countData++;
                //         columnArray.push(columnObj);
                //       });
                // }
                // this.gridDataObj.columns = columnArray;
                if (_this.recordType == 'all') {
                    _this.gridDataObj.data = response.items[0].OpticalAlarmList;
                }
                else {
                    _this.gridDataObj.data = response.items[0].OpticalAlarmList.filter(function (listdata) { return listdata.severity === _this.recordType; });
                }
                _this.listCopy = Object.assign([], response.items[0].OpticalAlarmList);
                _this.loader = false;
            }
            else {
                _this.loader = false;
                _this.commonServices.error(response.message);
            }
        }, function (err) {
            _this.commonServices.error(err.message);
        });
    };
    AlarmsComponent = __decorate([
        core_1.Component({
            selector: 'alarms',
            template: __webpack_require__(1611),
            styles: [__webpack_require__(1612)]
        }),
        __metadata("design:paramtypes", [common_service_1.CommonService, ngx_cookie_1.CookieService, page_view_service_1.PageViewService])
    ], AlarmsComponent);
    return AlarmsComponent;
}());
exports.AlarmsComponent = AlarmsComponent;


/***/ }),

/***/ 1611:
/***/ (function(module, exports) {

module.exports = "<section id=\"main-content\">\n    <section class=\"wrapper\">\n    <ol class=\"breadcrumb\">\n        <li (click)=\"goToHomePage()\">Home</li>\n          <li class=\"active\">Optical Alarms - {{selectedGrp}}</li>\n      </ol>\n    <!-- <div class=\"dashboard-txt\">\n      <h1>Optical Alarms<a href=\"#optical\" class=\"pull-right\" data-toggle=\"tab\" style=\"float: right;line-height: 30px;padding-left: 20px;text-decoration: underline;font-size: 16px;cursor: pointer;\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Go Back</a></h1>\n    </div><br> -->\n    <div class=\"pn-ProductNav_Wrapper\">\n      <nav id=\"pnProductNav\" class=\"pn-ProductNav\">\n         \n         <div id=\"pnProductNavContents\" class=\"pn-ProductNav_Contents\">\n            \n               <a [ngClass]=\"{'active' : selectedGrp == 'all'}\" (click)=\"changeGroup('all')\" class=\"pn-ProductNav_Link\" >ALL</a>\n\n            <a class=\"pn-ProductNav_Link\" [ngClass]=\"{'active' : selectedGrp == menu.site.toLowerCase()}\" (click)=\"changeGroup(menu.site.toLowerCase())\" *ngFor=\"let menu of assetSubMenus\">{{menu.site}}</a>\n            <span id=\"pnIndicator\" class=\"pn-ProductNav_Indicator\"></span>\n         </div>\n      </nav>\n      <button id=\"pnAdvancerLeft\" class=\"pn-Advancer pn-Advancer_Left\" type=\"button\">\n         <svg class=\"pn-Advancer_Icon\" xmlns=\"\" viewBox=\"0 0 551 1024\">\n            <path d=\"M445.44 38.183L-2.53 512l447.97 473.817 85.857-81.173-409.6-433.23v81.172l409.6-433.23L445.44 38.18z\"/>\n         </svg>\n      </button>\n      <button id=\"pnAdvancerRight\" class=\"pn-Advancer pn-Advancer_Right\" type=\"button\">\n         <svg class=\"pn-Advancer_Icon\" xmlns=\"\" viewBox=\"0 0 551 1024\">\n            <path d=\"M105.56 985.817L553.53 512 105.56 38.183l-85.857 81.173 409.6 433.23v-81.172l-409.6 433.23 85.856 81.174z\"/>\n         </svg>\n      </button>\n   </div>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"box-title box-title-tabs\">              \n            <div class=\"pull-right\">\n              <ul class=\"box-title-right\">\n                <li>\n                    <h1><a href=\"#optical\" class=\"pull-right\" data-toggle=\"tab\" style=\"float: right;line-height: 30px;padding-left: 20px;text-decoration: underline;font-size: 16px;cursor: pointer;\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Go Back</a></h1>\n                </li>\n              </ul>\n            </div>\n            <div class=\"pull-left\">\n              <h3>Optical Alarms</h3>\n            </div>\n            <div class=\"clearfix\"></div>\n          </div>\n        </div>\n      </div>\n  \n\t<data-grid  *ngIf=\"!loader\" [gridobj]=\"gridDataObj\"></data-grid>\n    <content-loader *ngIf=\"loader\"></content-loader>   \n    </section>\n</section>";

/***/ }),

/***/ 1612:
/***/ (function(module, exports, __webpack_require__) {


        var result = __webpack_require__(1613);

        if (typeof result === "string") {
            module.exports = result;
        } else {
            module.exports = result.toString();
        }
    

/***/ }),

/***/ 1613:
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1614);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(23)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../node_modules/css-loader/index.js!./alarms.component.css", function() {
		var newContent = require("!!../../../../node_modules/css-loader/index.js!./alarms.component.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1614:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(16)(false);
// imports


// module
exports.push([module.i, "\n       .clrCRITICAL{\n        color: red;\n    }\n    .clrMAJOR{\n        color: rgb(70, 152, 61);\n    }\n    .clrWarning{\n        color: orange;\n    }\n    .clrMinor{\n        color: steelblue;\n    }", ""]);

// exports


/***/ }),

/***/ 1615:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var common_service_1 = __webpack_require__(61);
var page_view_service_1 = __webpack_require__(498);
var router_1 = __webpack_require__(48);
var ngx_cookie_1 = __webpack_require__(62);
var OpticalServicesComponent = /** @class */ (function () {
    function OpticalServicesComponent(commonServices, cookies, PageViewService, router) {
        this.commonServices = commonServices;
        this.cookies = cookies;
        this.PageViewService = PageViewService;
        this.router = router;
        this.gridDataObj = {
            pdfName: 'Optical-Service-Details',
            pdfTitle: 'Optical-Service-Details',
            excelTitle: 'Optical-Service-Details',
            excelName: 'Optical-Service-Details',
        };
        this.loader = false;
        this.currentUser = {};
        this.userType = '';
        this.selectedGrp = 'all';
        this.assetSubMenus = [{ "site": "CRITICAL" }, { "site": "MAJOR" }, { "site": "MINOR" }, { "site": "WARNING" }];
        this.listCopy = [];
    }
    OpticalServicesComponent.prototype.ngOnInit = function () {
        var _this = this;
        var recordType;
        var recordCnt;
        this.selectedGrp = 'all';
        this.gridDataObj.id = 'optical-services-grid';
        var pageViewGet = this.PageViewService.getData();
        if (pageViewGet != undefined) {
            console.log('PageGetData', pageViewGet);
            this.recordType = pageViewGet.type;
            this.recordCnt = pageViewGet.currentcount;
            this.selectedGrp = pageViewGet.type;
            this.currentUser = this.cookies.getObject('globals');
            this.userType = this.currentUser.user_type;
        }
        else {
            this.router.navigate(['/optical']);
        }
        var _post = { "opn": "data", "reporttype": "sevice" };
        var countData = 0;
        var columnArray = [];
        this.loader = true;
        this.commonServices.postRequest('/_mcpe/opticalServerdata', _post).then(function (response) {
            console.log(response);
            if (response.status == "success") {
                if (response.items[0].columns.length > 0) {
                    response.items[0].columns.forEach(function (value, key) {
                        var columnObj = {};
                        columnObj.dataKey = value.property;
                        columnObj.title = value.title;
                        columnObj.hide = false;
                        columnObj.width = '';
                        countData++;
                        columnArray.push(columnObj);
                    });
                }
                _this.gridDataObj.columns = columnArray;
                if (_this.recordType == 'all') {
                    _this.gridDataObj.data = response.items[0].data;
                }
                else {
                    _this.gridDataObj.data = response.items[0].data.filter(function (listdata) { return listdata.severity === _this.recordType; });
                }
                _this.listCopy = Object.assign([], response.items[0].data);
                _this.loader = false;
            }
            else {
                _this.loader = false;
                _this.commonServices.error(response.message);
            }
        }, function (err) {
            _this.commonServices.error(err.message);
        });
    };
    OpticalServicesComponent = __decorate([
        core_1.Component({
            selector: 'alarms',
            template: __webpack_require__(1616)
        }),
        __metadata("design:paramtypes", [common_service_1.CommonService, ngx_cookie_1.CookieService, page_view_service_1.PageViewService, router_1.Router])
    ], OpticalServicesComponent);
    return OpticalServicesComponent;
}());
exports.OpticalServicesComponent = OpticalServicesComponent;


/***/ }),

/***/ 1616:
/***/ (function(module, exports) {

module.exports = "<section id=\"main-content\">\n    <section class=\"wrapper\">\n    <ol class=\"breadcrumb\">\n        <li><a (click)=\"goToHomePage()\">Home</a></li>\n          <li class=\"active\">Optical Services</li>\n      </ol>\n    <div class=\"dashboard-txt\">\n      <h1>Optical Services</h1>\n    </div><br>\n\t<data-grid  *ngIf=\"!loader\" [gridobj]=\"gridDataObj\"></data-grid>\n    <content-loader *ngIf=\"loader\"></content-loader>   \n    </section>\n</section>";

/***/ }),

/***/ 1617:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var common_service_1 = __webpack_require__(61);
var page_view_service_1 = __webpack_require__(498);
var pdf_service_1 = __webpack_require__(269);
var excell_service_1 = __webpack_require__(266);
var router_1 = __webpack_require__(48);
var ngx_cookie_1 = __webpack_require__(62);
var modal_1 = __webpack_require__(104);
var common_1 = __webpack_require__(6);
var OpticalPortsComponent = /** @class */ (function () {
    function OpticalPortsComponent(router, cookie, commonServices, PageViewService, modalService, dateFilter, excellService, pdfService) {
        var _this = this;
        this.router = router;
        this.cookie = cookie;
        this.commonServices = commonServices;
        this.PageViewService = PageViewService;
        this.modalService = modalService;
        this.dateFilter = dateFilter;
        this.excellService = excellService;
        this.pdfService = pdfService;
        this.modalLoaders = false;
        this.graphWaterMarkers = false;
        this.options = {};
        this.options2 = {};
        this.isTxDataDetails = false;
        this.maxValue = '';
        this.minValue = '';
        this.data = [];
        this.lineCardList = [];
        this.header_hostname = "";
        this.resBasicExtendedData = [];
        this.finalArrDetails = [];
        this.currentPortData = "";
        this.properdata = "";
        this.btnStauts = {};
        this.pctage = true;
        this.showGraph = true;
        this.custom_download = true;
        this.custom_option = true;
        this.graphDataDetails = [];
        this.txgraphDataDetails = [];
        this.fromDate = new Date();
        this.toDate = new Date();
        this.from_time = '00:00:00';
        this.to_time = '23:59:59';
        this.isSessionExpired = false;
        this.graphDummyPollPush = [];
        this.graphYAxisMinValue = 0;
        this.graphYAxisMaxValue = 0;
        this.popupGraph = false;
        this.gridDataObj = {
            pdfName: 'Optical_Port_Details',
            pdfTitle: 'Optical_Port_Details',
            excelTitle: 'Optical_Port_Details',
            excelName: 'Optical_Port_Details',
        };
        this.excelDateObject = {};
        this.proObj = {};
        this.sample = [];
        this.lineCount = 0;
        this.sortByKey = function (arr) {
            arr.sort(function (a, b) { return (a.sortOrder > b.sortOrder) ? 1 : ((b.sortOrder > a.sortOrder) ? -1 : 0); });
        };
        this.formatInt = function (obj) {
            for (var key in obj) {
                if (obj[key].indexOf('.00') !== -1) {
                    obj[key] = parseInt(obj[key]);
                }
            }
            return obj;
        };
        this.handleClick = function (event) {
            event.preventDefault();
        };
        this.historical_graph = function (property, lineCardObj, mainValueObj, template) {
            // console.log("dddddddddddddd", property, mainValueObj);
            _this.properActionSet = property;
            var selectedPort = {
                "propertyAction": property,
                "portName": mainValueObj.portName,
                "hostName": lineCardObj.hostName,
                "ip": lineCardObj.ip
            };
            _this.proObj = lineCardObj;
            _this.currentPortData = mainValueObj.portName;
            _this.properdata = property;
            _this.btnStauts = {};
            _this.btnStauts.nrtbtn = true;
            var _fromDate = _this.dateFilter.transform(new Date(), "yyyy-MM-dd");
            var _toDate = _this.dateFilter.transform(new Date(), "yyyy-MM-dd");
            // this.to_date = _toDate;
            // this.fr_date = _fromDate;
            _this.from_time = '00:00:00';
            _this.to_time = '23:59:59';
            _this.header_hostname = lineCardObj.hostName;
            _this.bsRangeValue = [new Date(_fromDate), new Date(_toDate)];
            // var _post: any =  {"port":"6-ExtendedTxRx","paramProperty":"Bytes","reportType":"month","fromDateISO":"2018-03-25","toDateISO":"2018-04-23","fromTimeISO":"00:00:00","toTimeISO":"23:59:59","ip":"100.66.28.117"}
            var _post = {
                "port": mainValueObj.portName,
                "paramProperty": property,
                "reportType": "nrt",
                "hostName": lineCardObj.hostName,
                "fromDateISO": _fromDate,
                "toDateISO": _toDate,
                "fromTimeISO": "00:00:00",
                "toTimeISO": "23:59:59",
                "ip": lineCardObj.ip
            };
            _this.popupGraph = true;
            _this.getHistoryReports(_post);
            if (!_this.isSessionExpired) {
                _this.modalRef = _this.modalService.show(template, { class: 'modal-lg' });
            }
            else {
                _this.ngOnDestroy();
            }
        };
        this.getHistoryReports = function (_post) {
            _this.isTxDataDetails = false;
            _this.modalLoaders = true;
            _this.commonServices.postRequest('/_optical/opticalGraph', _post).then(function (res) {
                _this.excelDateObject = { 'excelFromDate': _post.fromDateISO + " @ " + _post.fromTimeISO, 'excelToDate': _post.toDateISO + " @ " + _post.toTimeISO };
                if (res.status == "success") {
                    if (res.items[0].CoreGraphData.length > 0) {
                        _this.popGraphTitleOne = res.items[0].CoreGraphData[0].keyName.toUpperCase();
                        if (res.items[0].CoreGraphData[0].keyName == 'intrx_bytes') {
                            _this.reportName = "RX BYTES";
                        }
                        else {
                            var getStr = res.items[0].CoreGraphData[0].keyName;
                            var isContainsRX = getStr.includes("rx");
                            var isContainsTXFirst = getStr.includes("tx");
                            if (isContainsRX) {
                                _this.reportName = "RX PACKETS";
                            }
                            else if (isContainsTXFirst) {
                                _this.reportName = "TX PACKETS";
                            }
                            else {
                                _this.reportName = res.items[0].CoreGraphData[0].keyName.toUpperCase();
                            }
                        }
                        _this.rxGraphDraw(res.items[0]);
                        /* This Condition is for TX BYtes Second Graph */
                        if (res.items[0].CoreGraphData.length > 1) {
                            _this.popGraphTitleTwo = res.items[0].CoreGraphData[1].keyName.toUpperCase();
                            if (res.items[0].CoreGraphData[1].keyName == 'inttx_bytes') {
                                _this.reportName2 = "TX BYTES";
                            }
                            else {
                                var getStrTx = res.items[0].CoreGraphData[1].keyName;
                                var isContainsTX = getStrTx.includes("tx");
                                if (isContainsTX) {
                                    _this.reportName2 = "TX PACKETS";
                                }
                                else {
                                    _this.reportName2 = res.items[0].CoreGraphData[1].keyName.toUpperCase();
                                }
                            }
                            _this.isTxDataDetails = true;
                            _this.txGraphDraw(res.items[0]);
                        }
                        _this.modalLoaders = false;
                        _this.graphWaterMarkers = false;
                    }
                    else {
                        _this.modalLoaders = false;
                        _this.graphWaterMarkers = true;
                    }
                }
                else {
                    _this.isSessionExpired = true;
                }
            }, function (err) {
                _this.isSessionExpired = true;
                _this.commonServices.error(err.message);
            });
        };
        this.isEmptyObject = function (obj) {
            for (var prop in obj) {
                if (obj.hasOwnProperty(prop)) {
                    return false;
                }
            }
            return true;
        };
        this.reportTypeView = function (reportType, selectedPort, currentObjData) {
            //console.log(reportType);
            // console.log("data details...", currentObjData);
            var fr_date;
            var to_date;
            if (reportType) {
                _this.from_time = '00:00:00';
                _this.to_time = '23:59:59';
                if (reportType == 'nrt') {
                    _this.btnStauts = {};
                    _this.btnStauts.nrtbtn = true;
                    fr_date = _this.dateFilter.transform(new Date(), "yyyy-MM-dd");
                    to_date = _this.dateFilter.transform(new Date(), "yyyy-MM-dd");
                    _this.bsRangeValue = [new Date(fr_date), new Date(to_date)];
                }
                else if (reportType == 'yesterday') {
                    _this.btnStauts = {};
                    _this.btnStauts.yesbtn = true;
                    var from_d = new Date();
                    from_d.setDate(from_d.getDate() - 1);
                    fr_date = _this.dateFilter.transform(from_d, "yyyy-MM-dd");
                    to_date = fr_date;
                    _this.bsRangeValue = [new Date(fr_date), new Date(to_date)];
                }
                else if (reportType == 'week') {
                    _this.btnStauts = {};
                    _this.btnStauts.weekbtn = true;
                    var from_d = new Date();
                    from_d.setDate(from_d.getDate() - 7);
                    fr_date = _this.dateFilter.transform(from_d, "yyyy-MM-dd");
                    to_date = new Date();
                    to_date.setDate(to_date.getDate() - 1);
                    to_date = _this.dateFilter.transform(to_date, "yyyy-MM-dd");
                    _this.bsRangeValue = [new Date(fr_date), new Date(to_date)];
                }
                else if (reportType == 'month') {
                    _this.btnStauts = {};
                    _this.btnStauts.monthbtn = true;
                    var from_d = new Date();
                    from_d.setDate(from_d.getDate() - 30);
                    fr_date = _this.dateFilter.transform(from_d, "yyyy-MM-dd");
                    to_date = new Date();
                    to_date.setDate(to_date.getDate() - 1);
                    to_date = _this.dateFilter.transform(to_date, "yyyy-MM-dd");
                    _this.bsRangeValue = [new Date(fr_date), new Date(to_date)];
                }
                fr_date = fr_date;
                to_date = to_date;
                _this.showFromdata = fr_date;
                _this.showTodata = _this.dateFilter.transform(new Date(), "yyyy-MM-dd") + " " + to_date;
                _this.fromDate = new Date(fr_date);
                _this.toDate = new Date(to_date);
                var _post = {
                    "port": _this.currentPortData,
                    "paramProperty": _this.properActionSet,
                    "reportType": reportType,
                    "hostName": _this.proObj.hostName,
                    "fromDateISO": fr_date,
                    "toDateISO": to_date,
                    "fromTimeISO": _this.from_time,
                    "toTimeISO": _this.to_time,
                    "ip": _this.proObj.ip
                };
                _this.getHistoryReports(_post);
            }
        };
        /*  To enable zoom chang type as "lineWithFocusChart" */
        this.rxGraphDraw = function (graphObjData) {
            // console.log('inRXGraph', graphObjData);
            var xAxisMinData = graphObjData.CoreGraphData[0].xAxisMin;
            var xAxisMaxData = graphObjData.CoreGraphData[0].xAxisMax;
            var yAxisMinData = graphObjData.CoreGraphData[0].yAxisMin;
            var yAxisMaxData = graphObjData.CoreGraphData[0].yAxisMax;
            _this.options = {
                chart: {
                    type: 'lineWithFocusChart',
                    height: 450,
                    margin: {
                        top: 20,
                        right: 95,
                        bottom: 60,
                        left: 55
                    },
                    padding: {
                        left: 40
                    },
                    x: function (d) { return new Date(d.X).getTime(); },
                    y: function (d) { return d.Y; },
                    //average: function(d: any)  { return d/1024/1024/1024; },
                    // dispatch: {
                    //     stateChange: function (e: any) { console.log("stateChange"); },
                    //     changeState: function (e: any) { console.log("changeState"); },
                    //     tooltipShow: function (e: any) { console.log("tooltipShow"); },
                    //     tooltipHide: function (e: any) { console.log("tooltipHide"); }
                    // },
                    //padData: true,
                    color: d3.scale.category10().range(),
                    duration: 300,
                    //   forceX :  [xAxisMinData, xAxisMaxData],
                    //forceY : [yAxisMinData, yAxisMaxData],
                    useInteractiveGuideline: true,
                    clipVoronoi: false,
                    focusShowAxisX: false,
                    xAxis: {
                        axisLabel: 'Date',
                        tickFormat: function (d) {
                            return d3.time.format('%d/%b/%y %H:%M')(new Date(d));
                        },
                        wrapLabels: true,
                        axisLabelDistance: 15,
                        showMaxMin: false,
                        staggerLabels: true
                    },
                    yAxis: {
                        axisLabel: _this.reportName,
                        tickFormat: function (d) {
                            // return d;
                            return d3.format('.02f')(d);
                        },
                        // tickPadding:-25, 
                        axisLabelDistance: 15,
                        rotateYLabel: true,
                        showMaxMin: false,
                        orient: 'left',
                        css: { 'transform': 'rotate(45deg)' }
                    },
                    callback: function (chart) {
                    }
                }
            };
            if (yAxisMinData == 0 && yAxisMaxData == 0) {
                _this.options.chart.forceY = [yAxisMinData, 5];
            }
            d3.selectAll('.nvtooltip').style('opacity', 0);
            // console.log("graphDataDetails", graphObjData.CoreGraphData[0].CoreGraphDataPoints);
            _this.graphData1 = [
                {
                    key: _this.popGraphTitleOne,
                    values: graphObjData.CoreGraphData[0].CoreGraphDataPoints[0],
                }
            ];
        };
        this.txGraphDraw = function (graphObjData) {
            // console.log('inTXGraph', graphObjData);
            var xAxisMinData = graphObjData.CoreGraphData[1].xAxisMin;
            var xAxisMaxData = graphObjData.CoreGraphData[1].xAxisMax;
            var yAxisMinData = graphObjData.CoreGraphData[1].yAxisMin;
            var yAxisMaxData = graphObjData.CoreGraphData[1].yAxisMax;
            _this.options2 = {
                chart: {
                    type: 'lineWithFocusChart',
                    height: 450,
                    margin: {
                        top: 20,
                        right: 95,
                        bottom: 60,
                        left: 55
                    },
                    padding: {
                        left: 40
                    },
                    x: function (d) { return new Date(d.X).getTime(); },
                    y: function (d) { return d.Y; },
                    //average: function(d: any)  { return d/1024/1024/1024; },
                    // dispatch: {
                    //     stateChange: function (e: any) { console.log("stateChange"); },
                    //     changeState: function (e: any) { console.log("changeState"); },
                    //     tooltipShow: function (e: any) { console.log("tooltipShow"); },
                    //     tooltipHide: function (e: any) { console.log("tooltipHide"); }
                    // },
                    //padData: true,
                    color: d3.scale.category10().range(),
                    duration: 300,
                    //forceX :  [xAxisMinData, xAxisMaxData],
                    //forceY : [yAxisMinData, yAxisMaxData],
                    useInteractiveGuideline: true,
                    clipVoronoi: false,
                    focusShowAxisX: false,
                    xAxis: {
                        axisLabel: 'Date',
                        tickFormat: function (d) {
                            return d3.time.format('%d/%b/%y %H:%M')(new Date(d));
                        },
                        wrapLabels: true,
                        axisLabelDistance: 15,
                        showMaxMin: false,
                        staggerLabels: true
                    },
                    yAxis: {
                        axisLabel: _this.reportName2,
                        tickFormat: function (d) {
                            //  return d;
                            return d3.format('.02f')(d);
                        },
                        // tickPadding:-25, 
                        axisLabelDistance: 15,
                        rotateYLabel: true,
                        showMaxMin: false,
                        orient: 'left',
                        css: { 'transform': 'rotate(45deg)' }
                    },
                    callback: function (chart) {
                    }
                }
            };
            if (yAxisMinData == 0 && yAxisMaxData == 0) {
                _this.options.chart.forceY = [yAxisMinData, 5];
            }
            d3.selectAll('.nvtooltip').style('opacity', 0);
            // console.log("graphDataDetails2", graphObjData.CoreGraphData[1].CoreGraphDataPoints);
            _this.graphData2 = [
                {
                    key: _this.popGraphTitleTwo,
                    values: graphObjData.CoreGraphData[1].CoreGraphDataPoints[0],
                }
            ];
        };
        // hideD3Hover = ()=>{
        //     setTimeout(function(){ 
        //         d3.selectAll('.nvtooltip').style('opacity', 0); 
        //    }, 100);
        // }
        this.modelClose = function () {
            _this.popupGraph = false;
            _this.modalRef.hide();
        };
        this.excelDownlod = function (arr, columnName) {
            console.log(arr);
            _this.gridDataObj = {
                excelTitle: _this.properActionSet,
                excelName: 'Optical-Port-' + _this.properActionSet,
            };
            _this.gridDataObj.id = 'optical-port-grid';
            _this.gridDataObj.fromDate = _this.excelDateObject.excelFromDate;
            _this.gridDataObj.toDate = _this.excelDateObject.excelToDate;
            _this.gridDataObj.hostname = _this.proObj.hostName;
            _this.gridDataObj.ip = _this.proObj.ip;
            _this.gridDataObj.columns = [{
                    dataKey: 'X',
                    title: 'Date',
                    hide: false,
                    width: ''
                }, {
                    dataKey: 'Y',
                    title: 'Value (' + columnName + ')',
                    hide: false,
                    width: ''
                }];
            _this.gridDataObj.data = arr[0].values;
            _this.excellService.opticalGenerateExcell(_this.gridDataObj);
        };
        this.getLists = function (e) {
            console.log(e);
            // console.log(this.proObj);
            //this.publicReportType
            // this.publicReportType.type = reportType;
            // this.publicReportType.currentObjData =  currentObjData;
            _this.btnStauts = {};
            var fromDateStr = _this.dateFilter.transform(e[0], "yyyy-MM-dd");
            var toDateStr = _this.dateFilter.transform(e[1], "yyyy-MM-dd");
            _this.bsRangeValue = [new Date(fromDateStr), new Date(toDateStr)];
            _this.from_time = '00:00:00';
            _this.to_time = '23:59:59';
            var _post = {
                "port": _this.currentPortData,
                "paramProperty": _this.properActionSet,
                "reportType": "custom",
                "hostName": _this.proObj.hostName,
                "fromDateISO": fromDateStr,
                "toDateISO": toDateStr,
                "fromTimeISO": _this.from_time,
                "toTimeISO": _this.to_time,
                "ip": _this.proObj.ip
            };
            _this.getHistoryReports(_post);
        };
    }
    OpticalPortsComponent.prototype.ngOnInit = function () {
        var _this = this;
        var currentUser = this.cookie.getObject('globals');
        var userData = this.cookie.getObject('globals') || {};
        var userType = currentUser.user_type;
        var today = new Date();
        var time = today.getTime();
        var lastWeekTime = time - (24 * 90 * 60 * 60 * 1000);
        this.fromDate = new Date(lastWeekTime);
        console.log("toDate", this.toDate);
        this.userType = userType;
        if (userType == 6) {
            this.groupId = currentUser.group_id;
        }
        var _post = {};
        this.loader = true;
        var pageViewGet = this.PageViewService.getData();
        console.log('PageGetData', pageViewGet);
        //  this.commonServices.getRequest('/_optical/_waves/listLineCards').then((response: any) => { old API
        //    this.commonServices.postRequest('/_mcpe/opticalServerdata', {"opn":"data","reporttype":"ports"}).then((response: any) => {
        this.commonServices.postRequest('/_optical/OpticalSitesList', {}).then(function (response) {
            // console.log("response0", response);
            var customArrayData = [];
            if (response.status == "success") {
                response.items[0].OpticalSitesList.forEach(function (line) {
                    //if(line.siteName === pageViewGet.linePortType){
                    line.details = {};
                    _this.lineCardList.push(line);
                    //}
                });
                // var unique : any  = Array.from(new Set(this.lineCardList.map((item : any) => item.ip)));
                // unique.sort();
                // console.log("unique", unique);
                _this.lineCardList.forEach(function (lineCard, key) {
                    _this.unitDetailsIPAddres = lineCard.ip;
                    if (true) {
                        var listPostData = {
                            'ip': lineCard.ip
                        };
                        _this.sample = _this.sample.concat([_this.commonServices.postRequest('/_optical/OpticalSitesPort', listPostData)]);
                    }
                });
                for (var i = 0; i < _this.sample.length; i++) {
                    _this.callNextPromise(i);
                }
                _this.loaders = false;
                console.log('finalarray', _this.finalArrDetails);
                _this.showListContent = true;
                _this.loader = false;
                _this.showListContent = true;
                _this.loader = false;
                _this.showListContent = true;
                // console.log('this.lineCardList', this.lineCardList)
            }
        }, function (err) {
            _this.loader = false;
            //notification.showerror(response.message);
        });
    };
    OpticalPortsComponent.prototype.callNextPromise = function (i) {
        var _this = this;
        return this.sample[i].then(function (response) {
            if (response.status == "success") {
                _this.lineCardList[i].details = response.items[0];
            }
            else {
                _this.commonServices.error(response.message);
            }
        }, function (err) {
            _this.commonServices.error(err.message);
        });
    };
    OpticalPortsComponent.prototype.pdfDownload = function () {
        console.log('generating pdf');
        //this.pdfService.generateSVGPDF();  
    };
    OpticalPortsComponent.prototype.ngOnDestroy = function () {
        if (this.modalRef) {
            this.modalRef.hide();
        }
    };
    OpticalPortsComponent = __decorate([
        core_1.Component({
            selector: '<optical-ports>',
            template: __webpack_require__(1618),
            styles: [
                __webpack_require__(1619),
            ],
        }),
        __metadata("design:paramtypes", [router_1.Router, ngx_cookie_1.CookieService, common_service_1.CommonService, page_view_service_1.PageViewService, modal_1.BsModalService, common_1.DatePipe, excell_service_1.ExcellService, pdf_service_1.PdfService])
    ], OpticalPortsComponent);
    return OpticalPortsComponent;
}());
exports.OpticalPortsComponent = OpticalPortsComponent;


/***/ }),

/***/ 1618:
/***/ (function(module, exports, __webpack_require__) {

module.exports = "<section id=\"main-content\">\n    <section class=\"wrapper\">\n        <ol class=\"breadcrumb\">\n            <li>\n                <a (click)=\"goToHomePage()\">Home</a>\n            </li>\n            <li>\n                <a href=\"#optical\">Optical Wave Services</a>\n            </li>\n            <li class=\"active\">Optical Line Ports</li>\n  \n        </ol>\n   \n    <div class=\"dashboard-txt\">\n        <h1>Optical Line Ports<a href=\"#optical\" class=\"pull-right\" data-toggle=\"tab\" style=\"float: right;line-height: 30px;padding-left: 20px;text-decoration: underline;font-size: 16px;cursor: pointer;\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Go Back</a></h1>\n    </div>\n    <div class=\"row accorditoncustom\">\n        <div class=\"col-xs-12 no-padding connect-list-wrapper circuit-wrapper\" style=\"padding: 22px;margin-top: -37px;\">\n            <div class=\"col-md-12 list-tabs\" style=\"padding: 0;\">\n                <div class=\"panel-heading cl-both header-section\" id=\"common_header\">\n\n                </div>\n\n                <!-- <div class=\"col-xs-12 no-record-circuit\" *ngIf=\"lineCardList.length == 0\" >\n                        <div >No Records</div>\n                    </div> <accordion-group class=\"custom-header\" heading=\"Performance Details Port - {{item.val.port}}\" is-open=\"true\"> -->\n                <div class=\"panel-group\" id=\"accordion\">\n                        <accordion close-others=\"true\"  *ngFor=\"let card of lineCardList; let cardindex = index\">\n                                <accordion-group heading=\"{{card.hostName}} \" is-open=\"true\" class=\"col-md-12 steps-tabs-content cc-admin-circuits no-padding text-center panel\">\n                                                                           \n                                  <div class=\"col-md-12\">\n                                      <content-loader *ngIf=\"loaders\"></content-loader>\n                                      <!-- <span *ngIf=\"viewLoader\">Loading...</span> -->\n                                          <accordion close-others=\"false\"  *ngFor=\"let item of card.details.OpticalSitesPort\">\n                                            <accordion-group  heading=\"PORT - {{item.portName}}\"  class=\"col-md-12 steps-tabs-content cc-admin-circuits no-padding text-center custom-header panel\"  [isOpen]=\"true\">\n                                            \n                                              <div id=\"accordiondatastyle\">\n                                                  <div  class=\"pull-left\">\n                                                      <h4 style=\"width: 100%;float: left;color: #7e920f;font-size: 23px;font-weight: 900;\">PORT - {{item.portName}} Status Details</h4>\n                                                    </div>\n                        \n                                                  <div class=\"basic\">\n                                                    \n                                                   <div class=\"content oddList\" >\n                                                   <div class=\"col-sm-12 mo-padding hoverdata\" style=\"background: #fff;padding: 16px;\">\n                                                   <div class=\"col-md-4\">\n                                                     <div class=\"itemdesc cl-both\">\n                                                       <div class=\"pull-left\">\n                                                         <p class=\"head_bold\">{{card.ip}} - {{card.hostName}}</p>\n                                                         <p>State : {{item.OpticalSitesBasic.OpticalSitesActualState.state}}<!-- {{item.modemStatistics[0].ptpInfo.adminState}} / {{item.modemStatistics[0].ptpInfo.operationalState}}enabled / up --> </p>\n                                                       </div>\n                                                     </div>\n                                                   </div>\n                                                   \n                                                   <div class=\"col-md-4\">\n                                                     <div class=\"itemdesc cl-both\">\n                                                       <div class=\" pull-left\" style=\"color: #7d7d7d;\">\n                                                         <div class=\"col-sm-12 no-padding\">\n                                                           <div class=\"col-sm-6 no-padding\">\n                                                             <!-- <p>item.modemStatistics[0].ptpInfo.xcvrType</p>\n                                                             <p>item.modemStatistics[0].ptpInfo.xcvrMode item.modemStatistics[0].ptpInfo.transmitterState</p> -->\n                                                             <p>xcvrMode : {{item.OpticalSitesBasic.OpticalSitesActualState.xcvrMode}}</p>\n                                                             <p>Channel : {{item.OpticalSitesBasic.OpticalSitesActualState.channelNumber != undefined ? item.OpticalSitesBasic.OpticalSitesActualState.channelNumber : \"--\"}}</p>\n                                                             <p>Transmitter : {{item.OpticalSitesBasic.OpticalSitesActualState.transmitterState != undefined ? item.OpticalSitesBasic.OpticalSitesActualState.transmitterState : \"--\"}}</p>\n                                                           </div>\n                                                           <div class=\"col-sm-6 no-padding\">\n                                                             <div class=\"col-sm-12 no-padding\">\n                                                               <p>Wavelength :  {{item.wavelength}}</p>\n                                                             </div>\n                                                             <div class=\"col-sm-12 no-padding\">\n                                                               <p class=\"accordionprg\" (click)=\"historical_graph('TxPower', card, item, graphicalhistory)\">Tx Power : {{item.OpticalSitesBasic.OpticalSitesActualState.txPowerAct}}</p>\n                                                             </div>\n                                                             <div class=\"col-sm-12 no-padding\">\n                                                               <p class=\"accordionprg\" (click)=\"historical_graph('RxPower', card, item, graphicalhistory)\">Rx Power : {{item.OpticalSitesBasic.OpticalSitesActualState.rxPowerAct}}</p>\n                                                             </div>\n                                                             <p>Loopback: -</p>\n                                                           </div>\n                                                         </div>\n                                                         \n                                                       </div>\n                                                     </div>\n                                                   </div>\n                                                    <div class=\"col-sm-4 no-padding\">\n                                                     <div class=\"itemdesc cl-both\">\n                                                       <div class=\" pull-left\" style=\"color: #7d7d7d;\">\n                             \n                                                      <div class=\"col-sm-12 no-padding\">\n                                                            <div class=\"col-sm-12 no-padding\">\n                                                             <div class=\"col-sm-3 no-padding\">\n                                                             <p class=\"empty-cell\">AAA</p>\n                                                             </div>\n                                                             \n                                                             <div class=\"col-sm-2 no-padding\">\n                                                            \n                                                             <p class=\"text-bold text-left\">Tx actual</p>\n                                                             </div>\n                                                              <div class=\"col-sm-3 no-padding\"><p class=\"text-bold text-left\">Rx comp</p></div>\n                                                              \n                                                              <div class=\"col-sm-2 no-padding\"><p class=\"text-bold text-left\">Tx total</p></div>\n                                                              \n                                                               <div class=\"col-sm-2 no-padding\"><p class=\"text-bold text-left\">Rx total</p></div>\n                                                            </div>\n                                                              <div class=\"col-sm-12 no-padding\">\n                                                              <div class=\"col-sm-3 no-padding\">\n                                                             <p>Dispersion</p>\n                                                             </div>\n                                                             \n                                                              <div class=\"col-sm-2 no-padding\">\n                                                            \n                                                              <p>{{item.OpticalSitesBasic.OpticalSitesActualState.txPowerAct}}</p>\n                                                             </div>\n                                                              <div class=\"col-sm-3 no-padding\"><p>{{item.OpticalSitesBasic.OpticalSitesActualState.rxPowerAct}}</p></div>\n                                                              \n                                                              <div class=\"col-sm-2 no-padding\"><p>{{item.OpticalSitesBasic.OpticalSitesActualState.txPowerAct}}</p></div>\n                                                              \n                                                               <div class=\"col-sm-2 no-padding\"><p>{{item.OpticalSitesBasic.OpticalSitesActualState.rxPowerAct}}</p></div>\n                                                               \n                                                              </div>\n                                                              </div>\n                                                       </div>\n                                                     </div>\n                                                   </div> \n                                                   <!-- <div class=\"cell\"></div>   -->\n                                               </div>\n                                               \n                                               </div>\n                                              </div>\n                        \n                                                  \n                                                  <!-- ******** Basic End********* -->\n                        \n                                                  <!-- ******** Advanced Start********* -->\n                                                  <div class=\"advanced\">\n                                                      <!-- <div  class=\"pull-left\">\n                                                          <h4 style=\"width: 100%;float: left;color: #7e920f;font-size: 23px;font-weight: 900;\">PORT - {{index}} Status Details</h4>\n                                                        </div>\n                                                     -->\n                                                    <div class=\"content oddList\" >\n                                                        <div class=\"col-sm-12 mo-padding hoverdata\" style=\"background: #fff;padding: 16px;\">\n                                                        <div class=\"col-md-3\">\n                                                          <div class=\"itemdesc cl-both\">\n                                                            <div class=\" pull-left\" style=\"color: #7d7d7d;\">\n                                                              <div class=\"col-sm-12 no-padding\">\n                                                               \n                                                              </div>\n                                                              <div class=\"col-sm-12 no-padding\">\n                                                                <div class=\"col-sm-4 no-padding\">\n                                                                  <p class=\"empty-cell\">AAA</p>\n                                                                  <div class=\"col-sm-12 no-padding\">\n                                                                    <p class=\"accordionprg\" (click)=\"historical_graph('Q-factor', card, item, graphicalhistory)\">Q-factor</p>\n                                                                  </div>\n                                                                  <div class=\"col-sm-12 no-padding\">\n                                                                    <p class=\"accordionprg\" (click)=\"historical_graph('Pre-FEC BER', card, item, graphicalhistory)\">Pre-FEC BER</p>\n                                                                  </div>\n                                                                  <div class=\"col-sm-12 no-padding\">\n                                                                    <p class=\"accordionprg\" (click)=\"historical_graph('Post-FEC BER', card, item, graphicalhistory)\">Post-FEC BER</p>\n                                                                  </div>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                  <p class=\"text-left text-bold\">Actual</p>\n                                                                  <p>{{item.OpticalSitesAdvanced.OpticalSitesQfactor.qFactor}}</p>\n                                                                  <p>{{item.OpticalSitesAdvanced.OpticalSitesQfactor.preFecBitErrorActualRate}}</p> \n                                                                  <p>--</p>\n                                                  <!-- <p>{{item.OpticalSitesAdvanced.OpticalSitesQfactor.fecErrorUncorrectedBlockCount}}</p>\n                                                  <p>{{item.OpticalSitesAdvanced.OpticalSitesQfactor.fecErrorHighCorrectionCountSecond}}</p> -->\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                  <p class=\"text-bold text-left\">Max</p>\n                                                                  <p>{{item.OpticalSitesAdvanced.OpticalSitesQfactor.qFactorMaximum}}</p>\n                                                                  <p>{{item.OpticalSitesAdvanced.OpticalSitesQfactor.preFecBitErrorMaxRate}}</p>\n                                                  <!-- <p>{{item.OpticalSitesAdvanced.OpticalSitesQfactor.statisticsMaximum}}</p> -->\n                                                                  <p>--</p>\n                                                                </div>\n                                                                <div class=\"col-sm-2 no-padding\">\n                                                                  <p class=\"text-bold text-left\">Min</p>\n                                                   <p>{{item.OpticalSitesAdvanced.OpticalSitesQfactor.qFactorMinimum}}</p>\n                                                                  <p>--</p>\n                                                                  <p>--</p>\n                                                              </div>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                         <!-- <div class=\"col-md-9\" *ngIf=\"false\">\n                                                          <div class=\"itemdesc cl-both\">\n                                                            <div class=\" pull-left\" style=\"color: #7d7d7d;\">\n                                                              <div class=\"col-sm-3 no-padding\">\n                                                              <p class=\"empty-cell\">AAA</p>\n                                                              <p>Fec Error Count</p>\n                                                              </div>\n                                                              <div class=\"col-sm-2 no-padding\"><p class=\"text-bold text-left\">Value</p>\n                                                              <p>{{item.val.fecErrorFrameErrorCount}}</p>\n                                                              </div>\n                                                              <div class=\"col-sm-2 no-padding\" ><p class=\"text-bold text-left\" style=\"margin-left: -8px;\">Seconds</p><p>{{item.val.fecErrorHighCorrectionCountSecond}}</p></div>\n                                                              <div class=\"col-sm-3 no-padding\"><p class=\"text-bold text-left\">Uncorrected</p><p>{{item.val.fecErrorUncorrectedBlockCount}}</p></div>\n                                                              <div class=\"col-sm-2 no-padding\"><p class=\"text-bold text-left\">&nbsp;&nbsp;HCCS</p><p>{{item.val.fecErrorFrameErrorCountSecond}}</p></div>\n                                                          \n                                                          \n                                                            </div>\n                                                          </div>\n                                                          \n                                                        </div>  -->\n                                                        <!-- <div class=\"cell\"></div>   -->\n                                                    </div>\n                                                    </div>\n                                                    </div>\n                        \n                        \n                        \n                                               <div class=\"ext\" *ngFor=\"let itemext of item.OpticalSitesExtended; let extIndex = index\">\n                                                <!-- <div class=\"content oddList\" *ngIf=\"!extIndex\">\n                                                            No Data Found For Extended Sites\n                                                </div> -->\n                                                <div class=\"content oddList\"  *ngIf=\"extIndex\">\n                                                  \n                                                <!-- <h6 style=\"width: 100%;float: left;/* color: #6363b7; */font-size: 14px;font-weight: 700;\">Port - {{item.val.port}}</h6> -->\n                                                <div class=\"col-sm-12 no-padding\">\n                                                \n                                                <accordion>\n                                                <accordion-group class=\"custom-header\" heading=\"Performance Details Port {{itemext.portName}}\" is-open=\"true\">\n                                                    <div  class=\"pull-left\">\n                                                        <h4 style=\"width: 100%;float: left;color: #7e920f;font-size: 23px;font-weight: 900;\">Performance Details</h4>\n                                                      </div>\n                                                    <div class=\"content oddList\" >\n                                                    \n                                                    </div>\n                                                    <div class=\"col-sm-12\">\n                                                        <div class=\"col-sm-5 no-padding\" style=\"padding: 0px 14px 0px 6px;\">\n                                                            <div class=\"col-sm-12 no-padding\">\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p></p>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                    <p class=\"text-right\">RX</p>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                    <p class=\"text-right\">TX</p>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-sm-12 no-padding\">\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <!-- <p>Bytes</p> -->\n                                                                    <p class=\"accordionprg\" (click)=\"historical_graph('Bytes', card, itemext, graphicalhistory);\">Bytes</p>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                    <p class=\"text-right\">{{itemext.OpticalSitesBytes[0].bytes}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                    <p class=\"text-right\">{{itemext.OpticalSitesBytes[1].bytes}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <!-- <p>Packets</p> -->\n                                                                    <p class=\"accordionprg\" (click)=\"historical_graph('Packets', card, itemext, graphicalhistory);\">Packets</p>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                    <p class=\"text-right\">{{itemext.OpticalSitesBytes[0].packtes}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                    <p class=\"text-right\">{{itemext.OpticalSitesBytes[1].packtes}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <!-- <p>CRC Error Packets</p> -->\n                                                                    <p class=\"accordionprg\" (click)=\"historical_graph('CRC Error Packets', card, itemext, graphicalhistory);\">CRC Error Packets</p>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                    <p class=\"text-right\">{{itemext.OpticalSitesBytes[0].crcErrorPackets}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                    <p class=\"text-right\">{{itemext.OpticalSitesBytes[1].crcErrorPackets}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <!-- <p>Multicast Packets</p> -->\n                                                                    <p class=\"accordionprg\" (click)=\"historical_graph('Multicast Packets', card, itemext, graphicalhistory);\">Multicast Packets</p>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                    <p class=\"text-right\">{{itemext.OpticalSitesBytes[0].multiCastPackets}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                    <p class=\"text-right\">{{itemext.OpticalSitesBytes[1].multiCastPackets}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <!-- <p>Broadcast Packets</p> -->\n                                                                    <p class=\"accordionprg\" (click)=\"historical_graph('Broadcast Packets', card, itemext, graphicalhistory);\">Broadcast Packets</p>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                    <p class=\"text-right\">{{itemext.OpticalSitesBytes[0].broadCastPackets}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                    <p class=\"text-right\">{{itemext.OpticalSitesBytes[1].broadCastPackets}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <!-- <p>Lont Out Range Packets</p> -->\n                                                                    <p class=\"accordionprg\" (click)=\"historical_graph('Lont Out Range Packets', card, itemext, graphicalhistory);\">Long Out Range Packets</p>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                    <p class=\"text-right\">{{itemext.OpticalSitesBytes[0].longOutOfRangePackets}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                    <p class=\"text-right\">{{itemext.OpticalSitesBytes[1].longOutOfRangePackets}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <!-- <p>Pause Packets</p> -->\n                                                                    <p class=\"accordionprg\" (click)=\"historical_graph('Pause Packets', card, itemext, graphicalhistory);\">Pause Packets</p>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                    <p class=\"text-right\">{{itemext.OpticalSitesBytes[0].pausePackets}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                    <p class=\"text-right\">{{itemext.OpticalSitesBytes[1].pausePackets}}</p>\n                                                                </div>\n                                                                <!-- <div class=\"col-sm-6 no-padding\">\n                                                                    <p *ngIf=\"!x.isShow\">{{x.label_name}}</p>\n                                                                    <p *ngIf=\"x.isShow\" class=\"accordionprg\" (click)=\"historical_graph(x.label_name,itemext,  graphicalhistory);\">{{x.label_name}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                    <p class=\"text-right\">{{x.rxVal}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-3 no-padding\">\n                                                                    <p class=\"text-right\">{{x.rxVal}}</p>\n                                                                </div> -->\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm-3 no-padding \" style=\"border-right: 1px solid rgba(138, 132, 132, 0.64);border-left: 1px solid rgba(138, 132, 132, 0.64);padding: 0px 14px;margin-bottom: 9px;\">\n                                                            <div class=\"col-sm-12 no-padding\" style=\"border-bottom: 1px solid #bfb9b9;\">\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p class=\"text-left\">Octet</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p class=\"text-right\">Rx Packets</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p (click)=\"historical_graph('64', card, itemext, graphicalhistory);\" class=\"accordionprg\">64</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p>{{itemext.OpticalSitesRxPackets._64}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p (click)=\"historical_graph('65127', card, itemext, graphicalhistory);\" class=\"accordionprg\">65127</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p>{{itemext.OpticalSitesRxPackets._65127}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p (click)=\"historical_graph('128255', card, itemext, graphicalhistory);\" class=\"accordionprg\">128255</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p>{{itemext.OpticalSitesRxPackets._128255}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p (click)=\"historical_graph('256511', card, itemext, graphicalhistory);\" class=\"accordionprg\">256511</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p>{{itemext.OpticalSitesRxPackets._256511}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p (click)=\"historical_graph('5121023', card, itemext,  graphicalhistory);\" class=\"accordionprg\">5121023</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p>{{itemext.OpticalSitesRxPackets._5121023}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p (click)=\"historical_graph('10241518', card, itemext,  graphicalhistory);\" class=\"accordionprg\">10241518</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p>{{itemext.OpticalSitesRxPackets._10241518}}</p>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-sm-12 no-padding\">\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p></p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p class=\"text-right\">Packets</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p (click)=\"historical_graph('Undersize', card, itemext,  graphicalhistory);\" class=\"accordionprg\">Undersize</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p>{{itemext.OpticalSitesRxPackets.undersize}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p (click)=\"historical_graph('Oversize', card, itemext, graphicalhistory);\" class=\"accordionprg\">Oversize</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p>{{itemext.OpticalSitesRxPackets.oversize}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p (click)=\"historical_graph('Fragment', card, itemext, graphicalhistory);\" class=\"accordionprg\">Fragment</p>\n                                                                  </div>\n                                                                  <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p>{{itemext.OpticalSitesRxPackets.fragment}}</p>\n                                                                  </div>\n                                                               \n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p (click)=\"historical_graph('Jabbers', card, itemext, graphicalhistory);\" class=\"accordionprg\">Jabbers</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p>{{itemext.OpticalSitesRxPackets.jabbers}}</p>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm-2 no-padding\" style=\"padding: 0px 12px;border-right: 1px solid rgba(138, 132, 132, 0.64);\">\n                                                            <div class=\"col-sm-12 no-padding\">\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p class=\"text-left\">Queue</p><br>\n                                                                    <p (click)=\"historical_graph('Q0', card, itemext, graphicalhistory);\" class=\"accordiontblalign\">Q0</p>\n                                                                    <p (click)=\"historical_graph('Q1', card, itemext, graphicalhistory);\" class=\"accordiontblalign\">Q1</p>\n                                                                    <p (click)=\"historical_graph('Q2', card, itemext, graphicalhistory);\" class=\"accordiontblalign\">Q2</p>\n                                                                    <p (click)=\"historical_graph('Q3', card, itemext, graphicalhistory);\" class=\"accordiontblalign\">Q3</p>\n                                                                    <p (click)=\"historical_graph('Q4', card, itemext, graphicalhistory);\" class=\"accordiontblalign\">Q4</p>\n                                                                    <p (click)=\"historical_graph('Q5', card, itemext, graphicalhistory);\" class=\"accordiontblalign\">Q5</p>\n                                                                    <p (click)=\"historical_graph('Q6', card, itemext, graphicalhistory);\" class=\"accordiontblalign\">Q6</p>\n                                                                    <p (click)=\"historical_graph('Q7', card, itemext, graphicalhistory);\" class=\"accordiontblalign\">Q7</p>\n                                                                    <p (click)=\"historical_graph('Queue Summary TX Drop Packets', card, itemext, graphicalhistory);\" class=\"accordiontblalign\">Summary</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p class=\"text-right\">Tx Drop Packets</p>\n                                                                    <p>{{itemext.OpticalSitesTxPackets.Q0}}</p>\n                                                                    <p>{{itemext.OpticalSitesTxPackets.Q1}}</p>\n                                                                    <p>{{itemext.OpticalSitesTxPackets.Q2}}</p>\n                                                                    <p>{{itemext.OpticalSitesTxPackets.Q3}}</p>\n                                                                    <p>{{itemext.OpticalSitesTxPackets.Q4}}</p>\n                                                                    <p>{{itemext.OpticalSitesTxPackets.Q5}}</p>\n                                                                    <p>{{itemext.OpticalSitesTxPackets.Q6}}</p>\n                                                                    <p>{{itemext.OpticalSitesTxPackets.Q7}}</p>\n                                                                    <p>{{itemext.OpticalSitesTxPackets.summary}}</p>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm-2 no-padding\" style=\"padding-left: 5px;\">\n                                                            <div class=\"col-sm-12 no-padding\" style=\"border-bottom: 1px solid #bfb9b9;\">\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p class=\"head_bold\"></p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p class=\"head_bold\">Tx Packets</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p (click)=\"historical_graph('Excess Defer', card, itemext,  graphicalhistory);\" class=\"accordionprg\">Excess Defer</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p>{{itemext.OpticalSitesTxPackets.excessDefer}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p (click)=\"historical_graph('Giant', card, itemext,  graphicalhistory);\" class=\"accordionprg\">Giant</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p>{{itemext.OpticalSitesTxPackets.gaint}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p (click)=\"historical_graph('Underun', card, itemext,  graphicalhistory);\" class=\"accordionprg\">Underun</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p>{{itemext.OpticalSitesTxPackets.underRun}}</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p (click)=\"historical_graph('Long Check Error', card, itemext, graphicalhistory);\" class=\"accordionprg\">Long Check Error</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p>{{itemext.OpticalSitesTxPackets.longCheck}}</p>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-sm-12 no-padding\">\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p class=\"head_bold\"></p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p class=\"head_bold\">Mac Layer</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding\">\n                                                                    <p class=\"accordionprg\" (click)=\"historical_graph('Unavailable Seconds', card, itemext, graphicalhistory);\">Unavailable Seconds</p>\n                                                                </div>\n                                                                <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p>{{itemext.OpticalSitesTxPackets.unavailableSeconds}}</p>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                      </div>\n                                                    \n                                                </accordion-group>\n                                             </accordion>\n                                            </div>\n                                                </div>\n                                            </div>\n                                              </div>\n                                            </accordion-group>\n                                          </accordion>\n                                        \n                                </div>\n                              </accordion-group>\n                            </accordion>\n                </div>\n            </div>\n        </div>\n    </div>\n    </section>\n</section>\n\n\n<ng-template #graphicalhistory>\n    <div class=\"modal-header\"> \n        <button class=\"close pull-right\" aria-label=\"Close\" (click)=\"modelClose()\">&times;</button>\n        <h4 class=\"modal-title\">Graph View - {{header_hostname}}</h4>\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"row\">\n            <div class=\"col-md-12\" style=\"margin-left: -22px;\">\n                <!-- <div class=\"col-md-4 modalRef.hide()\">\n                        \n                </div> -->\n                <div class='col-xs-12 col-sm-6 col-md-6 col-lg-12'>\n                        <button *ngIf=\"!modalLoaders\" class=\"btn btn-info btn-sm algn\" [ngClass]='{\"active\":btnStauts.nrtbtn}' (click)=\"reportTypeView('nrt',properActionSet, proObj)\" type=\"submit\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> Near Real Time</button>\n                        <button *ngIf=\"!modalLoaders\" class=\"btn btn-info btn-sm algn\" [ngClass]='{\"active\":btnStauts.yesbtn}' (click)=\"reportTypeView('yesterday',properActionSet, proObj)\" type=\"submit\" name=\"Yesterday\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> Yesterday</button>\n                        <button *ngIf=\"!modalLoaders\" class=\"btn btn-info btn-sm algn\" [ngClass]='{\"active\":btnStauts.weekbtn}' (click)=\"reportTypeView('week',properActionSet, proObj)\" type=\"submit\" name=\"week\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> Week</button>\n                        <button *ngIf=\"!modalLoaders\" class=\"btn btn-info btn-sm algn\" [ngClass]='{\"active\":btnStauts.monthbtn}' (click)=\"reportTypeView('month',properActionSet, proObj)\" type=\"submit\" name=\"month\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> Month</button>\n                        <div class=\"picker algn\" *ngIf=\"!modalLoaders\">                    \n                                <div class=\"input-group\">\n                                        <input class=\"form-control\" #drp=\"bsDaterangepicker\"  (ngModelChange)=\"getLists($event)\" [bsConfig]=\"{ dateInputFormat: 'YYYY-MM-DD' }\" bsDaterangepicker [(ngModel)]=\"bsRangeValue\">\n                                     <!-- <input bsDatepicker  (ngModelChange)=\"getLists($event, toDate)\"  type=\"text\" class=\"form-control\" [(ngModel)]=\"fromDate\" [bsConfig]=\"{ dateInputFormat: 'YYYY-MM-DD' }\" id=\"datetimepicker-start\" placeholder=\"From Date\" aria-invalid=\"false\"><span>to</span>\n                                     <input bsDatepicker  (ngModelChange)=\"getLists(fromDate, $event)\" type=\"text\" class=\"form-control\" [(ngModel)]=\"toDate\" [bsConfig]=\"{ dateInputFormat: 'YYYY-MM-DD' }\" id=\"datetimepicker-end\" placeholder=\"To Date\" aria-invalid=\"false\"> -->\n                                  </div>\n                        </div>\n                        <div class='cal-box custom-block algndatapicker' *ngIf=\"!modalLoaders\">\n                                <!-- <label class='control-label in-block'>From : </label>-->\n                                <div class='in-block'><span> {{from_time}}</span> \n                                </div>\n                              </div>\n                              <div class='cal-box custom-block algndatapicker' *ngIf=\"!modalLoaders\">\n                                <!-- <label class='control-label in-block'>To : </label> -->\n                                <div *ngIf='chckrptype != \"nrt\"' class='in-block'> <span> {{to_time}}</span>\n                                </div>\n                                <div *ngIf='chckrptype == \"nrt\"' class='in-block'>{{to_date | date : \"yyyy-MM-dd HH:mm\"}}</div>\n                              </div>\n                      </div>\n                \n            </div>\n            <div class=\"col-md-12\">\n                <content-loader *ngIf=\"modalLoaders\"></content-loader>\n                <div *ngIf=\"!modalLoaders && graphWaterMarkers\" style=\"margin-top:22px; text-align: center;\">\n                        <h1> <i class=\"fa fa-fw fa-calendar-times-o fa-1x\"></i> No Records Found</h1>\n                    </div>\n                \n                <div *ngIf=\"!modalLoaders && !graphWaterMarkers\" class='pos-rel' id=\"waveLinePortGraphUniqId\"><br>\n                    <div class=\"graphdiv\">\n                      \n                        <h4 class=\"popuph4\">{{popGraphTitleOne}}</h4>\n                        <div class=\"pull-right downloadoptions\" *ngIf=\"!modalLoaders && !graphWaterMarkers\" style=\"padding: 3px 0px;\">\n                                <ul class=\"box-title-right\">\n                                    <li><img src=\"" + __webpack_require__(500) + "\" (click)=\"excelDownlod(graphData1, reportName)\"></li>\n                                       <!-- <li><img src=\"../../../assets/images/pdf.png\" (click)=\"pdfDownload(reportName,'')\"></li> -->\n                                </ul>\n                        </div> \n                        <nvd3 class=\"opticalnvd3\" [hidden]=\"!popupGraph\" [options]=\"options\" [data]=\"graphData1\"></nvd3>\n                        <!-- <svg height=\"180\" width=\"500\" id=\"newsvg\">\n                            <polyline points=\"0,40 40,40 40,80 80,80 80,120 120,120 120,160\" style=\"fill:white;stroke:red;stroke-width:4\" />\n                            Sorry, your browser does not support inline SVG.\n                          </svg> -->\n                    </div>\n                    <div class=\"graphdiv\" *ngIf=\"isTxDataDetails\">\n                        <h4 class=\"popuph4\">{{popGraphTitleTwo}}</h4>\n                        <div class=\"pull-right downloadoptions\" *ngIf=\"!modalLoaders && !graphWaterMarkers\" style=\"padding: 3px 0px;\">\n                                <ul class=\"box-title-right\">\n                                    <li><img src=\"" + __webpack_require__(500) + "\" (click)=\"excelDownlod(graphData2, reportName2)\"></li>\n                                       <!-- <li><img src=\"../../../assets/images/pdf.png\" (click)=\"pdfDownload()\"></li> -->\n                                </ul>\n                        </div> \n                        <nvd3 class=\"opticalnvd3\" [hidden]=\"!popupGraph\" [options]=\"options2\" [data]=\"graphData2\"></nvd3>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </ng-template>";

/***/ }),

/***/ 1619:
/***/ (function(module, exports, __webpack_require__) {


        var result = __webpack_require__(1620);

        if (typeof result === "string") {
            module.exports = result;
        } else {
            module.exports = result.toString();
        }
    

/***/ }),

/***/ 1620:
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1621);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(23)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../node_modules/css-loader/index.js!./ports.component.css", function() {
		var newContent = require("!!../../../../node_modules/css-loader/index.js!./ports.component.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1621:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(16)(false);
// imports


// module
exports.push([module.i, "\n.main-menu {\n    height: auto;\n}\n\n.main-menu li {\n    padding-right: 0px;\n}\n\n.main-menu li>a {\n    text-align: center;\n    font-size: 14px;\n    padding: 10px;\n    display: inline-block;\n}\n\n.excel-export {\n    color: green;\n    padding-right: 18px;\n    margin-top: 21px;\n}\n\n.excel-export i {\n    font-size: 23px;\n}\n\n.datetimepicker-start-end {\n    padding: 0 5px;\n    margin-right: 0;\n}\n\n.datetimepicker-start-end input {\n    height: 28px;\n}\n\n.datetimepicker-start-end span {\n    line-height: 28px;\n}\n\n.start-end-icon {\n    padding: 2px !important;\n\n}\n\n.sub-navigation li a {\n    cursor: pointer;\n}\n\n.pointer {\n    cursor: auto;\n}\n\n.box-title {\n    padding-bottom: 6px !important;\n}\ntable.minmaxwrapper.thresholdwrapper {\ndisplay: none !important;\n}\n.head_bold {\ntext-align: center;\ncolor: rgb(88, 77, 77);\nfont-weight: 700;\n}\n.cc-admin-circuits .orderListWrapper {\nfloat: left;\nwidth: 100%;\nborder: 1px solid #ccc;\nmargin-bottom: 20px;\n}\n.rightalgn p {\ntext-align: right !important;\n}\n.panel.panel-default.panel.panel-default.panel-open{\n  border: 1px solid #414141;\nborder-radius: 0;\n}\n\n\n.panel-default .panel-heading  h3 {\n\nfont-size: 16px !important;\n\n}\n.panel-open .panel-heading h3 {\nbackground: #414141;\n}\n.algn {\nfloat: left;\nmargin-left: 5px;\n}\n.disableClick .panel-heading {\n     pointer-events: none; \n}\n.empty-cell{\nopacity : 0;\n}\n.text-bold{\ncolor: rgb(88, 77, 77);\nfont-weight: 700;\n}\n\n.watermarkpopup{\ntop: 5px;\nopacity: 0.25;\nfont-size: 3em;\nwidth: 100%;\ntext-align: center;\nz-index: 1;\n}\n\n/* a {\ntext-decoration: none !important;\n} */\n\n\n.legend{\ndisplay: none;\n}\n.graph-header-section{ background: #f1f1f1;\n/* box-shadow: 0 8px 6px -7px #333; */\nmargin-bottom: 0;\npadding: 5px 10px;\nborder: 1px solid #f1f1f1;\n/* background-image: -webkit-gradient(linear,0 0, 0 100%, from(#e0e0e0), to(#eeeeee)); */\nborder-radius: 5px 5px 0 0; }\n.accslider{\ntransition-property: all;\ntransition-duration: .5s;\ntransition-timing-function: cubic-bezier(0, 1, 0.5, 1);\n}\n.accslider .fa-file-pdf-o {\ncolor: #fff;\nbackground: #e07c7c;\nfont-size:13px;\n}\n.control-label{ line-height: 28px!important; font-weight: normal; }\n.in-block{ display: inline-block; margin: 0 10px; font-weight: bold; color: black; text-transform: none; font-family: monospace; font-size: 14px; }\n.topotoggle .btn{ padding: 2px 5px; margin: 4px 4px; }\n.togglelegendswitch .fa{\nmargin: 11px 12px 0 0;\nfont-size: 20px;\ncolor: green;\ncursor: pointer;\n}\np {\npadding: 02px;\nfont-size: 14px;\nfont-weight: bold;\ntext-align: left;\nmargin-bottom: 2px;\n}\n.orderListWrapper .table {\ndisplay: table;\nmargin: 6px 13px;\nwidth: 98%;\n}\n.table .content:hover {\nbackground: #e0e0e0;\n}\n.orderListWrapper .table .heading, .table .content {\ndisplay: table-row;\n}\n.table .content {\ntransition: all 0.6s ease 0s;\n}\n.table .content .cell {\ndisplay: table-cell;\nvertical-align: top;\ntext-align: left;\npadding: 10px 8px;\nborder-bottom: 1px solid #ddd;\n}\n.panel-default>.panel-heading {\nfont-size: 16px !important;\ncolor: #ffffff;\nbackground-color: #3ca8b9;\nborder-color: #ddd;\nfont-weight: 700;\nheight: 33px;\npadding-top: 8px;\npadding-left: 11px;\ntext-align: left;\ntext-decoration: none;\n\n}\n.hoverdata:hover {\nbackground-color: #ddd !important;\n}\n\n.custom-header > .panel-heading{\nbackground-color: #cccccc !important;\nfont-size: 16px !important;\ncolor: black;\npadding-top: 8px;\npadding-left: 14px;\nfont-weight: 900;\n}\n.handcls{\ncursor: pointer;\n}\n.graphtitle {\npadding: 0 10px 0;\ncolor: #000000;\ntext-align: center;\nfont-weight: bold;\nfont-size: 15px;\n}\n\n.modal-lg{\n    width: 99% !important;\n   \n}\ntd > a {\n    cursor: pointer !important;\n}\n\n.accordionprg{\n    cursor: pointer !important;\n    color: #3983e2;\n    float: left;\n    text-decoration: underline;\n    text-decoration-style: dashed;\n}\n\n.accordiontblalign{\n    color: #3983e2;\n    text-decoration: underline;\n    text-decoration-style: dashed;\n}\n\n.nvtooltip {\n    \n    transition: opacity 0ms linear;\n    -moz-transition: opacity 0ms linear;\n    -webkit-transition: opacity 0ms linear;\n    \n    transition-delay: 0ms;\n    -moz-transition-delay: 0ms;\n    -webkit-transition-delay: 0ms;\n\n    }\n\n.downloadoptions > ul > li{\n    cursor: pointer !important;\n} \n\n.popuph4{\n    text-align: center;\n    font-weight: bold;\n    font-size: 25px;\n    margin-bottom: -2%;\n}\n\n.algndatapicker{\n    float: left;\nmargin-left: 5px;\nbackground: #fbfbfb;\nborder: 1px solid #e9e9e9;\npadding: 0.31em;\n}\n\n.graphdiv > svg{\n    padding-left: 35px !important;\n} \n\n.graphdiv{\n    margin-top: 22px;\n    box-shadow: 0px 0px 1px 1px #ccc;\n    padding: 10px;\n    float: left;\n    margin-bottom: 15px;\n    width: 100%;\n}\n\n.opticalnvd3 > svg{\n    padding-left: 35px !important;\n} \n\n.algn.active, .algn:active, .open>.dropdown-toggle.algn{\n    color: #fff;\n    background-color: #32515a;\n    border-color: #269abc;\n}\n\n.graphTopHeading{\n    background: #ccc;\n    padding: 5px;\n    border-radius: 8px;\n}\n\n/* .btn-info.active, .btn-info:active, .open>.dropdown-toggle.btn-info {\n    color: #fff;\n    background-color: #1c6980 !important;\n    border-color: #269abc;\n}\n\n\n.panel-default>.panel-heading {\n    color: #fff;\n    background-color: #00BCD4;\n    border-color: #2196F3;\n    text-align: left;\n    font-weight: 900;\n} */\n.details-font{\n    font-weight: bold;\n    font-size: 12px;\n    font-family: Menlo, sans-serif;\n}\n.perf-graph-wrapper {\n    box-shadow: 0px 0px 1px 1px #ccc;\n    padding: 10px;\n    float: left;\n    margin-bottom: 15px;\n    width: 100%;\n    margin-top: 15px;\n}\n\n.norecordTopology{\n    padding: 22px;\n    font-size: 22px;\n    color: #777\n}\n\n.rpt-btn-active .customerange{\n    color: #fff !important;\n    background: #556670 !important;\n}\n\n#opticalspanfav{\n    color: #6c6c6c;\n    font-size: 27px;\n    margin-top: 3px;\n    margin-left: -14px;\n}\n\n.bs-datepicker.theme-green{\n    margin-left: 61px !important;\n}\n\n\n\n.nice-radio input[type=radio]:not(old){\n    width: 0;\n    margin: 0;\n    padding: 0;\n    font-size: 1em;\n    opacity: 0;\n  }\n  \n  .nice-radio > span.r {\n    display: inline-block;\n    width: 0.875em;\n    height: 0.875em;\n    margin: 0.25em .25em 0.25em 0.25em;\n    border: 0.0625em solid #aaa;\n    border-radius: 0.50em;\n    background: transparent;\n    vertical-align: bottom;\n  }\n  \n  .nice-radio input[type=radio]:not(old):checked + span.r > span {\n    display: block;\n    width: 0.5em;\n    height: 0.5em;\n    margin: 0.16em;\n    border-radius: 0.5em;\n    background: #555;\n  }", ""]);

// exports


/***/ }),

/***/ 1622:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var common_service_1 = __webpack_require__(61);
var page_view_service_1 = __webpack_require__(498);
var router_1 = __webpack_require__(48);
var ngx_cookie_1 = __webpack_require__(62);
var WaveServiceComponent = /** @class */ (function () {
    function WaveServiceComponent(router, cookie, commonServices, PageViewService) {
        var _this = this;
        this.router = router;
        this.cookie = cookie;
        this.commonServices = commonServices;
        this.PageViewService = PageViewService;
        this.gridDataObj = {
            pdfName: 'Services Status',
            pdfTitle: 'Services Status',
            excelTitle: 'Services Status',
            excelName: 'Services Status',
            itemsPerPage: 50
        };
        this.loader = false;
        this.currentUser = {};
        this.userType = '';
        this.pagegetType = 'up';
        this.dashboardObj = {};
        this.getLinkedData = function (eventObj) {
            var sendData = {};
            sendData = eventObj;
            sendData.dashboardObj = _this.dashboardObj;
            _this.PageViewService.setData(sendData);
            _this.router.navigate(['/optical-service-details']);
        };
        this.goToHomePage = function () {
            _this.commonServices.gotoDashboard();
        };
    }
    WaveServiceComponent.prototype.ngOnInit = function () {
        var _this = this;
        var pageViewGet = this.PageViewService.getData();
        //console.log("pageViewGet", pageViewGet);
        this.dashboardObj.type = pageViewGet.type;
        this.dashboardObj.gridvalues = pageViewGet.gridvalues;
        this.gridDataObj.columns = [{
                dataKey: 'circuitName',
                title: 'Circuit Name',
                hide: false,
                width: '',
                link: true
            }, {
                dataKey: 'sourceHost',
                title: 'Source',
                hide: false,
                width: ''
            }, {
                dataKey: 'destinationHost',
                title: 'Destination',
                hide: false,
                width: ''
            },
            {
                dataKey: 'adminState',
                title: 'Admin State',
                hide: false,
                width: ''
            }, {
                dataKey: 'waveLength',
                title: 'Wavelength',
                hide: false,
                width: ''
            }, {
                dataKey: 'mgmntState',
                title: 'Operational State',
                hide: false,
                width: ''
            }];
        // this.gridDataObj.columns[4].cell = (row : any,column : any)=>{
        // 	var obj : any= {
        // 		click : false,
        // 		html  : (row[column.dataKey] != null) ? row[column.dataKey].toUpperCase() : "NA"
        // 	};
        // 	return obj;
        // }
        // this.gridDataObj.columns[6].cell = (row : any,column : any)=>{
        // 	var obj : any= {
        // 		click : false,
        // 		html  : (row[column.dataKey] != null) ? row[column.dataKey].toUpperCase() : "NA"
        // 	};
        // 	return obj;
        // }
        this.gridDataObj.id = 'optical-services-grid';
        this.currentUser = this.cookie.getObject('globals');
        this.userType = this.currentUser.user_type;
        console.log("this.currentUser", this.currentUser);
        var _post = { "opn": "data", "reporttype": "service" };
        this.loader = true;
        // this.commonServices.getRequest('/_optical/_waves/listLinkServices').then((response : any) => {
        // 	if(response.status == "success"){
        // 		this.gridDataObj.data = response.items[0].OpticalAlarmList;
        // 		this.loader = false;
        // 	}else{
        // 		this.loader = false;
        // 		//this.notification.error('Error',response.message);
        // 	}
        // },
        // (err : any) => {
        // });
        this.commonServices.postRequest('/_optical/OpticalServiceList', {}).then(function (response) {
            // console.log(response);
            if (response.status == "success") {
                //Below code direct call for grid values
                if (response.items[0].OpticalAlarmList.length > 0) {
                    response.items[0].OpticalAlarmList.map(function (d) {
                        d.mgmntState = d.mgmntState.toUpperCase();
                    });
                    if (pageViewGet.type == 'services_up') {
                        _this.gridDataObj.data = response.items[0].OpticalAlarmList.filter(function (listdata) { return listdata.mgmntState == 'UP'; });
                    }
                    else if (pageViewGet.type == 'services_down') {
                        _this.gridDataObj.data = response.items[0].OpticalAlarmList.filter(function (listdata) { return listdata.mgmntState == 'DOWN'; });
                    }
                    else {
                        _this.gridDataObj.data = response.items[0].OpticalAlarmList;
                    }
                    _this.loader = false;
                }
                else {
                    _this.gridDataObj.data = [];
                    _this.loader = false;
                }
                // below commented code used for getting the value from dashboard and show the status
                /*if(pageViewGet.gridvalues.items[0].OpticalDashboardServiceDetails.length > 0){
                
                    for (var i = 0, len = pageViewGet.gridvalues.items[0].OpticalDashboardServiceDetails.length; i < len; i++) {
                        for (var j = 0, len2 = response.items[0].OpticalAlarmList.length; j < len2; j++) {
                            // var portWithExtArr : any = pageViewGet.gridvalues.items[0].OpticalDashboardServiceDetails[i].port.split(".");
                            // var onlyPortValue : any = portWithExtArr[0];
                            var portSpitConvertion : any = response.items[0].OpticalAlarmList[j].sourcePort.split("-");
                            var onlyPortVal : any = portSpitConvertion[0];
                            if (pageViewGet.gridvalues.items[0].OpticalDashboardServiceDetails[i].port === onlyPortVal) {
                                response.items[0].OpticalAlarmList[j].adminState = response.items[0].OpticalAlarmList[j].adminState.toUpperCase();
                                response.items[0].OpticalAlarmList[j].mgmntState = pageViewGet.gridvalues.items[0].OpticalDashboardServiceDetails[j].status.toUpperCase();
                                response.items[0].OpticalAlarmList[j].ip =  pageViewGet.gridvalues.items[0].OpticalDashboardServiceDetails[j].ip;
                            }
                        }
                    }

                    console.log('After Conversion', response.items);

                    if(pageViewGet.type == 'services_up'){
                        this.gridDataObj.data =	response.items[0].OpticalAlarmList.filter((listdata: any) => listdata.mgmntState === 'UP');
                    }else if(pageViewGet.type == 'services_down'){
                        this.gridDataObj.data =	response.items[0].OpticalAlarmList.filter((listdata: any) => listdata.mgmntState === 'DOWN');
                    }else{
                            this.gridDataObj.data = response.items[0].OpticalAlarmList;
                     }
                    this.loader = false;
                }else if(!response.items[0].OpticalAlarmList.length){
                    this.gridDataObj.data = response.items[0].OpticalAlarmList;
                    this.loader = false;
                } */
            }
            else {
                _this.loader = false;
                _this.commonServices.error(response.message);
            }
        }, function (err) {
            _this.commonServices.error(err.message);
        });
    };
    WaveServiceComponent = __decorate([
        core_1.Component({
            selector: '<wave-service>',
            template: __webpack_require__(1623)
        }),
        __metadata("design:paramtypes", [router_1.Router, ngx_cookie_1.CookieService, common_service_1.CommonService, page_view_service_1.PageViewService])
    ], WaveServiceComponent);
    return WaveServiceComponent;
}());
exports.WaveServiceComponent = WaveServiceComponent;


/***/ }),

/***/ 1623:
/***/ (function(module, exports) {

module.exports = "<section id=\"main-content\">\n        <section class=\"wrapper\">\n        <ol class=\"breadcrumb\">\n            <li (click)=\"goToHomePage()\">Home</li>\n              <li class=\"active\">Optical Services Status</li>\n          </ol>\n          <!-- <div class=\"dashboard-txt\">\n            <h1>Optical Services Status<a href=\"#optical\" class=\"pull-right\" data-toggle=\"tab\" style=\"float: right;line-height: 30px;padding-left: 20px;text-decoration: underline;font-size: 16px;cursor: pointer;\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Go Back</a></h1>\n          </div> -->\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <div class=\"box-title box-title-tabs\">              \n              <div class=\"pull-right\">\n                <ul class=\"box-title-right\">\n                  <li>\n                    <h1><a href=\"#optical\" class=\"pull-right\" data-toggle=\"tab\" style=\"float: right;line-height: 30px;padding-left: 20px;text-decoration: underline;font-size: 16px;cursor: pointer;\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Go Back</a></h1>\n                  </li>\n                </ul>\n              </div>\n              <div class=\"pull-left\">\n                <h3>Optical Services Status</h3>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n          </div>\n        </div>\n        <data-grid  *ngIf=\"!loader\" (linkClick)=\"getLinkedData($event)\" [gridobj]=\"gridDataObj\"></data-grid>\n        <content-loader *ngIf=\"loader\"></content-loader>   \n        </section>\n    </section>";

/***/ }),

/***/ 1624:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var common_service_1 = __webpack_require__(61);
var page_view_service_1 = __webpack_require__(498);
var router_1 = __webpack_require__(48);
var ngx_cookie_1 = __webpack_require__(62);
var modal_1 = __webpack_require__(104);
var common_1 = __webpack_require__(6);
var excell_service_1 = __webpack_require__(266);
var ServiceDetailsComponent = /** @class */ (function () {
    function ServiceDetailsComponent(router, cookie, commonServices, PageViewService, modalService, dateFilter, excellService) {
        var _this = this;
        this.router = router;
        this.cookie = cookie;
        this.commonServices = commonServices;
        this.PageViewService = PageViewService;
        this.modalService = modalService;
        this.dateFilter = dateFilter;
        this.excellService = excellService;
        this.obj = {};
        this.modalLoaders = false;
        this.graphWaterMarkers = false;
        this.options = {};
        this.options2 = {};
        this.isTxDataDetails = false;
        this.isSessionExpired = false;
        this.excelDateObject = {};
        this.pageOperationObject = {
            title: 'Optical Services Details',
        };
        this.resBasicExtendedData = [];
        this.finalArrDetails = [];
        this.currentPortData = "";
        this.properdata = "";
        this.btnStauts = {};
        this.pctage = true;
        this.showGraph = true;
        this.custom_download = true;
        this.custom_option = true;
        this.graphDataDetails = [];
        this.txgraphDataDetails = [];
        this.isBasicVisbile = false;
        this.isAdvancedVisible = false;
        this.fromDate = new Date();
        this.toDate = new Date();
        this.from_time = '00:00:00';
        this.to_time = '23:59:59';
        this.popupGraph = false;
        this.graphDummyPollPush = [];
        this.gridDataObj = {
            pdfName: 'Optical_Services_Details',
            pdfTitle: 'Optical_Services_Details',
            excelTitle: 'Optical_Services_Details',
            excelName: 'Optical_Services_Details',
        };
        this.proObj = {};
        this.serviceGridObject = {};
        this.passingObjectData = {};
        this.sortByKey = function (arr) {
            arr.sort(function (a, b) { return (a.sortOrder > b.sortOrder) ? 1 : ((b.sortOrder > a.sortOrder) ? -1 : 0); });
        };
        this.finalArrConversion = function (finalArr) {
            var incre = 0;
            if (finalArr.length) {
                finalArr.forEach(function (content) {
                    var OpticalServiceBytes = finalArr[incre].OpticalServiceBytes;
                    OpticalServiceBytes.forEach(function (element) {
                        for (var key in element) {
                            if (element[key] == '0.00') {
                                element[key] = '0';
                            }
                        }
                    });
                    var OpticalServiceRxPackets = finalArr[incre].OpticalServiceRxPackets;
                    for (var key in OpticalServiceRxPackets) {
                        if (OpticalServiceRxPackets[key] == '0.00') {
                            OpticalServiceRxPackets[key] = '0';
                        }
                    }
                    var OpticalServiceTxPackets = finalArr[incre].OpticalServiceTxPackets;
                    for (var key in OpticalServiceTxPackets) {
                        if (OpticalServiceTxPackets[key] == '0.00') {
                            OpticalServiceTxPackets[key] = '0';
                        }
                    }
                    incre++;
                });
            }
            return finalArr;
        };
        this.formatInt = function (obj) {
            for (var key in obj) {
                if (obj[key].indexOf('.00') !== -1) {
                    obj[key] = parseInt(obj[key]);
                }
            }
            return obj;
        };
        this.handleClick = function (event) {
            event.preventDefault();
        };
        this.historical_graph = function (property, mainValueObj, template) {
            // console.log("dddddddddddddd", property, mainValueObj);
            var lineCardObj = {};
            lineCardObj.ip = "";
            _this.properActionSet = property;
            // Assign the object value and get the object date change, and button click 
            _this.passingObjectData = {};
            _this.passingObjectData = mainValueObj;
            /* OLD  var selectedPort: any = {
                  "propertyAction": property,
                  "portName": this.proObj.sourcePort,
                  "hostName": this.proObj.circuitName,
                  "ip": lineCardObj.ip
              }; */
            var selectedPort = {
                "propertyAction": property,
                "portName": _this.proObj.sourcePort,
                "hostName": mainValueObj.HostName,
                "ip": mainValueObj.Ip
            };
            _this.currentPortData = mainValueObj.portName;
            _this.properdata = property;
            _this.btnStauts = {};
            _this.btnStauts.nrtbtn = true;
            var _fromDate = _this.dateFilter.transform(new Date(), "yyyy-MM-dd");
            var _toDate = _this.dateFilter.transform(new Date(), "yyyy-MM-dd");
            _this.bsRangeValue = [new Date(_fromDate), new Date(_toDate)];
            // this.to_date = _toDate;
            // this.fr_date = _fromDate;
            _this.from_time = '00:00:00';
            _this.to_time = '23:59:59';
            _this.header_hostname = mainValueObj.HostName;
            // var _post: any =  {"port":"6-ExtendedTxRx","paramProperty":"Bytes","reportType":"month","fromDateISO":"2018-03-25","toDateISO":"2018-04-23","fromTimeISO":"00:00:00","toTimeISO":"23:59:59","ip":"100.66.28.117"}
            var _post = {
                "port": _this.proObj.sourcePort,
                "paramProperty": property,
                "reportType": "nrt",
                "hostName": mainValueObj.HostName,
                "fromDateISO": _fromDate,
                "toDateISO": _toDate,
                "fromTimeISO": "00:00:00",
                "toTimeISO": "23:59:59",
                "ip": mainValueObj.Ip
            };
            _this.popupGraph = true;
            _this.getHistoryReports(_post);
            if (!_this.isSessionExpired) {
                _this.modalRef = _this.modalService.show(template, { class: 'modal-lg' });
            }
            else {
                _this.ngOnDestroy();
            }
        };
        this.getHistoryReports = function (_post) {
            _this.isTxDataDetails = false;
            _this.modalLoaders = true;
            _this.commonServices.postRequest('/_optical/opticalGraph', _post).then(function (res) {
                _this.excelDateObject = { 'excelFromDate': _post.fromDateISO + " @ " + _post.fromTimeISO, 'excelToDate': _post.toDateISO + " @ " + _post.toTimeISO };
                if (res.status == "success") {
                    if (res.items[0].CoreGraphData.length > 0) {
                        _this.popGraphTitleOne = res.items[0].CoreGraphData[0].keyName.toUpperCase();
                        if (res.items[0].CoreGraphData[0].keyName == 'intrx_bytes') {
                            _this.reportName = "BYTES";
                        }
                        else {
                            var getStr = res.items[0].CoreGraphData[0].keyName;
                            var isContainsRX = getStr.includes("rx");
                            var isContainsTXFirst = getStr.includes("tx");
                            if (isContainsRX) {
                                _this.reportName = "PACKETS";
                            }
                            else if (isContainsTXFirst) {
                                _this.reportName = "PACKETS";
                            }
                            else {
                                _this.reportName = res.items[0].CoreGraphData[0].keyName.toUpperCase();
                            }
                        }
                        _this.rxGraphDraw(res.items[0]);
                        /* This Condition is for TX BYtes Second Graph */
                        if (res.items[0].CoreGraphData.length > 1) {
                            _this.popGraphTitleTwo = res.items[0].CoreGraphData[1].keyName.toUpperCase();
                            if (res.items[0].CoreGraphData[1].keyName == 'inttx_bytes') {
                                _this.reportName2 = "BYTES";
                            }
                            else {
                                var getStrTx = res.items[0].CoreGraphData[1].keyName;
                                var isContainsTX = getStrTx.includes("tx");
                                if (isContainsTX) {
                                    _this.reportName2 = "PACKETS";
                                }
                                else {
                                    _this.reportName2 = res.items[0].CoreGraphData[1].keyName.toUpperCase();
                                }
                            }
                            _this.isTxDataDetails = true;
                            _this.txGraphDraw(res.items[0]);
                        }
                        _this.modalLoaders = false;
                        _this.graphWaterMarkers = false;
                    }
                    else {
                        _this.modalLoaders = false;
                        _this.graphWaterMarkers = true;
                    }
                }
                else {
                    _this.modalLoaders = false;
                    _this.graphWaterMarkers = true;
                    _this.commonServices.error(res.message);
                }
            }, function (err) {
                _this.isSessionExpired = true;
                _this.commonServices.error(err.message);
            });
        };
        this.isEmptyObject = function (obj) {
            for (var prop in obj) {
                if (obj.hasOwnProperty(prop)) {
                    return false;
                }
            }
            return true;
        };
        this.reportTypeView = function (reportType, selectedPort, currentObjData) {
            //console.log(reportType);
            // console.log("data details...", currentObjData);
            var fr_date;
            var to_date;
            if (reportType) {
                _this.from_time = '00:00:00';
                _this.to_time = '23:59:59';
                if (reportType == 'nrt') {
                    _this.btnStauts = {};
                    _this.btnStauts.nrtbtn = true;
                    fr_date = _this.dateFilter.transform(new Date(), "yyyy-MM-dd");
                    to_date = _this.dateFilter.transform(new Date(), "yyyy-MM-dd");
                    _this.bsRangeValue = [new Date(fr_date), new Date(to_date)];
                }
                else if (reportType == 'yesterday') {
                    _this.btnStauts = {};
                    _this.btnStauts.yesbtn = true;
                    var from_d = new Date();
                    from_d.setDate(from_d.getDate() - 1);
                    fr_date = _this.dateFilter.transform(from_d, "yyyy-MM-dd");
                    to_date = fr_date;
                    _this.bsRangeValue = [new Date(fr_date), new Date(to_date)];
                }
                else if (reportType == 'week') {
                    _this.btnStauts = {};
                    _this.btnStauts.weekbtn = true;
                    var from_d = new Date();
                    from_d.setDate(from_d.getDate() - 7);
                    fr_date = _this.dateFilter.transform(from_d, "yyyy-MM-dd");
                    to_date = new Date();
                    to_date.setDate(to_date.getDate() - 1);
                    to_date = _this.dateFilter.transform(to_date, "yyyy-MM-dd");
                    _this.bsRangeValue = [new Date(fr_date), new Date(to_date)];
                }
                else if (reportType == 'month') {
                    _this.btnStauts = {};
                    _this.btnStauts.monthbtn = true;
                    var from_d = new Date();
                    from_d.setDate(from_d.getDate() - 30);
                    fr_date = _this.dateFilter.transform(from_d, "yyyy-MM-dd");
                    to_date = new Date();
                    to_date.setDate(to_date.getDate() - 1);
                    to_date = _this.dateFilter.transform(to_date, "yyyy-MM-dd");
                    _this.bsRangeValue = [new Date(fr_date), new Date(to_date)];
                }
                fr_date = fr_date;
                to_date = to_date;
                _this.showFromdata = fr_date;
                _this.showTodata = _this.dateFilter.transform(new Date(), "yyyy-MM-dd") + " " + to_date;
                _this.fromDate = new Date(fr_date);
                _this.toDate = new Date(to_date);
                var _post = {
                    "port": _this.proObj.sourcePort,
                    "paramProperty": _this.properActionSet,
                    "reportType": reportType,
                    "hostName": _this.passingObjectData.HostName,
                    "fromDateISO": fr_date,
                    "toDateISO": to_date,
                    "fromTimeISO": _this.from_time,
                    "toTimeISO": _this.to_time,
                    "ip": _this.passingObjectData.Ip
                };
                _this.getHistoryReports(_post);
            }
        };
        /*  To enable zoom chang type as "lineWithFocusChart" */
        this.rxGraphDraw = function (graphObjData) {
            // console.log('inRXGraph', graphObjData);
            var xAxisMinData = graphObjData.CoreGraphData[0].xAxisMin;
            var xAxisMaxData = graphObjData.CoreGraphData[0].xAxisMax;
            var yAxisMinData = graphObjData.CoreGraphData[0].yAxisMin;
            var yAxisMaxData = graphObjData.CoreGraphData[0].yAxisMax;
            _this.options = {
                chart: {
                    type: 'lineWithFocusChart',
                    height: 450,
                    margin: {
                        top: 20,
                        right: 95,
                        bottom: 60,
                        left: 55
                    },
                    padding: {
                        left: 40
                    },
                    x: function (d) { return new Date(d.X).getTime(); },
                    y: function (d) { return d.Y; },
                    //average: function(d: any)  { return d/1024/1024/1024; },
                    // dispatch: {
                    //     stateChange: function (e: any) { console.log("stateChange"); },
                    //     changeState: function (e: any) { console.log("changeState"); },
                    //     tooltipShow: function (e: any) { console.log("tooltipShow"); },
                    //     tooltipHide: function (e: any) { console.log("tooltipHide"); }
                    // },
                    //padData: true,
                    color: d3.scale.category10().range(),
                    duration: 300,
                    //   forceX :  [xAxisMinData, xAxisMaxData],
                    //forceY : [yAxisMinData, yAxisMaxData],
                    useInteractiveGuideline: true,
                    clipVoronoi: false,
                    focusShowAxisX: true,
                    focusShowAxisY: false,
                    xAxis: {
                        axisLabel: 'Date',
                        tickFormat: function (d) {
                            return d3.time.format('%d/%b/%y %H:%M')(new Date(d));
                        },
                        wrapLabels: true,
                        axisLabelDistance: 15,
                        showMaxMin: true,
                        staggerLabels: true
                    },
                    x2Axis: {
                        tickFormat: function (d) {
                            return d3.time.format('%d/%b/%y %H:%M')(new Date(d));
                        },
                        ticks: 10,
                    },
                    yAxis: {
                        axisLabel: _this.reportName,
                        tickFormat: function (d) {
                            if (Number.isInteger(d)) {
                                return d;
                            }
                            else {
                                return d3.format('.5f')(d);
                            }
                        },
                        // tickPadding:-25, 
                        axisLabelDistance: 15,
                        rotateYLabel: true,
                        showMaxMin: true,
                        orient: 'left',
                        css: { 'transform': 'rotate(45deg)' }
                    },
                    y2Axis: {
                        tickFormat: function (d) {
                            if (Number.isInteger(d)) {
                                return d;
                            }
                            else {
                                return d3.format('.2f')(d);
                            }
                        }
                    },
                    interactiveLayer: {
                        tooltip: {
                            valueFormatter: function (d, i) {
                                return d;
                            }
                        }
                    },
                    callback: function (chart) {
                    }
                }
            };
            if (yAxisMinData == 0 && yAxisMaxData == 0) {
                _this.options.chart.forceY = [yAxisMinData, 5];
            }
            d3.selectAll('.nvtooltip').style('opacity', 0);
            //console.log("graphDataDetails", graphObjData.CoreGraphData[0].CoreGraphDataPoints);
            _this.graphData1 = [
                {
                    key: _this.popGraphTitleOne,
                    values: graphObjData.CoreGraphData[0].CoreGraphDataPoints[0],
                }
            ];
        };
        this.txGraphDraw = function (graphObjData) {
            //  console.log('inTXGraph', graphObjData);
            var xAxisMinData = graphObjData.CoreGraphData[1].xAxisMin;
            var xAxisMaxData = graphObjData.CoreGraphData[1].xAxisMax;
            var yAxisMinData = graphObjData.CoreGraphData[1].yAxisMin;
            var yAxisMaxData = graphObjData.CoreGraphData[1].yAxisMax;
            _this.options2 = {
                chart: {
                    type: 'lineWithFocusChart',
                    height: 450,
                    margin: {
                        top: 20,
                        right: 95,
                        bottom: 60,
                        left: 55
                    },
                    padding: {
                        left: 40
                    },
                    x: function (d) { return new Date(d.X).getTime(); },
                    y: function (d) { return d.Y; },
                    //average: function(d: any)  { return d/1024/1024/1024; },
                    // dispatch: {
                    //     stateChange: function (e: any) { console.log("stateChange"); },
                    //     changeState: function (e: any) { console.log("changeState"); },
                    //     tooltipShow: function (e: any) { console.log("tooltipShow"); },
                    //     tooltipHide: function (e: any) { console.log("tooltipHide"); }
                    // },
                    //padData: true,
                    color: d3.scale.category10().range(),
                    duration: 300,
                    //forceX :  [xAxisMinData, xAxisMaxData],
                    //forceY : [yAxisMinData, yAxisMaxData],
                    useInteractiveGuideline: true,
                    clipVoronoi: false,
                    focusShowAxisX: true,
                    focusShowAxisY: false,
                    xAxis: {
                        axisLabel: 'Date',
                        tickFormat: function (d) {
                            return d3.time.format('%d/%b/%y %H:%M')(new Date(d));
                        },
                        wrapLabels: true,
                        axisLabelDistance: 15,
                        showMaxMin: true,
                        staggerLabels: true
                    },
                    x2Axis: {
                        tickFormat: function (d) {
                            return d3.time.format('%d/%b/%y %H:%M')(new Date(d));
                        },
                        ticks: 10,
                    },
                    yAxis: {
                        axisLabel: _this.reportName,
                        tickFormat: function (d) {
                            if (Number.isInteger(d)) {
                                return d;
                            }
                            else {
                                return d3.format('.5f')(d);
                            }
                        },
                        // tickPadding:-25, 
                        axisLabelDistance: 15,
                        rotateYLabel: true,
                        showMaxMin: true,
                        orient: 'left',
                        css: { 'transform': 'rotate(45deg)' }
                    },
                    y2Axis: {
                        tickFormat: function (d) {
                            if (Number.isInteger(d)) {
                                return d;
                            }
                            else {
                                return d3.format('.2f')(d);
                            }
                        }
                    },
                    interactiveLayer: {
                        tooltip: {
                            valueFormatter: function (d, i) {
                                return d;
                            }
                        }
                    },
                    callback: function (chart) {
                    }
                }
            };
            if (yAxisMinData == 0 && yAxisMaxData == 0) {
                _this.options.chart.forceY = [yAxisMinData, 5];
            }
            d3.selectAll('.nvtooltip').style('opacity', 0);
            // console.log("graphDataDetails2", graphObjData.CoreGraphData[1].CoreGraphDataPoints);
            _this.graphData2 = [
                {
                    key: _this.popGraphTitleTwo,
                    values: graphObjData.CoreGraphData[1].CoreGraphDataPoints[0],
                }
            ];
        };
        this.modelClose = function () {
            _this.popupGraph = false;
            _this.modalRef.hide();
        };
        this.excelDownlod = function (arr, columnName) {
            // console.log(arr);
            _this.gridDataObj.id = 'optical-port-grid';
            _this.gridDataObj = {
                excelTitle: _this.properActionSet,
                excelName: 'Optical-Service-' + _this.properActionSet,
            };
            _this.gridDataObj.fromDate = _this.excelDateObject.excelFromDate;
            _this.gridDataObj.toDate = _this.excelDateObject.excelToDate;
            _this.gridDataObj.hostname = _this.passingObjectData.HostName;
            _this.gridDataObj.ip = _this.passingObjectData.Ip;
            _this.gridDataObj.columns = [{
                    dataKey: 'X',
                    title: 'Date',
                    hide: false,
                    width: ''
                }, {
                    dataKey: 'Y',
                    title: 'Value (' + columnName + ')',
                    hide: false,
                    width: ''
                }];
            _this.gridDataObj.data = arr[0].values;
            _this.excellService.opticalGenerateExcell(_this.gridDataObj);
        };
        this.goBackServiceDetails = function () {
            var sendData = {};
            sendData = _this.serviceGridObject.dashboardObj;
            _this.PageViewService.setData(sendData);
            _this.router.navigate(['/optical-services']);
        };
        this.goToHomePage = function () {
            _this.commonServices.gotoDashboard();
        };
        this.getLists = function (getfromDate, gettoDate) {
            // console.log(fromDate);
            // console.log(this.proObj);
            //this.publicReportType
            // this.publicReportType.type = reportType;
            // this.publicReportType.currentObjData =  currentObjData;
            _this.btnStauts = {};
            var fromDateStr = _this.dateFilter.transform(getfromDate, "yyyy-MM-dd");
            var toDateStr = _this.dateFilter.transform(gettoDate, "yyyy-MM-dd");
            // this.bsRangeValue = [new Date(fromDateStr), new Date(toDateStr)];   
            _this.from_time = '00:00:00';
            _this.to_time = '23:59:59';
            var _post = {
                "port": _this.proObj.sourcePort,
                "paramProperty": _this.properActionSet,
                "reportType": "custom",
                "hostName": _this.passingObjectData.HostName,
                "fromDateISO": fromDateStr,
                "toDateISO": toDateStr,
                "fromTimeISO": _this.from_time,
                "toTimeISO": _this.to_time,
                "ip": _this.passingObjectData.Ip
            };
            _this.getHistoryReports(_post);
        };
    }
    ServiceDetailsComponent.prototype.ngOnInit = function () {
        var _this = this;
        /*** Getting IP Address From Previous Page Start ***/
        var pageViewGet = this.PageViewService.getData();
        this.datePickerMinDate = new Date();
        this.datePickerMaxDate = new Date();
        this.datePickerMinDate.setDate(this.datePickerMinDate.getDate() - 90);
        this.datePickerMaxDate.setDate(this.datePickerMaxDate.getDate());
        //console.log('pagdata', pageViewGet);
        this.serviceGridObject = pageViewGet;
        this.proObj = pageViewGet.row;
        // console.log('pageViewGet.dashboardObj', pageViewGet.dashboardObj);
        var ipAddressWithPort = pageViewGet.row.ip;
        this.maxDate = new Date();
        this.maxDate.setDate(this.maxDate.getDate() - 1);
        if (pageViewGet.row.name != undefined) {
            // console.log('servcieDATADD')
            this.isBasicVisbile = false;
            this.isAdvancedVisible = false;
            this.header_hostname = pageViewGet.row.name;
            this.serviceName = pageViewGet.row.name;
        }
        else if (pageViewGet.row.hostname != undefined) {
            this.pageOperationObject = {
                title: 'Line Card Ports Details',
            };
            this.isBasicVisbile = true;
            this.isAdvancedVisible = true;
            this.header_hostname = pageViewGet.row.hostname;
            this.serviceName = pageViewGet.row.hostname;
        }
        else {
            // this.router.navigate(['/optical']);
        }
        this.serviceName = pageViewGet.value;
        var ip = pageViewGet.row.ip;
        var ip2 = pageViewGet.row.ip2;
        var portid = pageViewGet.row.portname;
        var hostname1 = pageViewGet.row.hostname1;
        var hostname2 = pageViewGet.row.hostname2;
        this.unitDetailsIPAddres = pageViewGet.row.ip;
        // if(ipAddressWithPort != undefined){
        //     var onlyIp : any = ipAddressWithPort.split(':');
        //     
        //     onlyIPAddrs = onlyIp[0];
        //    }else{
        //     onlyIPAddrs = 'none';   
        //    }
        //console.log("onlyIPAddrs", onlyIPAddrs);
        /*** Getting IP Address From Previous Page End ***/
        //  var hostNameConversion : any = {};
        //  hostNameConversion[ip] = hostname1.split('_')[0];
        //  hostNameConversion[ip2] = hostname2.split('_')[0];
        // var _post: any = { "ip": ip,"ip2": ip2,"port": portid,"hostname1":hostname1,"hostname2":hostname2 };
        var _post = { "name": this.serviceName };
        this.loader = true;
        this.commonServices.postRequest('/_optical/OpticalServicePort', _post).then(function (response) {
            //  console.log("reddata", response);
            if (response.status == "success") {
                _this.finalArrDetails = _this.finalArrConversion(response.items[0].OpticalServicePort);
                _this.loaders = false;
                console.log('finalarray', _this.finalArrDetails);
                _this.showListContent = true;
                _this.loader = false;
                _this.showListContent = true;
            }
            else {
                _this.loader = false;
                _this.commonServices.error(response.message);
            }
        }, function (err) {
            _this.commonServices.error(err.message);
        });
    };
    ServiceDetailsComponent.prototype.pdfDownload = function () {
        console.log('generating pdf');
        //this.pdfService.generateSVGPDF();  
    };
    ServiceDetailsComponent.prototype.ngOnDestroy = function () {
        if (this.modalRef) {
            this.modalRef.hide();
        }
    };
    ServiceDetailsComponent = __decorate([
        core_1.Component({
            selector: 'service-details',
            template: __webpack_require__(1625)
        }),
        __metadata("design:paramtypes", [router_1.Router, ngx_cookie_1.CookieService, common_service_1.CommonService, page_view_service_1.PageViewService, modal_1.BsModalService, common_1.DatePipe, excell_service_1.ExcellService])
    ], ServiceDetailsComponent);
    return ServiceDetailsComponent;
}());
exports.ServiceDetailsComponent = ServiceDetailsComponent;


/***/ }),

/***/ 1625:
/***/ (function(module, exports, __webpack_require__) {

module.exports = "<section id=\"main-content\">\n    <section class=\"wrapper\">\n        <ol class=\"breadcrumb\">\n            <li (click)=\"goToHomePage()\">Home</li>\n            <li>\n                <a (click)=\"goBackServiceDetails()\">Optical Services Details</a>\n            </li>\n            <li class=\"active\">{{pageOperationObject.title}}</li>\n\n        </ol>\n   \n    <!-- <div class=\"dashboard-txt\">\n        <h1>{{pageOperationObject.title}}\n            <a (click)=\"goBackServiceDetails()\" class=\"pull-right\" data-toggle=\"tab\" style=\"float: right;line-height: 30px;padding-left: 20px;text-decoration: underline;font-size: 16px;cursor: pointer;\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Go Back</a>\n        </h1>\n    </div><br><br><br><br> -->\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"box-title box-title-tabs\">              \n            <div class=\"pull-right\">\n              <ul class=\"box-title-right\">\n                <li>\n                    <h1><a (click)=\"goBackServiceDetails()\" class=\"pull-right\" data-toggle=\"tab\" style=\"float: right;line-height: 30px;padding-left: 20px;text-decoration: underline;font-size: 16px;cursor: pointer;\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Go Back</a>\n                    </h1>\n                </li>\n              </ul>\n            </div>\n            <div class=\"pull-left\">\n              <h3>{{pageOperationObject.title}}</h3>\n            </div>\n            <div class=\"clearfix\"></div>\n          </div>\n        </div>\n      </div>\n    <div class=\"row accorditoncustom\">\n        <div class=\"col-xs-12 no-padding connect-list-wrapper circuit-wrapper\">\n            <div class=\"col-md-12 list-tabs\" style=\"padding: 0;\">\n                <div class=\"panel-heading cl-both header-section\" id=\"common_header\">\n                </div>\n                <div class=\"panel-group\" id=\"accordion\">\n                      <div class=\"col-xs-12 connect-list-wrapper circuit-wrapper\">\n                 \n                        <div class=\"col-md-12 list-tabs\" style=\"padding: 0;\" >\n                          <div class=\"panel-heading cl-both header-section\" id=\"common_header\">\n                          </div>\n                          <content-loader *ngIf=\"loader\"></content-loader>\n                          \n                            <div class=\"col-md-12\" >\n                                    <!-- <accordion close-others=\"true\"> -->\n                              <accordion>\n                                <accordion-group  heading=\"{{serviceName}}\" [isOpen]=\"true\" class=\"col-md-12 steps-tabs-content cc-admin-circuits no-padding text-center panel\">\n                                 \n                                  <div>\n                                      <!-- <div  class=\"pull-left\">\n                                          <h4 style=\"width: 100%;float: left;color: #7e920f;font-size: 23px;font-weight: 900;\">PORT - {{itemext.portName}} Status Details</h4>\n                                        </div> -->\n            \n                                   <div class=\"ext\">\n                                    \n                                      \n                                    <div class=\"content oddList\">\n                                      \n                                    <!-- <h6 style=\"width: 100%;float: left;/* color: #6363b7; */font-size: 14px;font-weight: 700;\">Port - {{item.val.port}}</h6> -->\n                                    <div class=\"col-sm-12 no-padding\"  *ngFor='let itemext of finalArrDetails; let index = index'>\n                                    <accordion> \n                                      <accordion-group  heading=\"Performance Details {{itemext.HostName}} - {{proObj.sourcePort}} \" [isOpen]=\"true\" class=\"col-md-12 steps-tabs-content cc-admin-circuits no-padding text-center panel\">\n                                   \n                                        <!-- <div  class=\"pull-left\">\n                                            <h4 style=\"width: 100%;float: left;color: #7e920f;font-size: 23px;font-weight: 900;\">Performance Details</h4>\n                                          </div> -->\n                                        <div class=\"content oddList\" >\n                                        \n                                        </div>\n                                        <div class=\"col-sm-12\">\n                                            <div class=\"col-sm-5 no-padding\" style=\"padding: 0px 14px 0px 6px;\">\n                                                <div class=\"col-sm-12 no-padding\">\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p></p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right details-font\">RX</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right details-font\">TX</p>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-sm-12 no-padding\">\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <!-- <p>Bytes</p> -->\n                                                        <p class=\"accordionprg\" (click)=\"historical_graph('Bytes', itemext, graphicalhistory);\">Bytes</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalServiceBytes[0].bytes}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalServiceBytes[1].bytes}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <!-- <p>Packets</p> -->\n                                                        <p class=\"accordionprg\" (click)=\"historical_graph('Packets', itemext, graphicalhistory);\">Packets</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalServiceBytes[0].packtes}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalServiceBytes[1].packtes}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <!-- <p>CRC Error Packets</p> -->\n                                                        <p class=\"accordionprg\" (click)=\"historical_graph('CRC Error Packets', itemext, graphicalhistory);\">CRC Error Packets</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalServiceBytes[0].crcErrorPackets}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalServiceBytes[1].crcErrorPackets}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <!-- <p>Multicast Packets</p> -->\n                                                        <p class=\"accordionprg\" (click)=\"historical_graph('Multicast Packets', itemext, graphicalhistory);\">Multicast Packets</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalServiceBytes[0].multiCastPackets}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalServiceBytes[1].multiCastPackets}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <!-- <p>Broadcast Packets</p> -->\n                                                        <p class=\"accordionprg\" (click)=\"historical_graph('Broadcast Packets', itemext, graphicalhistory);\">Broadcast Packets</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalServiceBytes[0].broadCastPackets}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalServiceBytes[1].broadCastPackets}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <!-- <p>Lont Out Range Packets</p> -->\n                                                        <p class=\"accordionprg\" (click)=\"historical_graph('Lont Out Range Packets', itemext, graphicalhistory);\">Long Out Range Packets</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalServiceBytes[0].longOutOfRangePackets}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalServiceBytes[1].longOutOfRangePackets}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <!-- <p>Pause Packets</p> -->\n                                                        <p class=\"accordionprg\" (click)=\"historical_graph('Pause Packets', itemext, graphicalhistory);\">Pause Packets</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalServiceBytes[0].pausePackets}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalServiceBytes[1].pausePackets}}</p>\n                                                    </div>\n                                                    <!-- <div class=\"col-sm-6 no-padding\">\n                                                        <p *ngIf=\"!x.isShow\">{{x.label_name}}</p>\n                                                        <p *ngIf=\"x.isShow\" class=\"accordionprg\" (click)=\"historical_graph(x.label_name,itemext,  graphicalhistory);\">{{x.label_name}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{x.rxVal}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{x.rxVal}}</p>\n                                                    </div> -->\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm-3 no-padding \" style=\"border-right: 1px solid rgba(138, 132, 132, 0.64);border-left: 1px solid rgba(138, 132, 132, 0.64);padding: 0px 14px;margin-bottom: 9px;\">\n                                                          <div class=\"col-sm-12 no-padding\" style=\"border-bottom: 1px solid #bfb9b9;\">\n                                                              <div class=\"col-sm-6 no-padding\">\n                                                                  <p class=\"text-left details-font\">Octet</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding\">\n                                                                  <p class=\"text-right details-font\">Rx Packets</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding\">\n                                                                  <p (click)=\"historical_graph('64', itemext, graphicalhistory);\" class=\"accordionprg\">64</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                  <p>{{itemext.OpticalServiceRxPackets._64}}</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding\">\n                                                                  <p (click)=\"historical_graph('65127', itemext, graphicalhistory);\" class=\"accordionprg\">65127</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                  <p>{{itemext.OpticalServiceRxPackets._65127}}</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding\">\n                                                                  <p (click)=\"historical_graph('128255', itemext, graphicalhistory);\" class=\"accordionprg\">128255</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                  <p>{{itemext.OpticalServiceRxPackets._128255}}</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding\">\n                                                                  <p (click)=\"historical_graph('256511', itemext, graphicalhistory);\" class=\"accordionprg\">256511</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                  <p>{{itemext.OpticalServiceRxPackets._256511}}</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding\">\n                                                                  <p (click)=\"historical_graph('5121023', itemext,  graphicalhistory);\" class=\"accordionprg\">5121023</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                  <p>{{itemext.OpticalServiceRxPackets._5121023}}</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding\">\n                                                                  <p (click)=\"historical_graph('10241518', itemext,  graphicalhistory);\" class=\"accordionprg\">10241518</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                  <p>{{itemext.OpticalServiceRxPackets._10241518}}</p>\n                                                              </div>\n                                                          </div>\n                                                          <div class=\"col-sm-12 no-padding\">\n                                                              <div class=\"col-sm-6 no-padding\">\n                                                                  <p></p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                  <p class=\"text-right details-font\">Packets</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding\">\n                                                                  <p (click)=\"historical_graph('Undersize', itemext,  graphicalhistory);\" class=\"accordionprg\">Undersize</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                  <p>{{itemext.OpticalServiceRxPackets.undersize}}</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding\">\n                                                                  <p (click)=\"historical_graph('Oversize', itemext, graphicalhistory);\" class=\"accordionprg\">Oversize</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                  <p>{{itemext.OpticalServiceRxPackets.oversize}}</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding\">\n                                                                <p (click)=\"historical_graph('Fragment', itemext, graphicalhistory);\" class=\"accordionprg\">Fragment</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                    <p>{{itemext.OpticalServiceRxPackets.fragment}}</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding\">\n                                                                  <p (click)=\"historical_graph('Jabbers', itemext, graphicalhistory);\" class=\"accordionprg\">Jabbers</p>\n                                                              </div>\n                                                              <div class=\"col-sm-6 no-padding rightalgn\">\n                                                                  <p>{{itemext.OpticalServiceRxPackets.jabbers}}</p>\n                                                              </div>\n                                                          </div>\n                                                      </div>\n                                            <div class=\"col-sm-2 no-padding\" style=\"padding: 0px 12px;border-right: 1px solid rgba(138, 132, 132, 0.64);\">\n                                                <div class=\"col-sm-12 no-padding\">\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p class=\"text-left details-font\">Queue</p><br>\n                                                        <p (click)=\"historical_graph('Q0', itemext, graphicalhistory);\" class=\"accordiontblalign\">Q0</p>\n                                                        <p (click)=\"historical_graph('Q1', itemext, graphicalhistory);\" class=\"accordiontblalign\">Q1</p>\n                                                        <p (click)=\"historical_graph('Q2', itemext, graphicalhistory);\" class=\"accordiontblalign\">Q2</p>\n                                                        <p (click)=\"historical_graph('Q3', itemext, graphicalhistory);\" class=\"accordiontblalign\">Q3</p>\n                                                        <p (click)=\"historical_graph('Q4', itemext, graphicalhistory);\" class=\"accordiontblalign\">Q4</p>\n                                                        <p (click)=\"historical_graph('Q5', itemext, graphicalhistory);\" class=\"accordiontblalign\">Q5</p>\n                                                        <p (click)=\"historical_graph('Q6', itemext, graphicalhistory);\" class=\"accordiontblalign\">Q6</p>\n                                                        <p (click)=\"historical_graph('Q7', itemext, graphicalhistory);\" class=\"accordiontblalign\">Q7</p>\n                                                        <p (click)=\"historical_graph('Queue Summary TX Drop Packets', itemext, graphicalhistory);\" class=\"accordiontblalign\">Summary</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p class=\"text-right details-font\">Tx Drop Packets</p>\n                                                        <p>{{itemext.OpticalServiceTxPackets.Q0}}</p>\n                                                        <p>{{itemext.OpticalServiceTxPackets.Q1}}</p>\n                                                        <p>{{itemext.OpticalServiceTxPackets.Q2}}</p>\n                                                        <p>{{itemext.OpticalServiceTxPackets.Q3}}</p>\n                                                        <p>{{itemext.OpticalServiceTxPackets.Q4}}</p>\n                                                        <p>{{itemext.OpticalServiceTxPackets.Q5}}</p>\n                                                        <p>{{itemext.OpticalServiceTxPackets.Q6}}</p>\n                                                        <p>{{itemext.OpticalServiceTxPackets.Q7}}</p>\n                                                        <p>{{itemext.OpticalServiceTxPackets.summary}}</p>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm-2 no-padding\" style=\"padding-left: 5px;\">\n                                                <div class=\"col-sm-12 no-padding\" style=\"border-bottom: 1px solid #bfb9b9;\">\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p class=\"head_bold\"></p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p class=\"head_bold details-font\">Tx Packets</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p (click)=\"historical_graph('Excess Defer', itemext,  graphicalhistory);\" class=\"accordionprg\">Excess Defer</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalServiceTxPackets.excessDefer}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p (click)=\"historical_graph('Giant', itemext,  graphicalhistory);\" class=\"accordionprg\">Giant</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalServiceTxPackets.gaint}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p (click)=\"historical_graph('Underun', itemext,  graphicalhistory);\" class=\"accordionprg\">Underun</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalServiceTxPackets.underRun}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p (click)=\"historical_graph('Long Check Error', itemext, graphicalhistory);\" class=\"accordionprg\">Long Check Error</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalServiceTxPackets.longCheck}}</p>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-sm-12 no-padding\">\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p class=\"head_bold\"></p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p class=\"head_bold details-font\">Mac Layer</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p class=\"accordionprg\" (click)=\"historical_graph('Unavailable Seconds', itemext, graphicalhistory);\">Unavailable Seconds</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalServiceTxPackets.unavailableSeconds}}</p>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                          </div>\n                                        \n                                    </accordion-group>\n                                 </accordion>\n                                </div>\n                                    </div>\n                                </div>\n                                  </div>\n                                </accordion-group>\n                              </accordion>\n                            </div>\n                        </div>\n                      </div>   \n                </div>\n            </div>\n        </div>\n    </div>\n    </section>\n</section>\n\n\n\n<ng-template #graphicalhistory>\n    <div class=\"modal-header\">\n        <button class=\"close pull-right\" aria-label=\"Close\" (click)=\"modelClose()\">&times;</button>\n        <h4 class=\"modal-title\">View Graph - {{header_hostname}}</h4>\n    </div>\n    <div class=\"modal-body\">\n        \n        <div class=\"row\">\n                <div class=\"col-md-12\" style=\"margin-bottom: 22px;margin-left: -22px;\">\n                        <!-- <div class=\"col-md-4\">\n                                \n                        </div> -->\n                        <div class='col-xs-12 col-sm-6 col-md-6 col-lg-12'>\n                                <button *ngIf=\"!modalLoaders\" class=\"btn btn-info btn-sm algn\" [ngClass]='{\"active\":btnStauts.nrtbtn}' (click)=\"reportTypeView('nrt',properActionSet, proObj)\" type=\"submit\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> Near Real Time</button>\n                                <button *ngIf=\"!modalLoaders\" class=\"btn btn-info btn-sm algn\" [ngClass]='{\"active\":btnStauts.yesbtn}' (click)=\"reportTypeView('yesterday',properActionSet, proObj)\" type=\"submit\" name=\"Yesterday\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> Yesterday</button>\n                                <button *ngIf=\"!modalLoaders\" class=\"btn btn-info btn-sm algn\" [ngClass]='{\"active\":btnStauts.weekbtn}' (click)=\"reportTypeView('week',properActionSet, proObj)\" type=\"submit\" name=\"week\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> Week</button>\n                                <button *ngIf=\"!modalLoaders\" class=\"btn btn-info btn-sm algn\" [ngClass]='{\"active\":btnStauts.monthbtn}' (click)=\"reportTypeView('month',properActionSet, proObj)\" type=\"submit\" name=\"month\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> Month</button>\n                               \n                                <div class=\"picker algn\" *ngIf=\"!modalLoaders\">                    \n                                    <div class=\"input-group datetimepicker-start-end\">\n                                        <input bsDatepicker  (ngModelChange)=\"getLists($event ,toDate)\" type=\"text\" class=\"form-control\" [(ngModel)]=\"fromDate\" [maxDate]=\"maxDate\" [bsConfig]=\"{ dateInputFormat: 'YYYY-MM-DD' }\" id=\"datetimepicker-start\" placeholder=\"From Date\" aria-invalid=\"false\"><span>to</span>\n                                        <input bsDatepicker  (ngModelChange)=\"getLists(fromDate,$event)\" type=\"text\" class=\"form-control\" [(ngModel)]=\"toDate\" [bsConfig]=\"{ dateInputFormat: 'YYYY-MM-DD' }\" id=\"datetimepicker-end\" placeholder=\"To Date\" aria-invalid=\"false\" [minDate]=\"fromDate\" [maxDate]=\"maxDate\">\n                                    </div>\n                                    <i class=\"fa fa-calendar start-end-icon\" aria-hidden=\"true\"></i>\n                                </div>\n                        \n                              </div>\n                        \n                    </div>\n            <div class=\"col-md-12\">\n                <content-loader *ngIf=\"modalLoaders\"></content-loader>\n                <div *ngIf=\"!modalLoaders && graphWaterMarkers\" style=\"margin-top:22px; text-align: center;\">\n                    <h1> <i class=\"fa fa-fw fa-calendar-times-o fa-1x\"></i> No Records Found</h1>\n                </div>\n                <div *ngIf=\"!modalLoaders && !graphWaterMarkers\" class='pos-rel' id=\"waveLinePortGraphUniqId\">\n                    <div class=\"graphdiv\">\n                        <h4 class=\"popuph4\"><span class=\"graphTopHeading\">{{popGraphTitleOne}}</span></h4>\n                        <div class=\"pull-right downloadoptions\" *ngIf=\"!modalLoaders && !graphWaterMarkers\" style=\"padding: 3px 0px;\">\n                                <ul class=\"box-title-right\">\n                                    <li><img src=\"" + __webpack_require__(500) + "\" (click)=\"excelDownlod(graphData1, reportName)\"></li>\n                                       <!-- <li><img src=\"../../../assets/images/pdf.png\" (click)=\"pdfDownload(reportName,'')\"></li> -->\n                                </ul>\n                        </div> \n                        <nvd3 class=\"opticalnvd3\" [hidden]=\"!popupGraph\" [options]=\"options\" [data]=\"graphData1\"></nvd3>\n                    </div>\n                    <div class=\"graphdiv\" *ngIf=\"isTxDataDetails\">\n                        <h4  class=\"popuph4\"><span class=\"graphTopHeading\"> {{popGraphTitleTwo}}</span></h4>\n                        <div class=\"pull-right downloadoptions\" *ngIf=\"!modalLoaders && !graphWaterMarkers\" style=\"padding: 3px 0px;\">\n                                <ul class=\"box-title-right\">\n                                    <li><img src=\"" + __webpack_require__(500) + "\" (click)=\"excelDownlod(graphData2, reportName2)\"></li>\n                                       <!-- <li><img src=\"../../../assets/images/pdf.png\" (click)=\"pdfDownload()\"></li> -->\n                                </ul>\n                        </div> \n                        <nvd3 class=\"opticalnvd3\" [hidden]=\"!popupGraph\" [options]=\"options2\" [data]=\"graphData2\"></nvd3>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-template>";

/***/ }),

/***/ 1626:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var common_service_1 = __webpack_require__(61);
var page_view_service_1 = __webpack_require__(498);
var pdf_service_1 = __webpack_require__(269);
var excell_service_1 = __webpack_require__(266);
var router_1 = __webpack_require__(48);
var ngx_cookie_1 = __webpack_require__(62);
var modal_1 = __webpack_require__(104);
var common_1 = __webpack_require__(6);
var LinePortGridComponent = /** @class */ (function () {
    function LinePortGridComponent(router, cookie, commonServices, PageViewService, modalService, dateFilter, excellService, pdfService) {
        var _this = this;
        this.router = router;
        this.cookie = cookie;
        this.commonServices = commonServices;
        this.PageViewService = PageViewService;
        this.modalService = modalService;
        this.dateFilter = dateFilter;
        this.excellService = excellService;
        this.pdfService = pdfService;
        this.loader = false;
        this.currentUser = {};
        this.userType = '';
        this.pageDataTitle = "Line Ports List";
        this.contentView = false;
        this.gridSortKey = "SANTHOME";
        this.sample = [];
        this.lineCardList = [];
        this.finalListArray = [];
        this.dataObj = {};
        this.excelDateObject = {};
        this.proObj = {};
        this.modalLoaders = false;
        this.graphWaterMarkers = false;
        this.options = {};
        this.options2 = {};
        this.options3 = {};
        this.isTxDataDetails = false;
        this.isTxDataDetails2 = false;
        this.maxValue = '';
        this.minValue = '';
        this.data = [];
        this.header_hostname = "";
        this.resBasicExtendedData = [];
        this.finalArrDetails = [];
        this.currentPortData = "";
        this.properdata = "";
        this.btnStauts = {};
        this.pctage = true;
        this.showGraph = true;
        this.custom_download = true;
        this.custom_option = true;
        this.graphDataDetails = [];
        this.txgraphDataDetails = [];
        this.fromDate = new Date();
        this.toDate = new Date();
        this.wavelengthPrePageData = "N/A";
        this.statePrePageData = "N/A";
        this.from_time = '00:00:00';
        this.to_time = '23:59:59';
        this.isSessionExpired = false;
        this.graphDummyPollPush = [];
        this.graphYAxisMinValue = 0;
        this.graphYAxisMaxValue = 0;
        this.popupGraph = false;
        this.gridDataObj = {
            pdfName: 'Optical_Port_Details',
            pdfTitle: 'Optical_Port_Details',
            excelTitle: 'Optical_Port_Details',
            excelName: 'Optical_Port_Details',
        };
        this.gridDataObj2 = {};
        this.getLinkedData = function (eventObj) {
            console.log('eventObj', eventObj);
            Object.assign(_this.dataObj, eventObj.row);
            console.log(_this.dataObj);
            _this.loader = true;
            _this.contentView = true;
            _this.wavelengthPrePageData = eventObj.row.wavelength;
            _this.statePrePageData = eventObj.row.adminstate;
            _this.pageDataTitle = "Line Ports Details";
            var postData = {
                'ip': eventObj.row.ip,
                'port': eventObj.row.portid
            };
            _this.commonServices.postRequest('/_optical/OpticalSitesPort', postData).then(function (response) {
                if (response.status == "success") {
                    if (response.items[0].OpticalSitesPort.length > 0) {
                        response.items[0].OpticalSitesPort.forEach(function (data) {
                            console.log("datakkk", data);
                        });
                    }
                    _this.lineCardList = _this.converSion(response.items[0]);
                    console.log("this.lineCardList", _this.lineCardList);
                    _this.loader = false;
                }
                else {
                    _this.loader = false;
                    _this.commonServices.error(response.message);
                }
            }, function (err) {
                _this.loader = false;
                _this.commonServices.error(err.message);
            });
        };
        this.converSion = function (lineCardList) {
            if (lineCardList.OpticalSitesPort && lineCardList.OpticalSitesPort.length) {
                var OpticalSitesQfactor = lineCardList.OpticalSitesPort[0].OpticalSitesAdvanced.OpticalSitesQfactor;
                for (var key in OpticalSitesQfactor) {
                    if (OpticalSitesQfactor[key] == '0.00') {
                        OpticalSitesQfactor[key] = '0';
                    }
                }
                var OpticalSitesActualState = lineCardList.OpticalSitesPort[0].OpticalSitesBasic.OpticalSitesActualState;
                for (var key in OpticalSitesActualState) {
                    if (OpticalSitesActualState[key] == '0.00') {
                        OpticalSitesActualState[key] = '0';
                    }
                }
            }
            return lineCardList;
        };
        this.historical_graph = function (property, lineCardObj, mainValueObj, template) {
            console.log("dddddddddddddd", property, mainValueObj);
            _this.properActionSet = property;
            var selectedPort = {
                "propertyAction": property,
                "portName": mainValueObj.portName,
                "hostName": lineCardObj.hostName,
                "ip": lineCardObj.ip
            };
            _this.proObj = lineCardObj;
            _this.currentPortData = mainValueObj.portName;
            _this.properdata = property;
            _this.btnStauts = {};
            _this.btnStauts.nrtbtn = true;
            var _fromDate = _this.dateFilter.transform(new Date(), "yyyy-MM-dd");
            var _toDate = _this.dateFilter.transform(new Date(), "yyyy-MM-dd");
            // this.to_date = _toDate;
            // this.fr_date = _fromDate;
            _this.from_time = '00:00:00';
            _this.to_time = '23:59:59';
            _this.header_hostname = lineCardObj.hostName;
            _this.bsRangeValue = [new Date(_fromDate), new Date(_toDate)];
            // var _post: any =  {"port":"6-ExtendedTxRx","paramProperty":"Bytes","reportType":"month","fromDateISO":"2018-03-25","toDateISO":"2018-04-23","fromTimeISO":"00:00:00","toTimeISO":"23:59:59","ip":"100.66.28.117"}
            var _post = {
                "port": mainValueObj.portName,
                "paramProperty": property,
                "reportType": "nrt",
                "hostName": lineCardObj.hostName,
                "fromDateISO": _fromDate,
                "toDateISO": _toDate,
                "fromTimeISO": "00:00:00",
                "toTimeISO": "23:59:59",
                "ip": lineCardObj.ip
            };
            _this.popupGraph = true;
            _this.getHistoryReports(_post);
            if (!_this.isSessionExpired) {
                _this.modalRef = _this.modalService.show(template, { class: 'modal-lg' });
            }
            else {
                _this.ngOnDestroy();
            }
        };
        this.getHistoryReports = function (_post) {
            _this.isTxDataDetails = false;
            _this.isTxDataDetails2 = false;
            _this.modalLoaders = true;
            _this.commonServices.postRequest('/_optical/opticalGraph', _post).then(function (res) {
                _this.excelDateObject = { 'excelFromDate': _post.fromDateISO + " @ " + _post.fromTimeISO, 'excelToDate': _post.toDateISO + " @ " + _post.toTimeISO };
                if (res.status == "success") {
                    console.log("res.items[0].CoreGraphData.length", res.items[0].CoreGraphData.length);
                    if (res.items[0].CoreGraphData.length > 0) {
                        _this.popGraphTitleOne = res.items[0].CoreGraphData[0].keyName.toUpperCase();
                        if (res.items[0].CoreGraphData[0].keyName == 'intrx_bytes') {
                            _this.reportName = "BYTES";
                        }
                        else {
                            var getStr = res.items[0].CoreGraphData[0].keyName;
                            var isContainsRX = getStr.includes("rx");
                            var isContainsTXFirst = getStr.includes("tx");
                            if (isContainsRX) {
                                _this.reportName = "DB";
                            }
                            else if (isContainsTXFirst) {
                                _this.reportName = "DB";
                            }
                            else {
                                _this.reportName = res.items[0].CoreGraphData[0].keyName.toUpperCase();
                            }
                        }
                        _this.rxGraphDraw(res.items[0]);
                        /* This Condition is for TX BYtes Second Graph */
                        if (res.items[0].CoreGraphData.length == 2) {
                            _this.popGraphTitleTwo = res.items[0].CoreGraphData[1].keyName.toUpperCase();
                            if (res.items[0].CoreGraphData[1].keyName == 'inttx_bytes') {
                                _this.reportName2 = "BYTES";
                            }
                            else {
                                var getStrTx = res.items[0].CoreGraphData[1].keyName;
                                var isContainsTX = getStrTx.includes("tx");
                                if (isContainsTX) {
                                    _this.reportName2 = "PACKETS";
                                }
                                else {
                                    _this.reportName2 = res.items[0].CoreGraphData[1].keyName.toUpperCase();
                                }
                            }
                            _this.isTxDataDetails = true;
                            _this.txGraphDraw(res.items[0]);
                        }
                        else if (res.items[0].CoreGraphData.length == 3) {
                            _this.popGraphTitleTwo = res.items[0].CoreGraphData[1].keyName.toUpperCase();
                            _this.popGraphTitleThree = res.items[0].CoreGraphData[2].keyName.toUpperCase();
                            if (res.items[0].CoreGraphData[1].keyName == 'inttx_bytes') {
                                _this.reportName2 = "BYTES";
                            }
                            else {
                                var getStrTx = res.items[0].CoreGraphData[1].keyName;
                                var isContainsTX = getStrTx.includes("tx");
                                if (isContainsTX) {
                                    _this.reportName2 = "PACKETS";
                                }
                                else {
                                    _this.reportName2 = res.items[0].CoreGraphData[1].keyName.toUpperCase();
                                }
                            }
                            if (res.items[0].CoreGraphData[2].keyName == 'inttx_bytes') {
                                _this.reportName3 = "TX BYTES";
                            }
                            else {
                                var getStrTx = res.items[0].CoreGraphData[1].keyName;
                                var isContainsTX = getStrTx.includes("tx");
                                if (isContainsTX) {
                                    _this.reportName3 = "PACKETS";
                                }
                                else {
                                    _this.reportName3 = res.items[0].CoreGraphData[2].keyName.toUpperCase();
                                }
                            }
                            _this.isTxDataDetails2 = true;
                            _this.isTxDataDetails = true;
                            _this.txGraphDraw(res.items[0]);
                            _this.maxGraphDraw(res.items[0]);
                        }
                        _this.modalLoaders = false;
                        _this.graphWaterMarkers = false;
                    }
                    else {
                        _this.modalLoaders = false;
                        _this.graphWaterMarkers = true;
                    }
                }
                else {
                    _this.modalLoaders = false;
                    _this.graphWaterMarkers = true;
                    _this.commonServices.error(res.message);
                    // this.isSessionExpired = true;
                }
            }, function (err) {
                _this.isSessionExpired = true;
                _this.commonServices.error(err.message);
            });
        };
        this.isEmptyObject = function (obj) {
            for (var prop in obj) {
                if (obj.hasOwnProperty(prop)) {
                    return false;
                }
            }
            return true;
        };
        this.reportTypeView = function (reportType, selectedPort, currentObjData) {
            //console.log(reportType);
            // console.log("data details...", currentObjData);
            var fr_date;
            var to_date;
            if (reportType) {
                _this.from_time = '00:00:00';
                _this.to_time = '23:59:59';
                if (reportType == 'nrt') {
                    _this.btnStauts = {};
                    _this.btnStauts.nrtbtn = true;
                    fr_date = _this.dateFilter.transform(new Date(), "yyyy-MM-dd");
                    to_date = _this.dateFilter.transform(new Date(), "yyyy-MM-dd");
                    _this.bsRangeValue = [new Date(fr_date), new Date(to_date)];
                }
                else if (reportType == 'yesterday') {
                    _this.btnStauts = {};
                    _this.btnStauts.yesbtn = true;
                    var from_d = new Date();
                    from_d.setDate(from_d.getDate() - 1);
                    fr_date = _this.dateFilter.transform(from_d, "yyyy-MM-dd");
                    to_date = fr_date;
                    _this.bsRangeValue = [new Date(fr_date), new Date(to_date)];
                }
                else if (reportType == 'week') {
                    _this.btnStauts = {};
                    _this.btnStauts.weekbtn = true;
                    var from_d = new Date();
                    from_d.setDate(from_d.getDate() - 7);
                    fr_date = _this.dateFilter.transform(from_d, "yyyy-MM-dd");
                    to_date = new Date();
                    to_date.setDate(to_date.getDate() - 1);
                    to_date = _this.dateFilter.transform(to_date, "yyyy-MM-dd");
                    _this.bsRangeValue = [new Date(fr_date), new Date(to_date)];
                }
                else if (reportType == 'month') {
                    _this.btnStauts = {};
                    _this.btnStauts.monthbtn = true;
                    var from_d = new Date();
                    from_d.setDate(from_d.getDate() - 30);
                    fr_date = _this.dateFilter.transform(from_d, "yyyy-MM-dd");
                    to_date = new Date();
                    to_date.setDate(to_date.getDate() - 1);
                    to_date = _this.dateFilter.transform(to_date, "yyyy-MM-dd");
                    _this.bsRangeValue = [new Date(fr_date), new Date(to_date)];
                }
                fr_date = fr_date;
                to_date = to_date;
                _this.showFromdata = fr_date;
                _this.showTodata = _this.dateFilter.transform(new Date(), "yyyy-MM-dd") + " " + to_date;
                _this.fromDate = new Date(fr_date);
                _this.toDate = new Date(to_date);
                var _post = {
                    "port": _this.currentPortData,
                    "paramProperty": _this.properActionSet,
                    "reportType": reportType,
                    "hostName": _this.proObj.hostName,
                    "fromDateISO": fr_date,
                    "toDateISO": to_date,
                    "fromTimeISO": _this.from_time,
                    "toTimeISO": _this.to_time,
                    "ip": _this.proObj.ip
                };
                _this.getHistoryReports(_post);
            }
        };
        /*  To enable zoom chang type as "lineWithFocusChart" */
        this.rxGraphDraw = function (graphObjData) {
            // console.log('inRXGraph', graphObjData);
            var xAxisMinData = graphObjData.CoreGraphData[0].xAxisMin;
            var xAxisMaxData = graphObjData.CoreGraphData[0].xAxisMax;
            var yAxisMinData = graphObjData.CoreGraphData[0].yAxisMin;
            var yAxisMaxData = graphObjData.CoreGraphData[0].yAxisMax;
            _this.options = {
                chart: {
                    type: 'lineWithFocusChart',
                    height: 450,
                    margin: {
                        top: 20,
                        right: 95,
                        bottom: 60,
                        left: 55
                    },
                    padding: {
                        left: 40
                    },
                    x: function (d) { return new Date(d.X).getTime(); },
                    y: function (d) { return d.Y; },
                    //average: function(d: any)  { return d/1024/1024/1024; },
                    // dispatch: {
                    //     stateChange: function (e: any) { console.log("stateChange"); },
                    //     changeState: function (e: any) { console.log("changeState"); },
                    //     tooltipShow: function (e: any) { console.log("tooltipShow"); },
                    //     tooltipHide: function (e: any) { console.log("tooltipHide"); }
                    // },
                    //padData: true,
                    color: d3.scale.category10().range(),
                    duration: 300,
                    //   forceX :  [xAxisMinData, xAxisMaxData],
                    //forceY : [yAxisMinData, yAxisMaxData],
                    useInteractiveGuideline: true,
                    clipVoronoi: false,
                    focusShowAxisX: true,
                    focusShowAxisY: false,
                    xAxis: {
                        axisLabel: 'Date',
                        tickFormat: function (d) {
                            return d3.time.format('%d/%b/%y %H:%M')(new Date(d));
                        },
                        wrapLabels: true,
                        axisLabelDistance: 15,
                        showMaxMin: true,
                        staggerLabels: true
                    },
                    x2Axis: {
                        tickFormat: function (d) {
                            return d3.time.format('%d/%b/%y %H:%M')(new Date(d));
                        },
                        ticks: 10,
                    },
                    yAxis: {
                        axisLabel: _this.reportName,
                        tickFormat: function (d) {
                            if (Number.isInteger(d)) {
                                return d;
                            }
                            else {
                                return d3.format('.5f')(d);
                            }
                        },
                        // tickPadding:-25, 
                        axisLabelDistance: 15,
                        rotateYLabel: true,
                        showMaxMin: true,
                        orient: 'left',
                        css: { 'transform': 'rotate(45deg)' }
                    },
                    y2Axis: {
                        tickFormat: function (d) {
                            if (Number.isInteger(d)) {
                                return d;
                            }
                            else {
                                return d3.format('.2f')(d);
                            }
                        }
                    },
                    interactiveLayer: {
                        tooltip: {
                            valueFormatter: function (d, i) {
                                return d;
                            }
                        }
                    },
                    callback: function (chart) {
                    }
                }
            };
            if (yAxisMinData == 0 && yAxisMaxData == 0) {
                _this.options.chart.forceY = [yAxisMinData, 5];
            }
            d3.selectAll('.nvtooltip').style('opacity', 0);
            // console.log("graphDataDetails", graphObjData.CoreGraphData[0].CoreGraphDataPoints);
            _this.graphData1 = [
                {
                    key: _this.popGraphTitleOne,
                    values: graphObjData.CoreGraphData[0].CoreGraphDataPoints[0],
                }
            ];
        };
        this.txGraphDraw = function (graphObjData) {
            // console.log('inTXGraph', graphObjData);
            var xAxisMinData = graphObjData.CoreGraphData[1].xAxisMin;
            var xAxisMaxData = graphObjData.CoreGraphData[1].xAxisMax;
            var yAxisMinData = graphObjData.CoreGraphData[1].yAxisMin;
            var yAxisMaxData = graphObjData.CoreGraphData[1].yAxisMax;
            _this.options2 = {
                chart: {
                    type: 'lineWithFocusChart',
                    height: 450,
                    margin: {
                        top: 20,
                        right: 95,
                        bottom: 60,
                        left: 55
                    },
                    padding: {
                        left: 40
                    },
                    x: function (d) { return new Date(d.X).getTime(); },
                    y: function (d) { return d.Y; },
                    //average: function(d: any)  { return d/1024/1024/1024; },
                    // dispatch: {
                    //     stateChange: function (e: any) { console.log("stateChange"); },
                    //     changeState: function (e: any) { console.log("changeState"); },
                    //     tooltipShow: function (e: any) { console.log("tooltipShow"); },
                    //     tooltipHide: function (e: any) { console.log("tooltipHide"); }
                    // },
                    //padData: true,
                    color: d3.scale.category10().range(),
                    duration: 300,
                    //forceX :  [xAxisMinData, xAxisMaxData],
                    //forceY : [yAxisMinData, yAxisMaxData],
                    useInteractiveGuideline: true,
                    clipVoronoi: false,
                    focusShowAxisX: true,
                    focusShowAxisY: false,
                    xAxis: {
                        axisLabel: 'Date',
                        tickFormat: function (d) {
                            return d3.time.format('%d/%b/%y %H:%M')(new Date(d));
                        },
                        wrapLabels: true,
                        axisLabelDistance: 15,
                        showMaxMin: true,
                        staggerLabels: true
                    },
                    x2Axis: {
                        tickFormat: function (d) {
                            return d3.time.format('%d/%b/%y %H:%M')(new Date(d));
                        },
                        ticks: 10,
                    },
                    yAxis: {
                        axisLabel: _this.reportName,
                        tickFormat: function (d) {
                            if (Number.isInteger(d)) {
                                return d;
                            }
                            else {
                                return d3.format('.5f')(d);
                            }
                        },
                        // tickPadding:-25, 
                        axisLabelDistance: 15,
                        rotateYLabel: true,
                        showMaxMin: true,
                        orient: 'left',
                        css: { 'transform': 'rotate(45deg)' }
                    },
                    y2Axis: {
                        tickFormat: function (d) {
                            if (Number.isInteger(d)) {
                                return d;
                            }
                            else {
                                return d3.format('.2f')(d);
                            }
                        }
                    },
                    interactiveLayer: {
                        tooltip: {
                            valueFormatter: function (d, i) {
                                return d;
                            }
                        }
                    },
                    callback: function (chart) {
                    }
                }
            };
            if (yAxisMinData == 0 && yAxisMaxData == 0) {
                _this.options.chart.forceY = [yAxisMinData, 5];
            }
            d3.selectAll('.nvtooltip').style('opacity', 0);
            // console.log("graphDataDetails2", graphObjData.CoreGraphData[1].CoreGraphDataPoints);
            _this.graphData2 = [
                {
                    key: _this.popGraphTitleTwo,
                    values: graphObjData.CoreGraphData[1].CoreGraphDataPoints[0],
                }
            ];
        };
        this.maxGraphDraw = function (graphObjData) {
            // console.log('inTXGraph', graphObjData);
            var xAxisMinData = graphObjData.CoreGraphData[2].xAxisMin;
            var xAxisMaxData = graphObjData.CoreGraphData[2].xAxisMax;
            var yAxisMinData = graphObjData.CoreGraphData[2].yAxisMin;
            var yAxisMaxData = graphObjData.CoreGraphData[2].yAxisMax;
            _this.options3 = {
                chart: {
                    type: 'lineWithFocusChart',
                    height: 450,
                    margin: {
                        top: 20,
                        right: 95,
                        bottom: 60,
                        left: 55
                    },
                    /* margin: {
                        top: 20,
                        right: 230,
                        bottom: 60,
                        left: 55
                    },*/
                    padding: {
                        left: 40
                    },
                    x: function (d) { return new Date(d.X).getTime(); },
                    y: function (d) { return d.Y; },
                    //average: function(d: any)  { return d/1024/1024/1024; },
                    // dispatch: {
                    //     stateChange: function (e: any) { console.log("stateChange"); },
                    //     changeState: function (e: any) { console.log("changeState"); },
                    //     tooltipShow: function (e: any) { console.log("tooltipShow"); },
                    //     tooltipHide: function (e: any) { console.log("tooltipHide"); }
                    // },
                    //padData: true,
                    color: d3.scale.category10().range(),
                    duration: 300,
                    //forceX :  [xAxisMinData, xAxisMaxData],
                    //forceY : [yAxisMinData, yAxisMaxData],
                    useInteractiveGuideline: true,
                    clipVoronoi: false,
                    focusShowAxisX: true,
                    focusShowAxisY: false,
                    xAxis: {
                        axisLabel: 'Date',
                        tickFormat: function (d) {
                            return d3.time.format('%d/%b/%y %H:%M')(new Date(d));
                        },
                        wrapLabels: true,
                        axisLabelDistance: 15,
                        showMaxMin: true,
                        staggerLabels: true
                    },
                    x2Axis: {
                        tickFormat: function (d) {
                            return d3.time.format('%d/%b/%y %H:%M')(new Date(d));
                        },
                        ticks: 10,
                    },
                    yAxis: {
                        axisLabel: _this.reportName,
                        tickFormat: function (d) {
                            if (Number.isInteger(d)) {
                                return d;
                            }
                            else {
                                return d3.format('.5f')(d);
                            }
                        },
                        // tickPadding:-25, 
                        axisLabelDistance: 15,
                        rotateYLabel: true,
                        showMaxMin: true,
                        orient: 'left',
                        css: { 'transform': 'rotate(45deg)' }
                    },
                    y2Axis: {
                        tickFormat: function (d) {
                            if (Number.isInteger(d)) {
                                return d;
                            }
                            else {
                                return d3.format('.2f')(d);
                            }
                        }
                    },
                    interactiveLayer: {
                        tooltip: {
                            valueFormatter: function (d, i) {
                                return d;
                            }
                        }
                    },
                    callback: function (chart) {
                    }
                }
            };
            if (yAxisMinData == 0 && yAxisMaxData == 0) {
                _this.options.chart.forceY = [yAxisMinData, 5];
            }
            d3.selectAll('.nvtooltip').style('opacity', 0);
            // console.log("graphDataDetails2", graphObjData.CoreGraphData[1].CoreGraphDataPoints);
            _this.graphData3 = [
                {
                    key: _this.popGraphTitleThree,
                    values: graphObjData.CoreGraphData[2].CoreGraphDataPoints[0],
                }
            ];
        };
        this.modelClose = function () {
            _this.popupGraph = false;
            _this.modalRef.hide();
        };
        this.excelDownlod = function (arr, columnName) {
            console.log(arr);
            _this.gridDataObj2 = {
                excelTitle: _this.properActionSet,
                excelName: 'Optical-Port-' + _this.properActionSet,
            };
            _this.gridDataObj2.id = 'optical-port-grid';
            _this.gridDataObj2.fromDate = _this.excelDateObject.excelFromDate;
            _this.gridDataObj2.toDate = _this.excelDateObject.excelToDate;
            _this.gridDataObj2.hostname = _this.proObj.hostName;
            _this.gridDataObj2.ip = _this.proObj.ip;
            _this.gridDataObj2.columns = [{
                    dataKey: 'X',
                    title: 'Date',
                    hide: false,
                    width: ''
                }, {
                    dataKey: 'Y',
                    title: 'Value (' + columnName + ')',
                    hide: false,
                    width: ''
                }];
            _this.gridDataObj2.data = arr[0].values;
            _this.excellService.opticalGenerateExcell(_this.gridDataObj2);
        };
        this.getLists = function (getfromDate, gettoDate) {
            _this.btnStauts = {};
            var fromDateStr = _this.dateFilter.transform(getfromDate, "yyyy-MM-dd");
            var toDateStr = _this.dateFilter.transform(gettoDate, "yyyy-MM-dd");
            // this.bsRangeValue = [new Date(fromDateStr), new Date(toDateStr)];   
            _this.from_time = '00:00:00';
            _this.to_time = '23:59:59';
            var _post = {
                "port": _this.currentPortData,
                "paramProperty": _this.properActionSet,
                "reportType": "custom",
                "hostName": _this.proObj.hostName,
                "fromDateISO": fromDateStr,
                "toDateISO": toDateStr,
                "fromTimeISO": _this.from_time,
                "toTimeISO": _this.to_time,
                "ip": _this.proObj.ip
            };
            _this.getHistoryReports(_post);
        };
        this.goToHomePage = function () {
            if (_this.contentView) {
                _this.pageDataTitle = "Line Ports List";
                _this.contentView = false;
                _this.loader = false;
            }
            else {
                _this.router.navigate(['/optical']);
            }
        };
    }
    LinePortGridComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.gridDataObj.columns = [{
                dataKey: 'ip',
                title: 'IP',
                hide: false,
                width: ''
            }, {
                dataKey: 'hostName',
                title: 'Hostname',
                hide: false,
                link: true,
                width: ''
            }, {
                dataKey: 'name',
                title: 'Name',
                hide: false,
                width: '',
                link: false
            }, {
                dataKey: 'portid',
                title: 'Port ID',
                hide: false,
                width: '',
                link: false
            }, {
                dataKey: 'siteName',
                title: 'Site Name',
                hide: false,
                width: '',
                link: false
            }, {
                dataKey: 'wavelength',
                title: 'Wavelength',
                hide: false,
                width: '',
                link: false
            }, {
                dataKey: 'adminstate',
                title: 'Admin State',
                hide: false,
                width: '',
                link: false
            }];
        this.gridDataObj.id = 'line-port-services-grid';
        this.datePickerMinDate = new Date();
        this.datePickerMaxDate = new Date();
        this.datePickerMinDate.setDate(this.datePickerMinDate.getDate() - 90);
        this.datePickerMaxDate.setDate(this.datePickerMaxDate.getDate());
        this.currentUser = this.cookie.getObject('globals');
        this.userType = this.currentUser.user_type;
        var today = new Date();
        var time = today.getTime();
        var lastWeekTime = time - (24 * 90 * 60 * 60 * 1000);
        this.fromDate = new Date(lastWeekTime);
        var _post = {};
        this.loader = true;
        var pageViewGet = this.PageViewService.getData();
        console.log("getDataDetails", pageViewGet);
        if (pageViewGet != undefined) {
            if (pageViewGet.linePortType == "SANTHOME") {
                this.gridSortKey = "SANTHOME";
            }
            else if (pageViewGet.linePortType == "VSB") {
                this.gridSortKey = "VSB";
            }
        }
        else {
            this.router.navigate(['/optical-line-ports']);
        }
        this.commonServices.postRequest('/_optical/OpticalSitesList', _post).then(function (response) {
            console.log("response", response);
            if (response.status == "success") {
                response.items[0].OpticalSitesList.forEach(function (element) {
                    if (element.adminstate != "") {
                        element.adminstate = element.adminstate.toUpperCase();
                    }
                });
                _this.gridDataObj.data = response.items[0].OpticalSitesList.filter(function (listdata) { return listdata.siteName === _this.gridSortKey; }); //response.items
                _this.loader = false;
            }
            else {
                _this.loader = false;
                _this.commonServices.error(response.message);
            }
        }, function (err) {
            _this.commonServices.error(err.message);
        });
    };
    LinePortGridComponent.prototype.pdfDownload = function () {
        console.log('generating pdf');
        //this.pdfService.generateSVGPDF();  
    };
    LinePortGridComponent.prototype.ngOnDestroy = function () {
        if (this.modalRef) {
            this.modalRef.hide();
        }
    };
    LinePortGridComponent = __decorate([
        core_1.Component({
            selector: 'line-port-grid',
            template: __webpack_require__(1627)
        }),
        __metadata("design:paramtypes", [router_1.Router, ngx_cookie_1.CookieService, common_service_1.CommonService, page_view_service_1.PageViewService, modal_1.BsModalService, common_1.DatePipe, excell_service_1.ExcellService, pdf_service_1.PdfService])
    ], LinePortGridComponent);
    return LinePortGridComponent;
}());
exports.LinePortGridComponent = LinePortGridComponent;


/***/ }),

/***/ 1627:
/***/ (function(module, exports, __webpack_require__) {

module.exports = "<section id=\"main-content\">\n    <section class=\"wrapper\">\n    <ol class=\"breadcrumb\">\n            <li (click)=\"goToHomePage()\">Home</li>\n          <li class=\"active\">{{pageDataTitle}}</li>\n      </ol>\n    <!-- <div class=\"dashboard-txt\">\n      <h1>{{pageDataTitle}}<a (click)=\"goToHomePage()\" class=\"pull-right\" data-toggle=\"tab\" style=\"float: right;line-height: 30px;padding-left: 20px;text-decoration: underline;font-size: 16px;cursor: pointer;\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Go Back</a></h1>\n    </div> -->\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"box-title box-title-tabs\">              \n            <div class=\"pull-right\">\n              <ul class=\"box-title-right\">\n                <li>\n                    <h1><a (click)=\"goToHomePage()\" class=\"pull-right\" data-toggle=\"tab\" style=\"float: right;line-height: 30px;padding-left: 20px;text-decoration: underline;font-size: 16px;cursor: pointer;\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Go Back</a></h1>\n                </li>\n              </ul>\n            </div>\n            <div class=\"pull-left\">\n              <h3>{{pageDataTitle}}</h3>\n            </div>\n            <div class=\"clearfix\"></div>\n          </div>\n        </div>\n      </div>\n    <content-loader *ngIf=\"loader\"></content-loader>   \n    <data-grid  *ngIf=\"!loader && !contentView\" (linkClick)=\"getLinkedData($event)\" [gridobj]=\"gridDataObj\"></data-grid>\n\n    <div *ngIf=\"!loader && contentView\">\n            <!-- <div class=\"pull-right downloadoptions\" style=\"padding: 3px 0px;\">\n                    <ul class=\"box-title-right\">\n                        <li><img src=\"" + __webpack_require__(500) + "\" (click)=\"excelDownlod(lineCardList, 'accordion')\"></li>\n                        <li><img src=\"" + __webpack_require__(508) + "\" (click)=\"pdfDownload(reportName,'')\"></li>\n                    </ul>\n            </div>  -->\n        <div class=\"panel-group\" id=\"accordion\">\n            <accordion>\n                    <accordion-group heading=\"{{dataObj.hostName}} \" class=\"col-md-12 steps-tabs-content cc-admin-circuits no-padding text-center custom-header panel\"  [isOpen]=\"true\">\n                      <div class=\"col-md-12\">\n                              <accordion close-others=\"false\"  *ngFor=\"let item of lineCardList.OpticalSitesPort\">\n                                <accordion-group  heading=\"PORT - {{item.portName}}\"  class=\"col-md-12 steps-tabs-content cc-admin-circuits no-padding text-center custom-header panel\"  [isOpen]=\"true\">\n                                  <div id=\"accordiondatastyle\">\n                                      <div  class=\"pull-left\">\n                                          <h4 style=\"width: 100%;float: left;color: #7e920f;font-size: 23px;font-weight: 900;\">PORT - {{item.portName}} Status Details</h4>\n                                        </div>\n                                      <div class=\"basic\">\n                                       <div class=\"content oddList\" >\n                                       <div class=\"col-sm-12 mo-padding hoverdata\" style=\"background: #fff;padding: 16px;\">\n                                       <div class=\"col-md-6\">\n                                         <div class=\"itemdesc cl-both\">\n                                           <div class=\"pull-left\">\n                                             <p class=\"cust_head_bold\">{{dataObj.ip}} - {{dataObj.hostName}}</p>\n                                             <p>State : {{statePrePageData}}</p>\n                                             <!-- <p>State : {{item.OpticalSitesBasic.OpticalSitesActualState.state}}</p> -->\n                                           </div>\n                                         </div>\n                                       </div>\n                                       \n                                       <div class=\"col-md-6\">\n                                        \n                                       </div>\n                                        <!-- <div class=\"col-sm-4 no-padding\">\n                                         <div class=\"itemdesc cl-both\">\n                                           <div class=\" pull-left\" style=\"color: #333;\">\n                 \n                                          <div class=\"col-sm-12 no-padding\">\n                                                <div class=\"col-sm-12 no-padding\">\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                    <p class=\"empty-cell\">AAA</p>\n                                                    </div>\n                                                    \n                                                    <div class=\"col-sm-3 no-padding\"> <p class=\"text-bold text-left\">Tx</p></div>\n                                                    <div class=\"col-sm-3 no-padding\"><p class=\"text-bold text-left\">Rx</p></div>\n                                                  \n                                                  \n                                                </div>\n                                                  <div class=\"col-sm-12 no-padding\">\n                                                  <div class=\"col-sm-6 no-padding\">\n                                                 <p>Dispersion</p>\n                                                 </div>\n                                                 \n                                                  <div class=\"col-sm-3 no-padding\"><p>{{item.OpticalSitesBasic.OpticalSitesActualState.txPowerAct}}</p></div>\n                                                  <div class=\"col-sm-3 no-padding\"><p>{{item.OpticalSitesBasic.OpticalSitesActualState.rxPowerAct}}</p></div>\n                                                 \n                                                   \n                                                  </div>\n                                                  </div>\n                                           </div>\n                                         </div>\n                                       </div>  -->\n                                       <!-- <div class=\"cell\"></div>   -->\n                                   </div>\n                                   \n                                   </div>\n                                  </div>\n            \n                                      \n                                      <!-- ******** Basic End********* -->\n            \n                                      <!-- ******** Advanced Start********* -->\n                                      <div class=\"advanced\">\n                                          <!-- <div  class=\"pull-left\">\n                                              <h4 style=\"width: 100%;float: left;color: #7e920f;font-size: 23px;font-weight: 900;\">PORT - {{index}} Status Details</h4>\n                                            </div>\n                                         -->\n                                        <div class=\"content oddList\" >\n                                            <div class=\"col-sm-12 mo-padding hoverdata\" style=\"background: #fff;padding: 16px;\">\n                                            \n                                           \n                                            <div class=\"col-md-12\"  style=\"color: #333;\" id=\"custAdvanced\">\n                                                            <div class=\"col-md-3\" style=\"margin-left:10%;border-right: 1px solid rgba(138, 132, 132, 0.64);\">\n                                                              <!-- <p>item.modemStatistics[0].ptpInfo.xcvrType</p>\n                                                              <p>item.modemStatistics[0].ptpInfo.xcvrMode item.modemStatistics[0].ptpInfo.transmitterState</p> -->\n                                                              <table style=\"width:100%\">\n                                                                     <tr>\n                                                                       <td class=\"accordionprgData\" align=\"right\">xcvrType </td>\n                                                                       <td class=\"details-font\">{{item.OpticalSitesBasic.OpticalSitesActualState.xcvrMode}}</td>\n                                                                     </tr>\n                                                                     <tr>\n                                                                       <td class=\"accordionprgData\">Channel </td>\n                                                                       <td class=\"details-font\">{{item.OpticalSitesBasic.OpticalSitesActualState.channelNumber != undefined ? item.OpticalSitesBasic.OpticalSitesActualState.channelNumber : \"--\"}}</td>\n                                                                     </tr>\n                                                                     <tr>\n                                                                         <td class=\"accordionprgData\">Transmitter </td>\n                                                                         <td class=\"details-font\">{{item.OpticalSitesBasic.OpticalSitesActualState.transmitterState != undefined ? item.OpticalSitesBasic.OpticalSitesActualState.transmitterState : \"--\"}}</td>\n                                                                     </tr>\n                                                                     <tr>\n                                                                            <td class=\"accordionprgData\"></td>\n                                                                            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                                                     </tr>\n                                                                 </table>\n                                                            </div>\n                                                            <div class=\"col-sm-3\" style=\"border-right: 1px solid rgba(138, 132, 132, 0.64);\">\n                                                                     <table style=\"width:100%\">\n                                                                             <tr>\n                                                                               <td class=\"accordionprgData\">Wavelength </td>\n                                                                               <td class=\"details-font\">{{wavelengthPrePageData}}</td>\n                                                                             </tr>\n                                                                             <tr>\n                                                                               <td class=\"accordionprg\" (click)=\"historical_graph('TxPower', dataObj, item, graphicalhistory)\">Tx Power </td>\n                                                                               <td class=\"details-font\">{{item.OpticalSitesBasic.OpticalSitesActualState.txPowerAct}}</td>\n                                                                             </tr>\n                                                                             <tr>\n                                                                               <td class=\"accordionprg\" (click)=\"historical_graph('RxPower', dataObj, item, graphicalhistory)\">Rx Power </td>\n                                                                               <td class=\"details-font\">{{item.OpticalSitesBasic.OpticalSitesActualState.rxPowerAct}}</td>\n                                                                             </tr>\n                                                                             <tr>\n                                                                                <td class=\"accordionprgData\"> Loopback </td>\n                                                                                <td class=\"details-font\">NA</td>\n                                                                            </tr>\n                                                                     </table>\n                                                                <!-- <p>Wavelength :  {{item.wavelength}}</p> -->\n                                                              \n                                                            </div>\n                                                            <div class=\"col-md-4\">\n                                                                    <div class=\"itemdesc cl-both col-md-12\">\n                                                                      <div class=\" pull-left col-md-12\" style=\"color: #333;\">\n                                                                        <div class=\"col-sm-12 no-padding\">\n                                                                         \n                                                                        </div>\n                                                                        <div class=\"col-sm-12 no-padding\">\n                                                                          <div class=\"col-sm-4 no-padding\">\n                                                                            <p class=\"empty-cell\">AAA</p>\n                                                                            <div class=\"col-sm-12 no-padding\">\n                                                                              <p class=\"accordionprg\" (click)=\"historical_graph('Q-factor', dataObj, item, graphicalhistory)\">Q-factor</p>\n                                                                            </div>\n                                                                            <div class=\"col-sm-12 no-padding\">\n                                                                              <p class=\"accordionprg\" (click)=\"historical_graph('Pre-FEC BER', dataObj, item, graphicalhistory)\">Pre-FEC BER</p>\n                                                                            </div>\n                                                                            <!-- <div class=\"col-sm-12 no-padding\">\n                                                                              <p class=\"\">Post-FEC BER</p>\n                                                                            </div> -->\n                                                                          </div>\n                                                                          <div class=\"col-sm-3 no-padding\">\n                                                                            <p class=\"text-left text-bold details-font\">Actual</p>\n                                                                            <p class=\"details-font\">{{item.OpticalSitesAdvanced.OpticalSitesQfactor.qFactor}}</p>\n                                                                            <p class=\"details-font\">{{item.OpticalSitesAdvanced.OpticalSitesQfactor.preFecBitErrorActualRate}}</p> \n                                                                            <!-- <p>Postdata</p> -->\n                                                            <!-- <p>{{item.OpticalSitesAdvanced.OpticalSitesQfactor.fecErrorUncorrectedBlockCount}}</p>\n                                                            <p>{{item.OpticalSitesAdvanced.OpticalSitesQfactor.fecErrorHighCorrectionCountSecond}}</p> -->\n                                                                          </div>\n                                                                          <div class=\"col-sm-3 no-padding\">\n                                                                            <p class=\"text-bold text-left details-font\">Max</p>\n                                                                            <p class=\"details-font\">{{item.OpticalSitesAdvanced.OpticalSitesQfactor.qFactorMaximum}}</p>\n                                                                            <p class=\"details-font\">{{item.OpticalSitesAdvanced.OpticalSitesQfactor.preFecBitErrorMaxRate}}</p>\n                                                            <!-- <p>{{item.OpticalSitesAdvanced.OpticalSitesQfactor.statisticsMaximum}}</p> -->\n                                                                             <!-- <p>Postdata</p> -->\n                                                                          </div>\n                                                                          <div class=\"col-sm-2 no-padding\">\n                                                                            <p class=\"text-bold text-left details-font\">Min</p>\n                                                             <p class=\"details-font\">{{item.OpticalSitesAdvanced.OpticalSitesQfactor.qFactorMinimum}}</p>\n                                                                            <p class=\"details-font\">--</p>\n                                                                            <!-- <p>Postdata</p> -->\n                                                                        </div>\n                                                                        </div>\n                                                                      </div>\n                                                                    </div>\n                                                                  </div>\n                                                          </div>\n\n                                                          \n                                            \n                                             <!-- <div class=\"col-md-9\" *ngIf=\"false\">\n                                              <div class=\"itemdesc cl-both\">\n                                                <div class=\" pull-left\" style=\"color: #333;\">\n                                                  <div class=\"col-sm-3 no-padding\">\n                                                  <p class=\"empty-cell\">AAA</p>\n                                                  <p>Fec Error Count</p>\n                                                  </div>\n                                                  <div class=\"col-sm-2 no-padding\"><p class=\"text-bold text-left\">Value</p>\n                                                  <p>{{item.val.fecErrorFrameErrorCount}}</p>\n                                                  </div>\n                                                  <div class=\"col-sm-2 no-padding\" ><p class=\"text-bold text-left\" style=\"margin-left: -8px;\">Seconds</p><p>{{item.val.fecErrorHighCorrectionCountSecond}}</p></div>\n                                                  <div class=\"col-sm-3 no-padding\"><p class=\"text-bold text-left\">Uncorrected</p><p>{{item.val.fecErrorUncorrectedBlockCount}}</p></div>\n                                                  <div class=\"col-sm-2 no-padding\"><p class=\"text-bold text-left\">&nbsp;&nbsp;HCCS</p><p>{{item.val.fecErrorFrameErrorCountSecond}}</p></div>\n                                              \n                                              \n                                                </div>\n                                              </div>\n                                              \n                                            </div>  -->\n                                            <!-- <div class=\"cell\"></div>   -->\n                                        </div>\n                                        </div>\n                                        </div>\n            \n            \n            \n                                   <div class=\"ext\" *ngFor=\"let itemext of item.OpticalSitesExtended; let extIndex = index\">\n                                    <!-- <div class=\"content oddList\" *ngIf=\"!extIndex\">\n                                                No Data Found For Extended Sites\n                                    </div> -->\n                                    <div class=\"content oddList\"  *ngIf=\"extIndex\">\n                                      \n                                    <!-- <h6 style=\"width: 100%;float: left;/* color: #6363b7; */font-size: 14px;font-weight: 700;\">Port - {{item.val.port}}</h6> -->\n                                    <div class=\"col-sm-12 no-padding\">\n                                    \n                                    <accordion>\n                                    <accordion-group class=\"custom-header\" heading=\"Performance Details Port {{itemext.portName}}\" is-open=\"true\">\n                                        <div  class=\"pull-left\">\n                                            <h4 style=\"width: 100%;float: left;color: #7e920f;font-size: 23px;font-weight: 900;\">Performance Details</h4>\n                                          </div>\n                                        <div class=\"content oddList\" >\n                                        \n                                        </div>\n                                        <div class=\"col-sm-12\">\n                                            <div class=\"col-sm-5 no-padding\" style=\"padding: 0px 14px 0px 6px;\">\n                                                <div class=\"col-sm-12 no-padding\">\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p></p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">RX</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">TX</p>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-sm-12 no-padding\">\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <!-- <p>Bytes</p> -->\n                                                        <p class=\"accordionprg\" (click)=\"historical_graph('Bytes', dataObj, itemext, graphicalhistory);\">Bytes</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalSitesBytes[0].bytes}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalSitesBytes[1].bytes}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <!-- <p>Packets</p> -->\n                                                        <p class=\"accordionprg\" (click)=\"historical_graph('Packets', dataObj, itemext, graphicalhistory);\">Packets</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalSitesBytes[0].packtes}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalSitesBytes[1].packtes}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <!-- <p>CRC Error Packets</p> -->\n                                                        <p class=\"accordionprg\" (click)=\"historical_graph('CRC Error Packets', dataObj, itemext, graphicalhistory);\">CRC Error Packets</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalSitesBytes[0].crcErrorPackets}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalSitesBytes[1].crcErrorPackets}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <!-- <p>Multicast Packets</p> -->\n                                                        <p class=\"accordionprg\" (click)=\"historical_graph('Multicast Packets', dataObj, itemext, graphicalhistory);\">Multicast Packets</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalSitesBytes[0].multiCastPackets}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalSitesBytes[1].multiCastPackets}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <!-- <p>Broadcast Packets</p> -->\n                                                        <p class=\"accordionprg\" (click)=\"historical_graph('Broadcast Packets', dataObj, itemext, graphicalhistory);\">Broadcast Packets</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalSitesBytes[0].broadCastPackets}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalSitesBytes[1].broadCastPackets}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <!-- <p>Lont Out Range Packets</p> -->\n                                                        <p class=\"accordionprg\" (click)=\"historical_graph('Lont Out Range Packets', dataObj, itemext, graphicalhistory);\">Long Out Range Packets</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalSitesBytes[0].longOutOfRangePackets}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalSitesBytes[1].longOutOfRangePackets}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <!-- <p>Pause Packets</p> -->\n                                                        <p class=\"accordionprg\" (click)=\"historical_graph('Pause Packets', dataObj, itemext, graphicalhistory);\">Pause Packets</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalSitesBytes[0].pausePackets}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{itemext.OpticalSitesBytes[1].pausePackets}}</p>\n                                                    </div>\n                                                    <!-- <div class=\"col-sm-6 no-padding\">\n                                                        <p *ngIf=\"!x.isShow\">{{x.label_name}}</p>\n                                                        <p *ngIf=\"x.isShow\" class=\"accordionprg\" (click)=\"historical_graph(x.label_name,itemext,  graphicalhistory);\">{{x.label_name}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{x.rxVal}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-3 no-padding\">\n                                                        <p class=\"text-right\">{{x.rxVal}}</p>\n                                                    </div> -->\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm-3 no-padding \" style=\"border-right: 1px solid rgba(138, 132, 132, 0.64);border-left: 1px solid rgba(138, 132, 132, 0.64);padding: 0px 14px;margin-bottom: 9px;\">\n                                                <div class=\"col-sm-12 no-padding\" style=\"border-bottom: 1px solid #bfb9b9;\">\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p class=\"text-left\">Octet</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p class=\"text-right\">Rx Packets</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p (click)=\"historical_graph('64', dataObj, itemext, graphicalhistory);\" class=\"accordionprg\">64</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalSitesRxPackets._64}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p (click)=\"historical_graph('65127', dataObj, itemext, graphicalhistory);\" class=\"accordionprg\">65127</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalSitesRxPackets._65127}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p (click)=\"historical_graph('128255', dataObj, itemext, graphicalhistory);\" class=\"accordionprg\">128255</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalSitesRxPackets._128255}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p (click)=\"historical_graph('256511', dataObj, itemext, graphicalhistory);\" class=\"accordionprg\">256511</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalSitesRxPackets._256511}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p (click)=\"historical_graph('5121023', dataObj, itemext,  graphicalhistory);\" class=\"accordionprg\">5121023</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalSitesRxPackets._5121023}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p (click)=\"historical_graph('10241518', dataObj, itemext,  graphicalhistory);\" class=\"accordionprg\">10241518</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalSitesRxPackets._10241518}}</p>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-sm-12 no-padding\">\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p></p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p class=\"text-right\">Packets</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p (click)=\"historical_graph('Undersize', dataObj, itemext,  graphicalhistory);\" class=\"accordionprg\">Undersize</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalSitesRxPackets.undersize}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p (click)=\"historical_graph('Oversize', dataObj, itemext, graphicalhistory);\" class=\"accordionprg\">Oversize</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalSitesRxPackets.oversize}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p (click)=\"historical_graph('Fragment', dataObj, itemext, graphicalhistory);\" class=\"accordionprg\">Fragment</p>\n                                                      </div>\n                                                      <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalSitesRxPackets.fragment}}</p>\n                                                      </div>\n                                                   \n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p (click)=\"historical_graph('Jabbers', dataObj, itemext, graphicalhistory);\" class=\"accordionprg\">Jabbers</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalSitesRxPackets.jabbers}}</p>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm-2 no-padding\" style=\"padding: 0px 12px;border-right: 1px solid rgba(138, 132, 132, 0.64);\">\n                                                <div class=\"col-sm-12 no-padding\">\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p class=\"text-left\">Queue</p><br>\n                                                        <p (click)=\"historical_graph('Q0', dataObj, itemext, graphicalhistory);\" class=\"accordiontblalign\">Q0</p>\n                                                        <p (click)=\"historical_graph('Q1', dataObj, itemext, graphicalhistory);\" class=\"accordiontblalign\">Q1</p>\n                                                        <p (click)=\"historical_graph('Q2', dataObj, itemext, graphicalhistory);\" class=\"accordiontblalign\">Q2</p>\n                                                        <p (click)=\"historical_graph('Q3', dataObj, itemext, graphicalhistory);\" class=\"accordiontblalign\">Q3</p>\n                                                        <p (click)=\"historical_graph('Q4', dataObj, itemext, graphicalhistory);\" class=\"accordiontblalign\">Q4</p>\n                                                        <p (click)=\"historical_graph('Q5', dataObj, itemext, graphicalhistory);\" class=\"accordiontblalign\">Q5</p>\n                                                        <p (click)=\"historical_graph('Q6', dataObj, itemext, graphicalhistory);\" class=\"accordiontblalign\">Q6</p>\n                                                        <p (click)=\"historical_graph('Q7', dataObj, itemext, graphicalhistory);\" class=\"accordiontblalign\">Q7</p>\n                                                        <p (click)=\"historical_graph('Queue Summary TX Drop Packets', dataObj, itemext, graphicalhistory);\" class=\"accordiontblalign\">Summary</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p class=\"text-right\">Tx Drop Packets</p>\n                                                        <p>{{itemext.OpticalSitesTxPackets.Q0}}</p>\n                                                        <p>{{itemext.OpticalSitesTxPackets.Q1}}</p>\n                                                        <p>{{itemext.OpticalSitesTxPackets.Q2}}</p>\n                                                        <p>{{itemext.OpticalSitesTxPackets.Q3}}</p>\n                                                        <p>{{itemext.OpticalSitesTxPackets.Q4}}</p>\n                                                        <p>{{itemext.OpticalSitesTxPackets.Q5}}</p>\n                                                        <p>{{itemext.OpticalSitesTxPackets.Q6}}</p>\n                                                        <p>{{itemext.OpticalSitesTxPackets.Q7}}</p>\n                                                        <p>{{itemext.OpticalSitesTxPackets.summary}}</p>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm-2 no-padding\" style=\"padding-left: 5px;\">\n                                                <div class=\"col-sm-12 no-padding\" style=\"border-bottom: 1px solid #bfb9b9;\">\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p class=\"head_bold\"></p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p class=\"head_bold\">Tx Packets</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p (click)=\"historical_graph('Excess Defer', dataObj, itemext,  graphicalhistory);\" class=\"accordionprg\">Excess Defer</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalSitesTxPackets.excessDefer}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p (click)=\"historical_graph('Giant', dataObj, itemext,  graphicalhistory);\" class=\"accordionprg\">Giant</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalSitesTxPackets.gaint}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p (click)=\"historical_graph('Underun', dataObj, itemext,  graphicalhistory);\" class=\"accordionprg\">Underun</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalSitesTxPackets.underRun}}</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p (click)=\"historical_graph('Long Check Error', dataObj, itemext, graphicalhistory);\" class=\"accordionprg\">Long Check Error</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalSitesTxPackets.longCheck}}</p>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-sm-12 no-padding\">\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p class=\"head_bold\"></p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p class=\"head_bold\">Mac Layer</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding\">\n                                                        <p class=\"accordionprg\" (click)=\"historical_graph('Unavailable Seconds', dataObj, itemext, graphicalhistory);\">Unavailable Seconds</p>\n                                                    </div>\n                                                    <div class=\"col-sm-6 no-padding rightalgn\">\n                                                        <p>{{itemext.OpticalSitesTxPackets.unavailableSeconds}}</p>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                          </div>\n                                        \n                                    </accordion-group>\n                                 </accordion>\n                                </div>\n                                    </div>\n                                </div>\n                                  </div>\n                                </accordion-group>\n                              </accordion>\n                            \n                    </div>\n                  </accordion-group>\n                </accordion>\n        </div>\n\n    </div>\n\n    \n    </section>\n</section>\n\n\n<ng-template #graphicalhistory>\n    <div class=\"modal-header\"> \n        <button class=\"close pull-right\" aria-label=\"Close\" (click)=\"modelClose()\">&times;</button>\n        <h4 class=\"modal-title\">Graph View - {{header_hostname}}</h4>\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"row\">\n            <div class=\"col-md-12\" style=\"margin-left: -22px;\">\n                <!-- <div class=\"col-md-4 modalRef.hide()\">\n                        \n                </div> -->\n                <div class='col-xs-12 col-sm-6 col-md-6 col-lg-12'>\n                        <button *ngIf=\"!modalLoaders\" class=\"btn btn-info btn-sm algn\" [ngClass]='{\"active\":btnStauts.nrtbtn}' (click)=\"reportTypeView('nrt',properActionSet, proObj)\" type=\"submit\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> Near Real Time</button>\n                        <button *ngIf=\"!modalLoaders\" class=\"btn btn-info btn-sm algn\" [ngClass]='{\"active\":btnStauts.yesbtn}' (click)=\"reportTypeView('yesterday',properActionSet, proObj)\" type=\"submit\" name=\"Yesterday\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> Yesterday</button>\n                        <button *ngIf=\"!modalLoaders\" class=\"btn btn-info btn-sm algn\" [ngClass]='{\"active\":btnStauts.weekbtn}' (click)=\"reportTypeView('week',properActionSet, proObj)\" type=\"submit\" name=\"week\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> Week</button>\n                        <button *ngIf=\"!modalLoaders\" class=\"btn btn-info btn-sm algn\" [ngClass]='{\"active\":btnStauts.monthbtn}' (click)=\"reportTypeView('month',properActionSet, proObj)\" type=\"submit\" name=\"month\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> Month</button>\n                        <div class=\"picker algn\" *ngIf=\"!modalLoaders\">                    \n                            <div class=\"input-group datetimepicker-start-end\">\n                                <input bsDatepicker  (ngModelChange)=\"getLists($event ,toDate)\" type=\"text\" class=\"form-control\" [(ngModel)]=\"fromDate\" [maxDate]=\"maxDate\" [bsConfig]=\"{ dateInputFormat: 'YYYY-MM-DD' }\" id=\"datetimepicker-start\" placeholder=\"From Date\" aria-invalid=\"false\"><span>to</span>\n                                <input bsDatepicker  (ngModelChange)=\"getLists(fromDate,$event)\" type=\"text\" class=\"form-control\" [(ngModel)]=\"toDate\" [bsConfig]=\"{ dateInputFormat: 'YYYY-MM-DD' }\" id=\"datetimepicker-end\" placeholder=\"To Date\" aria-invalid=\"false\" [minDate]=\"fromDate\" [maxDate]=\"maxDate\">\n                            </div>\n                            <i class=\"fa fa-calendar start-end-icon\" aria-hidden=\"true\"></i>\n                        </div>\n                      \n                      </div>\n                \n            </div>\n            <div class=\"col-md-12\">\n                <content-loader *ngIf=\"modalLoaders\"></content-loader>\n                <div *ngIf=\"!modalLoaders && graphWaterMarkers\" style=\"margin-top:22px; text-align: center;\">\n                        <h1> <i class=\"fa fa-fw fa-calendar-times-o fa-1x\"></i> No Records Found</h1>\n                    </div>\n                \n                <div *ngIf=\"!modalLoaders && !graphWaterMarkers\" class='pos-rel' id=\"waveLinePortGraphUniqId\"><br>\n                    <div class=\"graphdiv\">\n                      \n                        <h4 class=\"popuph4\"><span class=\"graphTopHeading\">{{popGraphTitleOne}}</span></h4>\n                        <div class=\"pull-right downloadoptions\" *ngIf=\"!modalLoaders && !graphWaterMarkers\" style=\"padding: 3px 0px;\">\n                                <ul class=\"box-title-right\">\n                                    <li><img src=\"" + __webpack_require__(500) + "\" (click)=\"excelDownlod(graphData1, reportName)\"></li>\n                                       <!-- <li><img src=\"../../../assets/images/pdf.png\" (click)=\"pdfDownload(reportName,'')\"></li> -->\n                                </ul>\n                        </div> \n                        <nvd3 class=\"opticalnvd3\" [hidden]=\"!popupGraph\" [options]=\"options\" [data]=\"graphData1\"></nvd3>\n                        <!-- <svg height=\"180\" width=\"500\" id=\"newsvg\">\n                            <polyline points=\"0,40 40,40 40,80 80,80 80,120 120,120 120,160\" style=\"fill:white;stroke:red;stroke-width:4\" />\n                            Sorry, your browser does not support inline SVG.\n                          </svg> -->\n                    </div>\n                    <div class=\"graphdiv\" *ngIf=\"isTxDataDetails\">\n                        <h4 class=\"popuph4\"><span class=\"graphTopHeading\">{{popGraphTitleTwo}}</span></h4>\n                        <div class=\"pull-right downloadoptions\" *ngIf=\"!modalLoaders && !graphWaterMarkers\" style=\"padding: 3px 0px;\">\n                                <ul class=\"box-title-right\">\n                                    <li><img src=\"" + __webpack_require__(500) + "\" (click)=\"excelDownlod(graphData2, reportName2)\"></li>\n                                       <!-- <li><img src=\"../../../assets/images/pdf.png\" (click)=\"pdfDownload()\"></li> -->\n                                </ul>\n                        </div> \n                        <nvd3 class=\"opticalnvd3\" [hidden]=\"!popupGraph\" [options]=\"options2\" [data]=\"graphData2\"></nvd3>\n                    </div>\n                    <div class=\"graphdiv\" *ngIf=\"isTxDataDetails2\">\n                            <h4 class=\"popuph4\"><span class=\"graphTopHeading\">{{popGraphTitleThree}}</span></h4>\n                            <div class=\"pull-right downloadoptions\" *ngIf=\"!modalLoaders && !graphWaterMarkers\" style=\"padding: 3px 0px;\">\n                                    <ul class=\"box-title-right\">\n                                        <li><img src=\"" + __webpack_require__(500) + "\" (click)=\"excelDownlod(graphData3, reportName3)\"></li>\n                                           <!-- <li><img src=\"../../../assets/images/pdf.png\" (click)=\"pdfDownload()\"></li> -->\n                                    </ul>\n                            </div> \n                            <nvd3 class=\"opticalnvd3\" [hidden]=\"!popupGraph\" [options]=\"options3\" [data]=\"graphData3\"></nvd3>\n                        </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </ng-template>";

/***/ }),

/***/ 1628:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var router_1 = __webpack_require__(48);
var index_1 = __webpack_require__(1371);
var OPTICAL_ROUTER = [
    {
        path: '',
        component: index_1.OpticalComponent,
        pathMatch: 'full'
    }
];
exports.OpticalRouter = router_1.RouterModule.forChild(OPTICAL_ROUTER);
var ALARMS_ROUTER = [
    {
        path: '',
        component: index_1.AlarmsComponent,
        pathMatch: 'full'
    }
];
exports.AlarmsRouter = router_1.RouterModule.forChild(ALARMS_ROUTER);
var OPTICAL_SERVICES_ROUTER = [
    {
        path: '',
        component: index_1.WaveServiceComponent,
        pathMatch: 'full'
    }
];
exports.OpticalSerivicesRouter = router_1.RouterModule.forChild(OPTICAL_SERVICES_ROUTER);
var OPTICAL_PORTS_ROUTER = [
    {
        path: '',
        component: index_1.OpticalPortsComponent,
        pathMatch: 'full'
    }
];
exports.OpticalPortsRouter = router_1.RouterModule.forChild(OPTICAL_PORTS_ROUTER);
var OPTICAL_SERVICE_DETAILS_ROUTER = [
    {
        path: '',
        component: index_1.ServiceDetailsComponent,
        pathMatch: 'full'
    }
];
exports.OpticalServiceDetailsRouter = router_1.RouterModule.forChild(OPTICAL_SERVICE_DETAILS_ROUTER);
var LINE_PORT_GRID_ROUTER = [
    {
        path: '',
        component: index_1.LinePortGridComponent,
        pathMatch: 'full'
    }
];
exports.LinePortGridRouter = router_1.RouterModule.forChild(LINE_PORT_GRID_ROUTER);


/***/ }),

/***/ 88:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var index_1 = __webpack_require__(1371);
var optical_router_1 = __webpack_require__(1628);
var shared_module_1 = __webpack_require__(497);
var common_1 = __webpack_require__(6);
var core_2 = __webpack_require__(1372);
/* Module Start */
var OpticalModule = /** @class */ (function () {
    function OpticalModule() {
    }
    OpticalModule = __decorate([
        core_1.NgModule({
            imports: [common_1.CommonModule, shared_module_1.SharedModule, core_2.AgmCoreModule.forRoot({
                    // apiKey: 'AIzaSyDV2Pi7Fpz1aSyhsNMg5Kr-8OkPScpqvm0'
                    apiKey: 'AIzaSyDYMyY41Z6WCBsqSw2DEq1av-Hqw9DZA-E'
                }), optical_router_1.OpticalRouter],
            declarations: [
                index_1.OpticalComponent,
            ],
        })
    ], OpticalModule);
    return OpticalModule;
}());
exports.OpticalModule = OpticalModule;
/* Module End */
/* Module Start */
var AlarmsModule = /** @class */ (function () {
    function AlarmsModule() {
    }
    AlarmsModule = __decorate([
        core_1.NgModule({
            imports: [common_1.CommonModule, shared_module_1.SharedModule, optical_router_1.AlarmsRouter],
            declarations: [
                index_1.AlarmsComponent,
            ],
        })
    ], AlarmsModule);
    return AlarmsModule;
}());
exports.AlarmsModule = AlarmsModule;
/* Module End */
/* Module Start */
var OpticalSerivicesModule = /** @class */ (function () {
    function OpticalSerivicesModule() {
    }
    OpticalSerivicesModule = __decorate([
        core_1.NgModule({
            imports: [common_1.CommonModule, shared_module_1.SharedModule, optical_router_1.OpticalSerivicesRouter],
            declarations: [
                index_1.WaveServiceComponent,
            ],
        })
    ], OpticalSerivicesModule);
    return OpticalSerivicesModule;
}());
exports.OpticalSerivicesModule = OpticalSerivicesModule;
/* Module End */
/* Module Start */
var OpticalPortsModule = /** @class */ (function () {
    function OpticalPortsModule() {
    }
    OpticalPortsModule = __decorate([
        core_1.NgModule({
            imports: [common_1.CommonModule, shared_module_1.SharedModule, optical_router_1.OpticalPortsRouter],
            declarations: [
                index_1.OpticalPortsComponent,
            ],
        })
    ], OpticalPortsModule);
    return OpticalPortsModule;
}());
exports.OpticalPortsModule = OpticalPortsModule;
/* Module End */
/* Module Start optical-service-details */
var OpticalServiceDetailsModule = /** @class */ (function () {
    function OpticalServiceDetailsModule() {
    }
    OpticalServiceDetailsModule = __decorate([
        core_1.NgModule({
            imports: [common_1.CommonModule, shared_module_1.SharedModule, optical_router_1.OpticalServiceDetailsRouter],
            declarations: [
                index_1.ServiceDetailsComponent,
            ],
        })
    ], OpticalServiceDetailsModule);
    return OpticalServiceDetailsModule;
}());
exports.OpticalServiceDetailsModule = OpticalServiceDetailsModule;
/* Module End */
/* Module Start optical-service-details */
var LinePortGridModule = /** @class */ (function () {
    function LinePortGridModule() {
    }
    LinePortGridModule = __decorate([
        core_1.NgModule({
            imports: [common_1.CommonModule, shared_module_1.SharedModule, optical_router_1.LinePortGridRouter],
            declarations: [
                index_1.LinePortGridComponent,
            ],
        })
    ], LinePortGridModule);
    return LinePortGridModule;
}());
exports.LinePortGridModule = LinePortGridModule;
/* Module End */


/***/ })

});]]></script>
        <script_name>0.89aadbab.chunk</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-11-20 07:16:40</sys_created_on>
        <sys_id>50b6c9cbdb3d2300429e2a9a4896190c</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>x_293519_princenew.0.89aadbab.chunk</sys_name>
        <sys_package display_value="princenew" source="x_293519_princenew">26ca3025dbfd2300429e2a9a48961958</sys_package>
        <sys_policy/>
        <sys_scope display_value="princenew">26ca3025dbfd2300429e2a9a48961958</sys_scope>
        <sys_update_name>sys_ui_script_50b6c9cbdb3d2300429e2a9a4896190c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-11-20 07:21:02</sys_updated_on>
        <ui_type>0</ui_type>
        <use_scoped_format>false</use_scoped_format>
    </sys_ui_script>
</record_update>
